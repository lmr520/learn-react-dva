{"version":3,"sources":["components/Charts/G2/G2.js","components/Charts/G2/index.js","decorator/resizeMe.js","assets/images/kkk.png","assets/images/a6.jpg","assets/images/a2.jpg","assets/images/a3.jpg","assets/images/a4.jpg","assets/images/a5.jpg","routes/Dashboard/components/index.js","components/Panel/Panel.js","components/Panel/index.js"],"names":["Chart","BizCharts","Charts","resizeMe","refreshRate","onGetG2Instance","chart","_this","_this2","this","_this$props","props","size","children","otherProps","Object","objectWithoutProperties","width","height","react_default","a","createElement","assign","padding","PureComponent","track","setTheme","defaultColor","shape","interval","fillOpacity","G2","debounce","$$","throttle","defaultConfig","refreshMode","config","arguments","length","undefined","refreshFunc","WrappedComponent","_PureComponent","_temp","E_react_learn_react_dva_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","E_react_learn_react_dva_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","E_react_learn_react_dva_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","onResize","element","parentNode","_getComputedStyle","getComputedStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","parseInt","setState","onResizeStrategy","state","position","E_react_learn_react_dva_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","E_react_learn_react_dva_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","value","resizeSensor","ResizeSensor","detach","_this$state","className","E_react_learn_react_dva_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_7___default","ref","node","style","E_react_learn_react_dva_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","module","exports","__webpack_require__","p","Content","Axis","Geom","Tooltip","Legend","rankingListData","Coord","Label","i","push","title","concat","total","Dashboard","connect","_ref","dashboard","bar2","bar1","react__WEBPACK_IMPORTED_MODULE_13___default","antd_lib_layout__WEBPACK_IMPORTED_MODULE_12___default","antd_lib_row__WEBPACK_IMPORTED_MODULE_3___default","gutter","antd_lib_carousel__WEBPACK_IMPORTED_MODULE_5___default","autoplay","src","require","alt","antd_lib_col__WEBPACK_IMPORTED_MODULE_1___default","md","components_Panel__WEBPACK_IMPORTED_MODULE_17__","header","cover","components_Icon__WEBPACK_IMPORTED_MODULE_15__","type","antd","Bar2","data","map","item","BaseComponent","dv","DataSet","createView","source","transform","fields","name","crosshairs","color","adjust","marginRatio","confirm","modal_default","noop","_","Panel","classCallCheck","possibleConstructorReturn","getPrototypeOf","onExpand","expand","e","onChange","collapse","onCollapse","onRefresh","refresh","animationName","onClose","content","onOk","nextProps","st","keys","theme","prefix","scroll","classnames","cx","panel-fullscreen","panel-collapsed","styles","objectSpread","bodyStyles","overflow","Header","onClick","Icon","popconfirm_default","onConfirm","placement","CSSAnimate","callback","Component","defaultProps"],"mappings":"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","file":"static/js/30.73560bfa.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport * as BizCharts from 'bizcharts';\r\nimport resizeMe from '@/decorator/resizeMe';\r\nconst { Chart } = BizCharts;\r\n\r\n/**\r\n * 重写BizCharts的Chart，主要目地是传入外部size\r\n * BizCharts已经很好的封装了g2，最好的使用方式不是重造轮子，而是快速使用官网中的例子，并完美展现在我们的框架中\r\n * 所以我们没有新建Bar,Line,Pie这些组件，增加使用和学习的成本：）\r\n */\r\n@resizeMe({ refreshRate: 50 })\r\nclass Charts extends PureComponent {\r\n  onGetG2Instance = chart => {\r\n    this.chart = chart;\r\n  }\r\n\r\n  render() {\r\n    const { size, children, ...otherProps } = this.props;\r\n    const { width, height } = size;\r\n\r\n    return (\r\n      <Chart \r\n        height={height} \r\n        width={width} \r\n        padding={'auto'} \r\n        {...otherProps}\r\n        onGetG2Instance={(chart) => {\r\n          this.chart = chart;\r\n        }}\r\n      >\r\n        {children}\r\n      </Chart>\r\n    );\r\n  }\r\n}\r\n\r\nBizCharts.Chart = Charts;\r\nexport default BizCharts;\r\n","// 全局 G2 设置\r\nimport { track, setTheme } from 'bizcharts';\r\nimport G2 from './G2';\r\n\r\nconst config = {\r\n  defaultColor: '#1089ff',\r\n  shape: {\r\n    interval: {\r\n      fillOpacity: 1\r\n    }\r\n  }\r\n};\r\n\r\ntrack(false);\r\nsetTheme(config);\r\nexport default G2;\r\n","import React, { PureComponent } from 'react';\r\nimport ResizeSensor from 'css-element-queries/src/ResizeSensor';\r\nimport $$ from 'cmn-utils';\r\nconst { debounce, throttle } = $$;\r\n\r\n/**\r\n * 在一个类上增加这个装饰器，可以监听组件的大小变化，\r\n * 被包装的类在porps中将注入组件的width和height，并且\r\n * 在上级函组件中可以使用onResize函数\r\n * @param {*} config\r\n */\r\nconst defaultConfig = {\r\n  refreshRate: 16, // 调用频率\r\n  refreshMode: 'throttle' // 使用函数，只能是节流或防抖函数[throttle | debounce]\r\n};\r\n\r\nconst resizeMe = (config = defaultConfig) => {\r\n  const refreshFunc = config.refreshMode === 'throttle' ? throttle : debounce;\r\n\r\n  return WrappedComponent => {\r\n    return class extends PureComponent {\r\n      constructor(props) {\r\n        super(props);\r\n        this.onResizeStrategy = refreshFunc(this.onResize, config.refreshRate);\r\n        this.state = {\r\n          width: undefined,\r\n          height: undefined,\r\n          position: undefined\r\n        };\r\n      }\r\n\r\n      componentDidMount() {\r\n        const element = this.element.parentNode;\r\n        this.resizeSensor = new ResizeSensor(element, this.onResizeStrategy);\r\n        this.onResizeStrategy();\r\n      }\r\n\r\n      componentWillUnmount() {\r\n        const element = this.element.parentNode;\r\n        this.resizeSensor.detach(element, this.onResizeStrategy);\r\n      }\r\n\r\n      onResize = () => {\r\n        if (!this.element) return;\r\n\r\n        const element = this.element.parentNode;\r\n        const { onResize } = this.props;\r\n        const {\r\n          width,\r\n          height,\r\n          paddingLeft,\r\n          paddingRight,\r\n          paddingTop,\r\n          paddingBottom\r\n        } = getComputedStyle(element);\r\n\r\n        const size = {\r\n          width:\r\n            parseInt(width, 10) -\r\n            parseInt(paddingLeft, 10) -\r\n            parseInt(paddingRight, 10),\r\n          height:\r\n            parseInt(height, 10) -\r\n            parseInt(paddingTop, 10) -\r\n            parseInt(paddingBottom, 10)\r\n        };\r\n        this.setState(size);\r\n\r\n        onResize && onResize(size);\r\n      };\r\n\r\n      render() {\r\n        const { width, height } = this.state;\r\n        const { className, ...otherProps } = this.props;\r\n        const styles = {\r\n          position: 'relative',\r\n          width: '100%',\r\n          height: '100%'\r\n        };\r\n        return (\r\n          <div\r\n            ref={node => (this.element = node)}\r\n            style={styles}\r\n            className={className}\r\n          >\r\n            {width && height ? (\r\n              <WrappedComponent {...otherProps} size={{ ...this.state }} />\r\n            ) : null}\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n  };\r\n};\r\n\r\nexport default resizeMe;\r\n","module.exports = __webpack_public_path__ + \"static/media/kkk.706a1f5c.png\";","module.exports = __webpack_public_path__ + \"static/media/a6.8ecaed78.jpg\";","module.exports = __webpack_public_path__ + \"static/media/a2.98424c30.jpg\";","module.exports = __webpack_public_path__ + \"static/media/a3.6462edda.jpg\";","module.exports = __webpack_public_path__ + \"static/media/a4.a1e0c8a7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/a5.1f885b4a.jpg\";","import React from 'react';\r\nimport { connect } from 'dva';\r\nimport { Layout, Col, Row,Carousel} from 'antd';\r\nimport Icon from 'components/Icon';\r\nimport BaseComponent from 'components/BaseComponent';\r\nimport Panel from 'components/Panel';\r\nimport G2 from 'components/Charts/G2';\r\nimport DataSet from '@antv/data-set';\r\nimport './index.less';\r\nconst { Content } = Layout;\r\nconst { Chart, Axis, Geom, Tooltip, Legend, Coord, Label } = G2;\r\n\r\nconst rankingListData = [];\r\nfor (let i = 0; i < 7; i += 1) {\r\n  rankingListData.push({\r\n    title: `浙江区 ${i} 号分公司`,\r\n    total: 323234-i*10\r\n  });\r\n}\r\n\r\n@connect(({ dashboard }) => ({\r\n  dashboard\r\n}))\r\nexport default class Dashboard extends BaseComponent {\r\n  render() {\r\n    const { dashboard } = this.props;\r\n    const { bar1, bar2 } = dashboard;\r\n    return (\r\n      <Layout className=\"full-layout page dashboard-page\">\r\n        <Content>\r\n\r\n          <Row gutter={20}>\r\n     \r\n          <Carousel autoplay className=\"carou\">\r\n    <div> <img className=\"img-co\" src={require('assets/images/kkk.png')} alt=\"\"/></div>\r\n    <div> <img  className=\"img-co\" src={require('assets/images/a2.jpg')} alt=\"\"/></div>\r\n    <div> <img className=\"img-co\" src={require('assets/images/a3.jpg')} alt=\"\"/></div>\r\n    <div> <img className=\"img-co\" src={require('assets/images/a4.jpg')} alt=\"\"/></div>\r\n    <div> <img className=\"img-co\" src={require('assets/images/a5.jpg')} alt=\"\"/></div>\r\n    <div> <img className=\"img-co\" src={require('assets/images/a6.jpg')} alt=\"\"/></div>\r\n  </Carousel>\r\n\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col md={6}>\r\n              <Panel className=\"qq\" header={false} cover>\r\n                <Icon type=\"qq\" antd />\r\n                <h2>\r\n                  <b>523</b>\r\n                </h2>\r\n                <h5 className=\"text-muted\">财务</h5>\r\n              </Panel>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Panel className=\"wechat\" header={false} cover>\r\n                <Icon type=\"wechat\" antd />\r\n                <h2>\r\n                  <b>99+</b>\r\n                </h2>\r\n                <h5 className=\"text-muted\">税务</h5>\r\n              </Panel>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Panel className=\"skype\" header={false} cover>\r\n                <Icon type=\"skype\" antd />\r\n                <h2>\r\n                  <b>2</b>\r\n                </h2>\r\n                <h5 className=\"text-muted\">采购</h5>\r\n              </Panel>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Panel className=\"github\" header={false} cover>\r\n                <Icon type=\"github\" antd />\r\n                <h2>\r\n                  <b>999</b>\r\n                </h2>\r\n                <h5 className=\"text-muted\">销售</h5>\r\n              </Panel>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Panel title=\"大数据展示\" height={300}>\r\n                <div className=\"flex\">\r\n                  <div className=\"flex-auto-hidden flex flex-column\">\r\n                    <h4 className=\"flex-none\">销售额分布</h4>\r\n                    <div className=\"flex-auto-hidden\">\r\n                      <Bar2 data={bar2} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex-none sales-order\">\r\n                    <h4>浙江区销售排名</h4>\r\n                    <ul>\r\n                      {rankingListData.map((item, i) => (\r\n                        <li key={item.title}>\r\n                          <span>{i + 1}</span>\r\n                          <span>{item.title}</span>\r\n                          <span>{item.total}</span>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </Panel>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            {/* <Col md={8}>\r\n              <Panel title=\"折线图\" height={260}>\r\n                <Line1 />\r\n              </Panel>\r\n            </Col>\r\n            <Col md={8}>\r\n              <Panel title=\"饼图\" height={260}>\r\n                <Pie1 />\r\n              </Panel>\r\n            </Col>\r\n            <Col md={8}>\r\n              <Panel title=\"柱状图\" height={260}>\r\n                <Bar1 data={bar1} />\r\n              </Panel>\r\n            </Col> */}\r\n          </Row>\r\n        </Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n// source https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/bar/basic-column\r\nconst Bar1 = props => {\r\n  return (\r\n    <Chart data={props.data} scale={{ sales: { tickInterval: 20 } }}>\r\n      <Axis name=\"year\" />\r\n      <Axis name=\"sales\" />\r\n      <Tooltip crosshairs={{ type: 'y' }} />\r\n      <Geom\r\n        type=\"interval\"\r\n        position=\"year*sales\"\r\n        color={[\r\n          'year',\r\n          ['#3da0ff', '#51ca73', '#fad337', '#424e87', '#985ce6']\r\n        ]}\r\n      />\r\n    </Chart>\r\n  );\r\n};\r\n\r\n// source https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/bar/grouped-column\r\nconst Bar2 = props => {\r\n  const ds = new DataSet();\r\n  const dv = ds.createView().source(props.data);\r\n  dv.transform({\r\n    type: 'fold',\r\n    fields: ['Jan.', 'Feb.', 'Mar.', 'Apr.', 'May.', 'Jun.', 'Jul.', 'Aug.'], // 展开字段集\r\n    key: '月份', // key字段\r\n    value: '月均降雨量' // value字段\r\n  });\r\n  return (\r\n    <Chart data={dv}>\r\n      <Axis name=\"月份\" />\r\n      <Axis name=\"月均降雨量\" />\r\n      <Legend />\r\n      <Tooltip crosshairs={{ type: 'y' }} />\r\n      <Geom\r\n        type=\"interval\"\r\n        position=\"月份*月均降雨量\"\r\n        color={'name'}\r\n        adjust={[{ type: 'dodge', marginRatio: 1 / 32 }]}\r\n      />\r\n    </Chart>\r\n  );\r\n};\r\n\r\nconst Pie1 = props => {\r\n  const data = [\r\n    { item: '事例一', count: 40 },\r\n    { item: '事例二', count: 21 },\r\n    { item: '事例三', count: 17 },\r\n    { item: '事例四', count: 13 },\r\n    { item: '事例五', count: 9 }\r\n  ];\r\n\r\n  const dv = new DataSet.DataView();\r\n  dv.source(data).transform({\r\n    type: 'percent',\r\n    field: 'count',\r\n    dimension: 'item',\r\n    as: 'percent'\r\n  });\r\n  const cols = {\r\n    percent: {\r\n      formatter: val => {\r\n        val = val * 100 + '%';\r\n        return val;\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Chart data={dv} scale={cols} padding={10}>\r\n      <Coord type={'theta'} radius={0.75} innerRadius={0.6} />\r\n      <Axis name=\"percent\" />\r\n      <Legend\r\n        position=\"right\"\r\n        offsetY={-window.innerHeight / 2 + 120}\r\n        offsetX={-100}\r\n      />\r\n      <Tooltip\r\n        showTitle={false}\r\n        itemTpl=\"<li><span style=&quot;background-color:{color};&quot; class=&quot;g2-tooltip-marker&quot;></span>{name}: {value}</li>\"\r\n      />\r\n      <Geom\r\n        type=\"intervalStack\"\r\n        position=\"percent\"\r\n        color=\"item\"\r\n        tooltip={[\r\n          'item*percent',\r\n          (item, percent) => {\r\n            percent = percent * 100 + '%';\r\n            return {\r\n              name: item,\r\n              value: percent\r\n            };\r\n          }\r\n        ]}\r\n        style={{ lineWidth: 1, stroke: '#fff' }}\r\n      >\r\n        <Label\r\n          content=\"percent\"\r\n          formatter={(val, item) => {\r\n            return item.point.item + ': ' + val;\r\n          }}\r\n        />\r\n      </Geom>\r\n    </Chart>\r\n  );\r\n};\r\n\r\n// https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/line/series\r\nconst Line1 = props => {\r\n  const data = [\r\n    { month: 'Jan', Tokyo: 7.0, London: 3.9 },\r\n    { month: 'Feb', Tokyo: 6.9, London: 4.2 },\r\n    { month: 'Mar', Tokyo: 9.5, London: 5.7 },\r\n    { month: 'Apr', Tokyo: 14.5, London: 8.5 },\r\n    { month: 'May', Tokyo: 18.4, London: 11.9 },\r\n    { month: 'Jun', Tokyo: 21.5, London: 15.2 },\r\n    { month: 'Jul', Tokyo: 25.2, London: 17.0 },\r\n    { month: 'Aug', Tokyo: 26.5, London: 16.6 },\r\n    { month: 'Sep', Tokyo: 23.3, London: 14.2 },\r\n    { month: 'Oct', Tokyo: 18.3, London: 10.3 },\r\n    { month: 'Nov', Tokyo: 13.9, London: 6.6 },\r\n    { month: 'Dec', Tokyo: 9.6, London: 4.8 }\r\n  ];\r\n  const ds = new DataSet();\r\n  const dv = ds.createView().source(data);\r\n  dv.transform({\r\n    type: 'fold',\r\n    fields: ['Tokyo', 'London'], // 展开字段集\r\n    key: 'city', // key字段\r\n    value: 'temperature' // value字段\r\n  });\r\n\r\n  const cols = {\r\n    month: {\r\n      range: [0, 1]\r\n    }\r\n  };\r\n  return (\r\n    <Chart data={dv} scale={cols}>\r\n      <Legend />\r\n      <Axis name=\"month\" />\r\n      <Axis name=\"temperature\" label={{ formatter: val => `${val}°C` }} />\r\n      <Tooltip crosshairs={{ type: 'y' }} />\r\n      <Geom type=\"line\" position=\"month*temperature\" size={2} color={'city'} />\r\n      <Geom\r\n        type=\"point\"\r\n        position=\"month*temperature\"\r\n        size={4}\r\n        shape={'circle'}\r\n        color={'city'}\r\n        style={{ stroke: '#fff', lineWidth: 1 }}\r\n      />\r\n    </Chart>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport Icon from '../Icon';\r\nimport cx from 'classnames';\r\nimport CSSAnimate from '../CSSAnimate';\r\nimport { Popconfirm, Modal } from 'antd';\r\nimport './style/index.less';\r\nconst confirm = Modal.confirm;\r\nconst noop = _ => {};\r\n/**\r\n * 面板组件\r\n */\r\nclass Panel extends Component {\r\n  static defaultProps = {\r\n    prefix: 'antui-panel'\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapse: props.collapse || false,\r\n      expand: props.expand || false,\r\n      refresh: 0,\r\n      animationName: ''\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const st = {};\r\n    if ('collapse' in nextProps) {\r\n      st.collapse = true;\r\n    } else if ('expand' in nextProps) {\r\n      st.expand = true;\r\n    }\r\n    if (Object.keys(st).length) {\r\n      this.setState(st);\r\n    }\r\n  }\r\n\r\n  onExpand = expand => e => {\r\n    const { onChange } = this.props;\r\n\r\n    this.setState({\r\n      expand,\r\n      collapse: false\r\n    });\r\n\r\n    if (onChange) {\r\n      onChange({\r\n        expand,\r\n        collapse: false\r\n      });\r\n    }\r\n  };\r\n\r\n  onCollapse = collapse => e => {\r\n    const { onChange } = this.props;\r\n\r\n    this.setState({\r\n      collapse,\r\n      expand: false\r\n    });\r\n\r\n    if (onChange) {\r\n      onChange({\r\n        collapse,\r\n        expand: false\r\n      });\r\n    }\r\n  };\r\n\r\n  onRefresh = () => {\r\n    this.setState({\r\n      refresh: this.state.refresh + 1,\r\n      animationName: 'fadeIn'\r\n    });\r\n    this.props.onRefresh && this.props.onRefresh();\r\n  };\r\n\r\n  onClose = () => {\r\n    const { expand } = this.state;\r\n    if (expand) {\r\n      confirm({\r\n        title: '提示',\r\n        content: '您确认要关闭这个面板？',\r\n        onOk: () => {\r\n          this.props.onClose && this.props.onClose();\r\n        }\r\n      });\r\n    } else {\r\n      this.props.onClose && this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { expand, collapse, refresh, animationName } = this.state;\r\n    const {\r\n      theme,\r\n      prefix,\r\n      className,\r\n      title,\r\n      width,\r\n      height,\r\n      style,\r\n      children,\r\n      header,\r\n      cover,\r\n      scroll,\r\n    } = this.props;\r\n\r\n    const classnames = cx(prefix, className, {\r\n      theme: !!theme,\r\n      'panel-fullscreen': !!expand,\r\n      'panel-collapsed': !!collapse,\r\n      cover: !!cover\r\n    });\r\n\r\n    const styles = {\r\n      ...style,\r\n      width\r\n    };\r\n    const bodyStyles = {};\r\n    if (!expand) {\r\n      bodyStyles.height = height;\r\n    }\r\n    if (scroll) {\r\n      bodyStyles.overflow = 'auto';\r\n    }\r\n\r\n    const Header =\r\n      typeof header === 'undefined' ? (\r\n        <div className={`${prefix}-header`}>\r\n          <span className={`${prefix}-header-title`}>{title}</span>\r\n          <span className={`${prefix}-header-controls`}>\r\n            <a className=\"panel-control-loader\" onClick={this.onRefresh}>\r\n              <Icon type=\"refresh\" />\r\n            </a>\r\n            <a\r\n              className=\"panel-control-fullscreen\"\r\n              onClick={this.onExpand(expand ? false : true)}\r\n            >\r\n              <Icon type={`${expand ? 'shrink' : 'enlarge'}`} />\r\n            </a>\r\n            <a\r\n              className=\"panel-control-collapsed\"\r\n              onClick={this.onCollapse(collapse ? false : true)}\r\n            >\r\n              <Icon type={`${collapse ? 'plus' : 'minus'}`} />\r\n            </a>\r\n            <Popconfirm\r\n              title=\"您确认要关闭这个面板？\"\r\n              onConfirm={this.onClose}\r\n              placement=\"topRight\"\r\n            >\r\n              <a\r\n                className=\"panel-control-remove\"\r\n                onClick={expand ? this.onClose : noop}\r\n              >\r\n                <Icon type=\"close\" />\r\n              </a>\r\n            </Popconfirm>\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        header\r\n      );\r\n\r\n    return (\r\n      <div className={classnames} style={styles}>\r\n        {Header}\r\n        <div className={`${prefix}-body`} style={bodyStyles}>\r\n          <CSSAnimate\r\n            className=\"panel-content\"\r\n            type={animationName}\r\n            callback={_ => this.setState({ animationName: '' })}\r\n            key={refresh}\r\n          >\r\n            {children}\r\n          </CSSAnimate>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Panel;\r\n","import Panel from './Panel';\r\n\r\nexport default Panel;"],"sourceRoot":""}