{"version":3,"sources":["../node_modules/lodash/isArray.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/eq.js","../node_modules/lodash/keys.js","../node_modules/lodash/_getPrototype.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/keysIn.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_copyObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/_cloneArrayBuffer.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_cloneBuffer.js","../node_modules/lodash/_cloneTypedArray.js","../node_modules/lodash/_copyArray.js","../node_modules/lodash/_initCloneObject.js","../node_modules/lodash/_baseCreate.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseKeysIn.js","../node_modules/lodash/_nativeKeysIn.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_assignValue.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_defineProperty.js","../node_modules/echarts/lib/component/toolbox/featureManager.js","../node_modules/echarts/lib/visual/symbol.js","../node_modules/echarts/lib/chart/helper/treeHelper.js","../node_modules/echarts/lib/visual/VisualMapping.js","../node_modules/antd/lib/grid/style/index.js","../node_modules/echarts/lib/component/gridSimple.js","../node_modules/echarts/lib/chart/helper/SymbolDraw.js","../node_modules/echarts/lib/layout/points.js","../node_modules/echarts/lib/component/helper/sliderMove.js","../node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","../node_modules/echarts/lib/component/dataZoom/DataZoomView.js","../node_modules/echarts/lib/coord/axisModelCreator.js","../node_modules/echarts/lib/chart/helper/Symbol.js","../node_modules/echarts/lib/coord/geo/geoCreator.js","../node_modules/echarts/lib/component/helper/RoamController.js","../node_modules/echarts/lib/visual/visualSolution.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/antd/lib/list/style/index.js","../node_modules/antd/lib/list/index.js","../node_modules/antd/lib/list/Item.js","../node_modules/echarts/lib/coord/cartesian/Grid.js","../node_modules/echarts/lib/chart/helper/labelHelper.js","../node_modules/echarts/lib/component/helper/cursorHelper.js","../node_modules/echarts/lib/data/Tree.js","../node_modules/echarts/lib/chart/helper/LineDraw.js","../node_modules/echarts/lib/chart/helper/Line.js","../node_modules/echarts/lib/component/helper/BrushController.js","../node_modules/echarts/lib/coord/polar/polarCreator.js","../node_modules/echarts/lib/component/dataZoom/helper.js","../node_modules/echarts/lib/component/marker/MarkerModel.js","../node_modules/echarts/lib/component/marker/markerHelper.js","../node_modules/echarts/lib/component/marker/MarkerView.js","../node_modules/zrender/lib/svg/graphic.js","../node_modules/zrender/lib/svg/core.js","../node_modules/zrender/lib/svg/helper/Definable.js","../node_modules/echarts/lib/chart/bar.js","../node_modules/echarts/lib/coord/cartesian/AxisModel.js","../node_modules/echarts/lib/coord/axisDefault.js","../node_modules/echarts/lib/chart/bar/BaseBarSeries.js","../node_modules/echarts/lib/chart/bar/helper.js","../node_modules/lodash/_getSymbolsIn.js","../node_modules/echarts/lib/chart/gauge.js","../node_modules/echarts/lib/chart/line.js","../node_modules/echarts/lib/chart/line/helper.js","../node_modules/echarts/lib/chart/line/poly.js","../node_modules/echarts/lib/chart/map.js","../node_modules/echarts/lib/coord/View.js","../node_modules/echarts/lib/component/helper/MapDraw.js","../node_modules/echarts/lib/component/helper/interactionMutex.js","../node_modules/echarts/lib/component/helper/roamHelper.js","../node_modules/echarts/lib/action/geoRoam.js","../node_modules/echarts/lib/action/roamHelper.js","../node_modules/echarts/lib/chart/scatter.js","../node_modules/echarts/lib/chart/radar.js","../node_modules/echarts/lib/data/helper/linkList.js","../node_modules/echarts/lib/chart/tree/layoutHelper.js","../node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js","../node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js","../node_modules/echarts/lib/chart/graph/circularLayoutHelper.js","../node_modules/echarts/lib/component/parallel.js","../node_modules/echarts/lib/coord/parallel/parallelCreator.js","../node_modules/echarts/lib/component/helper/brushHelper.js","../node_modules/echarts/lib/util/array/nest.js","../node_modules/echarts/lib/chart/helper/whiskerBoxCommon.js","../node_modules/echarts/lib/chart/helper/EffectLine.js","../node_modules/echarts/lib/chart/helper/Polyline.js","../node_modules/echarts/lib/chart/lines/linesLayout.js","../node_modules/echarts/lib/component/singleAxis.js","../node_modules/echarts/lib/coord/single/singleAxisHelper.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","../node_modules/echarts/lib/component/helper/listComponent.js","../node_modules/echarts/lib/component/helper/BrushTargetManager.js","../node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","../node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","../node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","../node_modules/echarts/lib/component/visualMap/preprocessor.js","../node_modules/echarts/lib/component/visualMap/typeDefaulter.js","../node_modules/echarts/lib/component/visualMap/visualEncoding.js","../node_modules/echarts/lib/component/visualMap/VisualMapModel.js","../node_modules/echarts/lib/visual/visualDefault.js","../node_modules/echarts/lib/component/visualMap/VisualMapView.js","../node_modules/echarts/lib/component/visualMap/helper.js","../node_modules/echarts/lib/component/visualMap/visualMapAction.js","../node_modules/echarts/lib/component/dataZoom/history.js","../node_modules/zrender/lib/vml/core.js","../node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","../node_modules/echarts/lib/coord/cartesian/Cartesian.js","../node_modules/echarts/lib/coord/cartesian/Axis2D.js","../node_modules/echarts/lib/coord/cartesian/GridModel.js","../node_modules/echarts/lib/chart/bar/BarSeries.js","../node_modules/echarts/lib/chart/bar/BarView.js","../node_modules/echarts/lib/chart/bar/barItemStyle.js","../node_modules/echarts/lib/component/axis.js","../node_modules/echarts/lib/component/axis/CartesianAxisView.js","../node_modules/lodash/cloneDeep.js","../node_modules/lodash/_baseClone.js","../node_modules/lodash/_arrayEach.js","../node_modules/lodash/_baseAssign.js","../node_modules/lodash/_baseAssignIn.js","../node_modules/lodash/_copySymbols.js","../node_modules/lodash/_copySymbolsIn.js","../node_modules/lodash/_getAllKeysIn.js","../node_modules/lodash/_initCloneArray.js","../node_modules/lodash/_initCloneByTag.js","../node_modules/lodash/_cloneDataView.js","../node_modules/lodash/_cloneRegExp.js","../node_modules/lodash/_cloneSymbol.js","../node_modules/lodash/isMap.js","../node_modules/lodash/_baseIsMap.js","../node_modules/lodash/isSet.js","../node_modules/lodash/_baseIsSet.js","../node_modules/echarts/lib/chart/gauge/GaugeSeries.js","../node_modules/echarts/lib/chart/gauge/GaugeView.js","../node_modules/echarts/lib/chart/gauge/PointerPath.js","../node_modules/echarts/lib/chart/line/LineSeries.js","../node_modules/echarts/lib/chart/line/LineView.js","../node_modules/echarts/lib/chart/line/lineAnimationDiff.js","../node_modules/echarts/lib/processor/dataSample.js","../node_modules/echarts/lib/chart/map/MapSeries.js","../node_modules/echarts/lib/coord/geo/Geo.js","../node_modules/echarts/lib/coord/geo/fix/nanhai.js","../node_modules/echarts/lib/coord/geo/fix/textCoord.js","../node_modules/echarts/lib/coord/geo/fix/geoCoord.js","../node_modules/echarts/lib/coord/geo/fix/diaoyuIsland.js","../node_modules/echarts/lib/chart/map/MapView.js","../node_modules/echarts/lib/chart/map/mapSymbolLayout.js","../node_modules/echarts/lib/chart/map/mapVisual.js","../node_modules/echarts/lib/chart/map/mapDataStatistic.js","../node_modules/echarts/lib/chart/map/backwardCompat.js","../node_modules/echarts/map/js/china.js","../node_modules/echarts/index.js","../node_modules/echarts/lib/chart/scatter/ScatterSeries.js","../node_modules/echarts/lib/chart/scatter/ScatterView.js","../node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js","../node_modules/echarts/lib/component/radar.js","../node_modules/echarts/lib/coord/radar/Radar.js","../node_modules/echarts/lib/coord/radar/IndicatorAxis.js","../node_modules/echarts/lib/coord/radar/RadarModel.js","../node_modules/echarts/lib/component/radar/RadarView.js","../node_modules/echarts/lib/chart/radar/RadarSeries.js","../node_modules/echarts/lib/chart/radar/RadarView.js","../node_modules/echarts/lib/chart/radar/radarLayout.js","../node_modules/echarts/lib/chart/radar/backwardCompat.js","../node_modules/echarts/lib/chart/tree.js","../node_modules/echarts/lib/chart/tree/TreeSeries.js","../node_modules/echarts/lib/chart/tree/TreeView.js","../node_modules/echarts/lib/chart/tree/treeAction.js","../node_modules/echarts/lib/chart/tree/treeLayout.js","../node_modules/echarts/lib/chart/tree/traversalHelper.js","../node_modules/echarts/lib/chart/treemap.js","../node_modules/echarts/lib/chart/treemap/TreemapSeries.js","../node_modules/echarts/lib/chart/treemap/TreemapView.js","../node_modules/echarts/lib/chart/treemap/Breadcrumb.js","../node_modules/echarts/lib/util/animation.js","../node_modules/echarts/lib/chart/treemap/treemapAction.js","../node_modules/echarts/lib/chart/treemap/treemapVisual.js","../node_modules/echarts/lib/chart/treemap/treemapLayout.js","../node_modules/echarts/lib/chart/graph.js","../node_modules/echarts/lib/chart/graph/GraphSeries.js","../node_modules/echarts/lib/data/Graph.js","../node_modules/echarts/lib/chart/graph/GraphView.js","../node_modules/echarts/lib/chart/helper/LinePath.js","../node_modules/echarts/lib/chart/graph/adjustEdge.js","../node_modules/echarts/lib/chart/graph/graphAction.js","../node_modules/echarts/lib/chart/graph/categoryFilter.js","../node_modules/echarts/lib/chart/graph/categoryVisual.js","../node_modules/echarts/lib/chart/graph/edgeVisual.js","../node_modules/echarts/lib/chart/graph/simpleLayout.js","../node_modules/echarts/lib/chart/graph/circularLayout.js","../node_modules/echarts/lib/chart/graph/forceLayout.js","../node_modules/echarts/lib/chart/graph/forceHelper.js","../node_modules/echarts/lib/chart/graph/createView.js","../node_modules/echarts/lib/chart/funnel.js","../node_modules/echarts/lib/chart/funnel/FunnelSeries.js","../node_modules/echarts/lib/chart/funnel/FunnelView.js","../node_modules/echarts/lib/chart/funnel/funnelLayout.js","../node_modules/echarts/lib/chart/parallel.js","../node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js","../node_modules/echarts/lib/coord/parallel/Parallel.js","../node_modules/echarts/lib/coord/parallel/ParallelAxis.js","../node_modules/echarts/lib/coord/parallel/ParallelModel.js","../node_modules/echarts/lib/coord/parallel/AxisModel.js","../node_modules/echarts/lib/component/parallelAxis.js","../node_modules/echarts/lib/component/axis/parallelAxisAction.js","../node_modules/echarts/lib/component/axis/ParallelAxisView.js","../node_modules/echarts/lib/chart/parallel/ParallelSeries.js","../node_modules/echarts/lib/chart/parallel/ParallelView.js","../node_modules/echarts/lib/chart/parallel/parallelVisual.js","../node_modules/echarts/lib/chart/sankey.js","../node_modules/echarts/lib/chart/sankey/SankeySeries.js","../node_modules/echarts/lib/chart/sankey/SankeyView.js","../node_modules/echarts/lib/chart/sankey/sankeyAction.js","../node_modules/echarts/lib/chart/sankey/sankeyLayout.js","../node_modules/echarts/lib/chart/sankey/sankeyVisual.js","../node_modules/echarts/lib/chart/boxplot.js","../node_modules/echarts/lib/chart/boxplot/BoxplotSeries.js","../node_modules/echarts/lib/chart/boxplot/BoxplotView.js","../node_modules/echarts/lib/chart/boxplot/boxplotVisual.js","../node_modules/echarts/lib/chart/boxplot/boxplotLayout.js","../node_modules/echarts/lib/chart/candlestick.js","../node_modules/echarts/lib/chart/candlestick/CandlestickSeries.js","../node_modules/echarts/lib/chart/candlestick/CandlestickView.js","../node_modules/echarts/lib/chart/candlestick/preprocessor.js","../node_modules/echarts/lib/chart/candlestick/candlestickVisual.js","../node_modules/echarts/lib/chart/candlestick/candlestickLayout.js","../node_modules/echarts/lib/chart/effectScatter.js","../node_modules/echarts/lib/chart/effectScatter/EffectScatterSeries.js","../node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js","../node_modules/echarts/lib/chart/helper/EffectSymbol.js","../node_modules/echarts/lib/chart/lines.js","../node_modules/echarts/lib/chart/lines/LinesSeries.js","../node_modules/echarts/lib/chart/lines/LinesView.js","../node_modules/echarts/lib/chart/helper/EffectPolyline.js","../node_modules/echarts/lib/chart/helper/LargeLineDraw.js","../node_modules/echarts/lib/chart/lines/linesVisual.js","../node_modules/echarts/lib/chart/heatmap.js","../node_modules/echarts/lib/chart/heatmap/HeatmapSeries.js","../node_modules/echarts/lib/chart/heatmap/HeatmapView.js","../node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js","../node_modules/echarts/lib/chart/pictorialBar.js","../node_modules/echarts/lib/chart/bar/PictorialBarSeries.js","../node_modules/echarts/lib/chart/bar/PictorialBarView.js","../node_modules/echarts/lib/chart/themeRiver.js","../node_modules/echarts/lib/coord/single/singleCreator.js","../node_modules/echarts/lib/coord/single/Single.js","../node_modules/echarts/lib/coord/single/SingleAxis.js","../node_modules/echarts/lib/component/axis/SingleAxisView.js","../node_modules/echarts/lib/coord/single/AxisModel.js","../node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js","../node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js","../node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js","../node_modules/echarts/lib/chart/themeRiver/themeRiverLayout.js","../node_modules/echarts/lib/chart/themeRiver/themeRiverVisual.js","../node_modules/echarts/lib/chart/sunburst.js","../node_modules/echarts/lib/chart/sunburst/SunburstSeries.js","../node_modules/echarts/lib/chart/sunburst/SunburstView.js","../node_modules/echarts/lib/chart/sunburst/SunburstPiece.js","../node_modules/echarts/lib/chart/sunburst/sunburstAction.js","../node_modules/echarts/lib/chart/sunburst/sunburstLayout.js","../node_modules/echarts/lib/chart/custom.js","../node_modules/echarts/lib/coord/cartesian/prepareCustom.js","../node_modules/echarts/lib/coord/geo/prepareCustom.js","../node_modules/echarts/lib/coord/single/prepareCustom.js","../node_modules/echarts/lib/coord/polar/prepareCustom.js","../node_modules/echarts/lib/coord/calendar/prepareCustom.js","../node_modules/echarts/lib/component/graphic.js","../node_modules/echarts/lib/component/grid.js","../node_modules/echarts/lib/component/legendScroll.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","../node_modules/echarts/lib/component/legend/ScrollableLegendView.js","../node_modules/echarts/lib/component/legend/scrollableLegendAction.js","../node_modules/echarts/lib/component/polar.js","../node_modules/echarts/lib/layout/barPolar.js","../node_modules/echarts/lib/coord/polar/Polar.js","../node_modules/echarts/lib/coord/polar/RadiusAxis.js","../node_modules/echarts/lib/coord/polar/AngleAxis.js","../node_modules/echarts/lib/coord/polar/PolarModel.js","../node_modules/echarts/lib/coord/polar/AxisModel.js","../node_modules/echarts/lib/component/angleAxis.js","../node_modules/echarts/lib/component/axis/AngleAxisView.js","../node_modules/echarts/lib/component/radiusAxis.js","../node_modules/echarts/lib/component/axis/RadiusAxisView.js","../node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js","../node_modules/echarts/lib/component/geo.js","../node_modules/echarts/lib/coord/geo/GeoModel.js","../node_modules/echarts/lib/component/geo/GeoView.js","../node_modules/echarts/lib/component/brush.js","../node_modules/echarts/lib/component/brush/preprocessor.js","../node_modules/echarts/lib/component/brush/visualEncoding.js","../node_modules/echarts/lib/component/brush/selector.js","../node_modules/echarts/lib/component/brush/BrushModel.js","../node_modules/echarts/lib/component/brush/BrushView.js","../node_modules/echarts/lib/component/brush/brushAction.js","../node_modules/echarts/lib/component/toolbox/feature/Brush.js","../node_modules/echarts/lib/component/calendar.js","../node_modules/echarts/lib/coord/calendar/Calendar.js","../node_modules/echarts/lib/coord/calendar/CalendarModel.js","../node_modules/echarts/lib/component/calendar/CalendarView.js","../node_modules/echarts/lib/component/dataZoom.js","../node_modules/echarts/lib/component/dataZoom/AxisProxy.js","../node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js","../node_modules/echarts/lib/component/dataZoom/SliderZoomView.js","../node_modules/echarts/lib/component/dataZoom/InsideZoomModel.js","../node_modules/echarts/lib/component/dataZoom/InsideZoomView.js","../node_modules/echarts/lib/component/dataZoom/roams.js","../node_modules/echarts/lib/component/visualMap.js","../node_modules/echarts/lib/component/visualMapContinuous.js","../node_modules/echarts/lib/component/visualMap/ContinuousModel.js","../node_modules/echarts/lib/component/visualMap/ContinuousView.js","../node_modules/echarts/lib/component/visualMapPiecewise.js","../node_modules/echarts/lib/component/visualMap/PiecewiseModel.js","../node_modules/echarts/lib/component/visualMap/PiecewiseView.js","../node_modules/echarts/lib/component/markPoint.js","../node_modules/echarts/lib/component/marker/MarkPointModel.js","../node_modules/echarts/lib/component/marker/MarkPointView.js","../node_modules/echarts/lib/component/markLine.js","../node_modules/echarts/lib/component/marker/MarkLineModel.js","../node_modules/echarts/lib/component/marker/MarkLineView.js","../node_modules/echarts/lib/component/markArea.js","../node_modules/echarts/lib/component/marker/MarkAreaModel.js","../node_modules/echarts/lib/component/marker/MarkAreaView.js","../node_modules/echarts/lib/component/timeline.js","../node_modules/echarts/lib/component/timeline/preprocessor.js","../node_modules/echarts/lib/component/timeline/typeDefaulter.js","../node_modules/echarts/lib/component/timeline/timelineAction.js","../node_modules/echarts/lib/component/timeline/SliderTimelineModel.js","../node_modules/echarts/lib/component/timeline/TimelineModel.js","../node_modules/echarts/lib/component/timeline/SliderTimelineView.js","../node_modules/echarts/lib/component/timeline/TimelineView.js","../node_modules/echarts/lib/component/timeline/TimelineAxis.js","../node_modules/echarts/lib/component/toolbox.js","../node_modules/echarts/lib/component/toolbox/ToolboxModel.js","../node_modules/echarts/lib/component/toolbox/ToolboxView.js","../node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","../node_modules/echarts/lib/component/toolbox/feature/MagicType.js","../node_modules/echarts/lib/component/toolbox/feature/DataView.js","../node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","../node_modules/echarts/lib/component/dataZoomSelect.js","../node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","../node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","../node_modules/echarts/lib/component/toolbox/feature/Restore.js","../node_modules/zrender/lib/vml/vml.js","../node_modules/zrender/lib/vml/graphic.js","../node_modules/zrender/lib/vml/Painter.js","../node_modules/zrender/lib/svg/svg.js","../node_modules/zrender/lib/svg/Painter.js","../node_modules/zrender/lib/core/arrayDiff2.js","../node_modules/zrender/lib/svg/helper/GradientManager.js","../node_modules/zrender/lib/svg/helper/ClippathManager.js","../node_modules/zrender/lib/svg/helper/ShadowManager.js"],"names":["isArray","Array","module","exports","baseIsNative","__webpack_require__","getValue","object","key","value","undefined","isFunction","isLength","length","objectProto","Object","prototype","Ctor","constructor","root","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","ListCache","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","entries","data","this","__data__","size","clear","get","has","set","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","index","entry","other","arrayLikeKeys","baseKeys","isArrayLike","getPrototype","overArg","getPrototypeOf","func","transform","arg","baseKeysIn","baseTimes","isArguments","isIndex","hasOwnProperty","inherited","isArr","isArg","isBuff","isType","skipIndexes","result","String","call","push","Uint8Array","Set","getNative","Map","baseGetTag","isObject","asyncTag","funcTag","genTag","proxyTag","tag","MAX_SAFE_INTEGER","reIsUint","type","test","defineProperty","configurable","enumerable","writable","assignValue","baseAssignValue","source","props","customizer","isNew","newValue","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","baseIsArguments","isObjectLike","propertyIsEnumerable","arguments","arrayBuffer","byteLength","freeGlobal","freeProcess","process","types","require","binding","e","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","getSymbols","symbol","DataView","Promise","WeakMap","toSource","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","resolve","ctorString","arrayPush","keysFunc","symbolsFunc","array","values","offset","LARGE_ARRAY_SIZE","pairs","allocUnsafe","buffer","isDeep","slice","copy","cloneArrayBuffer","typedArray","byteOffset","baseCreate","isPrototype","objectCreate","create","proto","typedArrayTags","n","iteratee","nativeKeysIn","isProto","baseGetAllKeys","keys","predicate","resIndex","nativeKeys","funcToString","Function","toString","eq","objValue","nativeCreate","isKeyable","map","features","register","name","ctor","seriesType","defaultSymbolType","legendSymbol","performRawSeries","reset","seriesModel","ecModel","api","getData","symbolType","symbolSize","keepAspect","setVisual","symbolKeepAspect","isSeriesFiltered","hasCallback","dataEach","hasItemOption","idx","rawValue","getRawValue","params","getDataParams","setItemVisual","itemModel","getItemModel","itemSymbolType","getShallow","itemSymbolSize","itemSymbolKeepAspect","zrUtil","getPathToRoot","node","path","parentNode","reverse","retrieveTargetInfo","payload","validPayloadTypes","indexOf","tree","targetNode","contains","targetNodeId","getNodeById","aboveViewRoot","viewRoot","viewPath","wrapTreePathInfo","treePathInfo","nodeDataIndex","dataIndex","zrColor","linearMap","each","CATEGORY_DEFAULT_VISUAL_INDEX","VisualMapping","option","mappingMethod","visualType","thisOption","clone","_normalizeData","normalizers","visualHandler","visualHandlers","applyVisual","getColorMapper","_doMap","normalizeVisualRange","pieceList","hasSpecialVisual","piece","originIndex","visual","preprocessForPiecewise","categories","categoryMap","cate","visualArr","v","setVisualToOption","i","pop","preprocessForSpecifiedCategory","assert","dataExtent","mapValueToVisual","normalized","getNormalizer","bind","color","makeApplyVisual","isNormalized","doMapCategory","out","returnRGBArray","fastLerp","parsedVisual","stringify","linear","category","piecewise","getSpecifiedVisual","fixed","doMapFixed","colorHue","makePartialColorVisualHandler","modifyHSL","colorSaturation","colorLightness","colorAlpha","modifyAlpha","opacity","makeDoMap","liftZ","getter","setter","symbolCfg","isString","doMapToArray","isCategory","applyValue","Math","round","loop","sourceExtent","findPieceIndex","item","parse","pieceIndex","noop","littleThan","close","a","b","listVisualTypes","visualTypes","handler","addVisualHandler","isValidType","eachVisual","callback","context","mapVisual","isPrimary","newVisual","newVal","retrieveVisuals","obj","hasVisual","ret","h","prepareVisualTypes","sort","type1","type2","dependsOn","visualType1","visualType2","findClosestWhenOutside","possibleI","abs","Infinity","len","pieceValue","updatePossible","interval","val","newAbs","_default","echarts","graphic","extendComponentView","render","gridModel","group","removeAll","add","Rect","shape","coordinateSystem","getRect","style","defaults","fill","getItemStyle","silent","z2","registerPreprocessor","xAxis","yAxis","grid","SymbolClz","SymbolDraw","symbolCtor","Group","_symbolCtor","symbolDrawProto","symbolNeedsDraw","point","opt","isNaN","isIgnore","clipShape","contain","getItemVisual","normalizeUpdateOpt","makeSeriesScope","hostModel","itemStyle","getModel","hoverItemStyle","symbolRotate","symbolOffset","hoverAnimation","labelModel","hoverLabelModel","cursorStyle","updateData","oldData","_data","SymbolCtor","seriesScope","diff","newIdx","getItemLayout","symbolEl","attr","setItemGraphicEl","update","oldIdx","getItemGraphicEl","updateProps","position","remove","el","fadeOut","execute","isPersistent","updateLayout","eachItemGraphicEl","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","isGroup","incremental","useHoverLayer","start","end","traverse","enableAnimation","createRenderPlanner","isDimensionStacked","plan","coordSys","isLargeRender","pipelineContext","large","dims","dimensions","dim","mapDimension","dimLen","stackResultDim","getCalculationInfo","progress","segCount","points","Float32Array","tmpIn","tmpOut","x","dataToPoint","y","NaN","setItemLayout","setLayout","getSpanSign","handleEnds","handleIndex","dist","span","sign","restrict","extend","min","max","delta","extent","minSpan","maxSpan","extentSpan","originalDistSign","extentMinSpan","realExtent","currDistSign","__DEV__","env","modelUtil","helper","AxisProxy","eachAxisDim","retrieveRaw","updateRangeUse","dataZoomModel","rawOption","rangePropMode","_rangePropMode","rangeModeInOption","names","percentSpecified","valueSpecified","extendComponentModel","dependencies","defaultOption","zlevel","z","orient","xAxisIndex","yAxisIndex","filterMode","throttle","startValue","endValue","minValueSpan","maxValueSpan","rangeMode","init","parentModel","_dataIntervalByAxis","_dataInfo","_axisProxies","textStyleModel","_autoThrottle","mergeDefaultAndTheme","doInit","mergeOption","newOption","merge","canvasSupported","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","axisModel","dependentModels","axis","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","normalizeToArray","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","dimName","singleAxis","singleAxisModel","singleAxisIndex","componentIndex","axisIndices","axisModels","eachSeries","_isSeriesHasAllAxesTypeOf","axisId","queryComponents","mainType","id","axisType","is","seriesAxisIndex","globalOption","animation","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","indices","getAxisProxy","getAxisModel","setRawRange","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getRangePropMode","getTargetCoordInfo","coordSysLists","getComponent","coordModel","getCoordSysModel","store","coordIndex","model","save","axisDefault","ComponentModel","_layout","getLayoutParams","mergeLayoutParam","OrdinalMeta","AXIS_TYPES","axisName","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","layoutMode","inputPositionParams","themeModel","getTheme","getDefaultOption","optionUpdated","__ordinalMeta","createByAxisModel","getCategories","rawData","getOrdinalMeta","mergeAll","registerSubTypeDefaulter","curry","createSymbol","parsePercent","getDefaultLabel","symbolProto","getSymbolSize","getScale","driftSymbol","dx","dy","parent","drift","_createSymbol","symbolPath","culling","scale","_symbolType","stopSymbolAnimation","toLastFrame","childAt","stopAnimation","getSymbolPath","highlight","trigger","downplay","setZ","setDraggable","draggable","cursor","isInit","_updateCommon","fadeIn","target","initProps","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","useStyle","strokeNoScale","elStyle","PI","setColor","symbolInnerColor","setStyle","z2Origin","__z2Origin","useNameLabel","setLabelStyle","labelFetcher","labelDataIndex","defaultText","getName","isRectText","autoColor","off","hoverStyle","setHoverStyle","isAnimationEnabled","onEmphasis","ratio","animateTo","onNormal","on","cb","keepLabel","text","inherits","Geo","layout","numberUtil","resizeGeo","geoModel","boundingCoords","leftTop","rightBottom","setBoundingRect","boxLayoutOption","rect","getBoundingRect","center","viewWidth","getWidth","viewHeight","getHeight","aspectScale","aspect","width","height","useCenterAndSize","viewRect","getBoxLayoutParams","getLayoutRect","setViewRect","setCenter","setZoom","setGeoCoords","geo","geoCoord","addGeoCoord","geoCreator","geoList","eachComponent","mapData","getMap","geoJson","specialAreas","zoomLimit","resize","geoIndex","mapModelGroupBySeries","eachSeriesByType","getHostGeoModel","mapType","getMapType","mapSeries","nameMapList","singleMapSeries","retrieve","apply","getFilledRegions","originRegionArr","mapName","nameMap","regionsArr","dataNameMap","createHashMap","properties","registerCoordinateSystem","Eventful","eventTool","interactionMutex","RoamController","zr","pointerChecker","_zr","_opt","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","pinch","setPointerChecker","enable","controlType","disable","zoomOnMouseWheel","moveOnMouseMove","preventDefaultMouseMove","dispose","isDragging","_dragging","isPinching","_pinching","notLeftMouse","offsetX","offsetY","_x","_y","checkKeyBinding","gestureEvent","isTaken","oldX","oldY","stop","event","wheelDelta","zoomDelta","zoom","pinchScale","pinchX","pinchY","zoomX","zoomY","roamController","prop","setting","mixin","hasKeys","createVisualMappings","stateList","supplementVisualOption","visualMappings","state","mappings","Creater","__hidden","createMappings","visualData","mappingOption","__alphaForOpacity","replaceVisualOption","getValueState","scope","dimension","visualTypesMap","getVisual","eachItem","valueOrIndex","rawDataItem","getRawDataItem","visualMap","valueState","incrementalApplyVisual","getDimension","next","Hash","hash","string","hashClear","hashDelete","hashGet","hashHas","hashSet","isMasked","reIsHostCtor","funcProto","reIsNative","RegExp","replace","coreJsData","maskSrcKey","uid","exec","IE_PROTO","HASH_UNDEFINED","assocIndexOf","splice","getMapData","argsTag","React","_interopRequireWildcard","PropTypes","_classnames","_interopRequireDefault","_configProvider","_spin","_pagination","_grid","_Item","__esModule","default","newObj","desc","getOwnPropertyDescriptor","_typeof","Symbol","iterator","_toConsumableArray","arr","arr2","_arrayWithoutHoles","iter","from","_iterableToArray","TypeError","_nonIterableSpread","_extends","assign","_defineProperty","_defineProperties","descriptor","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","__proto__","_setPrototypeOf","p","__rest","s","t","List","_React$Component","_this","instance","Constructor","_classCallCheck","paginationCurrent","defaultPaginationProps","current","pageSize","onChange","page","pagination","setState","total","renderItem","_this$props","rowKey","concat","renderEmpty","prefixCls","locale","createElement","className","emptyText","renderList","_ref","_classNames","getPrefixCls","_a","customizePrefixCls","bordered","split","children","itemLayout","loadMore","dataSource","header","footer","loading","rest","loadingProp","spinning","isLoading","sizeCls","classString","isSomethingAfterLastItem","paginationProps","largestPage","ceil","childrenContent","paginationContent","splitDataSource","minHeight","items","childrenList","Children","forEach","child","cloneElement","Row","gutter","paginationPosition","protoProps","staticProps","subClass","superClass","_inherits","Component","_this$props2","ConfigConsumer","Item","childContextTypes","any","defaultProps","Meta","avatar","title","description","others","content","getGrid","floor","_ref2","actions","extra","metaContent","otherContent","element","actionsContent","contentClassString","action","actionsContentItem","extraContent","Col","xs","sm","md","lg","xl","xxl","contextTypes","_util","_axisHelper","createScaleByModel","ifAxisCrossZero","niceScaleExtent","estimateLabelUnionRect","Cartesian2D","Axis2D","CoordinateSystem","getStackedDimension","isAxisUsedInTheGrid","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","gridProto","fixAxisOnZero","axesMap","otherAxisDim","getAxesOnZeroOf","otherAxis","otherAxes","onZero","onZeroAxisIndex","canOnZeroToAxis","axisPointerEnabled","_rect","_updateScale","ignoreContainLabel","gridRect","axesList","adjustAxes","isHorizontal","inverse","setExtent","coordBase","axisExtent","getExtent","axisExtentSum","toGlobalCoord","coord","toLocalCoord","updateAxisTransform","labelUnionRect","margin","getAxis","axesMapOnDim","getAxes","getCartesian","coordList","getCartesians","convertToPixel","finder","_findConvertTarget","cartesian","dataToCoord","convertFromPixel","pointToData","coordToData","xAxisModel","getReferringComponents","yAxisModel","coordsList","containPoint","axisPositionUsed","left","right","top","bottom","axesCount","createAxisCreator","axisPosition","onBand","addAxis","unionExtent","unionExtentFromData","isCartesian2D","axesModels","findAxesModels","getTooltipAxes","baseAxes","baseAxis","getBaseAxis","getOtherAxis","axesTypes","grids","retrieveRawValue","labelDims","vals","join","IRRELEVANT_EXCLUDES","axisPointer","tooltip","brush","onIrrelevantElement","targetCoordSysModel","getComponentByElement","topTarget","Model","linkList","createDimensions","TreeNode","hostTree","depth","viewChildren","Tree","levelOptions","leavesOption","_nodes","levelModels","levelDefine","leavesModel","isRemoved","eachNode","options","order","suppressVisitSub","updateDepthAndHeight","getId","res","getAncestors","includeSelf","ancestors","getLayout","levelModel","getLevelModel","isExpand","getLeavesModel","ignoreParent","getRawIndex","isAncestorOf","isDescendantOf","getNodeByDataIndex","rawIndex","getNodeByName","nodes","count","clearLayouts","clearItemLayouts","createTree","dataRoot","treeOptions","levels","leaves","listData","dimMax","buildHierarchy","dataNode","addChild","dimensionsInfo","coordDimensions","dimensionsCount","list","initData","mainData","struct","structAttr","LineGroup","LineDraw","_ctor","lineDrawProto","lineData","lineStyle","getLineStyle","hoverLineStyle","isPointNaN","pt","lineNeedsDraw","pts","lineDraw","oldLineData","_lineData","doAdd","newLineData","itemEl","doUpdate","_clearIncremental","_incremental","clearDisplaybles","vector","symbolUtil","LinePath","SYMBOL_CATEGORIES","makeSymbolTypeKey","symbolCategory","setLinePoints","targetShape","p1","p2","cp1","x1","y1","x2","y2","percent","cpx1","cpy1","Line","_createLine","lineProto","beforeUpdate","symbolFrom","childOfName","symbolTo","label","ignore","invScale","line","__dirty","fromPos","pointAt","toPos","d","sub","normalize","tangent","tangentAt","atan2","textPosition","textAlign","textVerticalAlign","distance","__position","halfPercent","cp","rotation","__verticalAlign","__textAlign","createLine","Text","_updateCommonStl","linePoints","visualColor","visualOpacity","retrieve3","stroke","defaultLabelColor","baseText","showLabel","hoverShowLabel","getFormattedLabel","dataType","rawVal","isFinite","normalText","emphasisText","retrieve2","labelStyle","setTextStyle","textFill","getTextColor","fontStyle","fontWeight","fontSize","fontFamily","linePath","dirty","DataDiffer","mathMin","mathMax","mathPow","pow","COVER_Z","UNSELECT_THRESHOLD","MIN_RESIZE_LINE_WIDTH","MUTEX_RESOURCE_KEY","DIRECTION_MAP","w","CURSOR_MAP","ne","sw","nw","se","DEFAULT_BRUSH_OPT","brushStyle","lineWidth","transformable","brushMode","removeOnClick","baseUID","BrushController","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","_handlers","mouseHandlers","eventName","createCover","controller","brushOption","cover","coverRenderers","brushType","__brushOption","updateZ","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","range","updateCoverAfterCreation","updateCommon","getPanelByPoint","localCursorPoint","panel","panels","_transform","pn","isTargetByCursor","getPanelByCover","panelId","clearCovers","covers","originalLength","areas","isEnd","getTrackEnds","track","tail","createBaseRectCover","doDrift","edgeNames","makeStyle","ondragend","invisible","updateBaseRect","localRange","handleSize","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","mainEl","globalDir","getGlobalDirection","localDirection","transformDirection","getTransform","setShape","xmin","ymin","xmax","ymax","pointsToRect","clipByPanel","formatRectRange","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","driftPolygon","thisGroup","localD","transformCoordToLocal","localZero","clipPath","preventDefault","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","shouldShowCover","determineBrushType","getCreatingRange","defaultBrushType","enableBrush","release","doDisableBrush","take","doEnableBrush","setPanels","panelOpts","mount","enableGlobalPan","getLocalTransform","eachCover","updateCovers","brushOptionList","tmpIdPrefix","oldCovers","newCovers","getKey","addOrUpdate","oldIndex","newIndex","newBrushOption","unmount","handleDragEnd","currPanel","setCursorStyle","resetCursor","lineX","getLineRenderer","lineY","localTrack","ends","polygon","Polyline","Polygon","xyIndex","otherExtent","getLinearBrushOtherExtent","Polar","updatePolarScale","polar","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","setAxis","startAngle","polarCreator","polarList","polarModel","radiusAxisModel","findAxisModel","angleAxisModel","cx","cy","radius","resizePolar","formatUtil","COORDS","createNameEach","attrs","capitalNames","capitalFirst","capitalAttrs","nameObj","capital","j","isCoordSupported","coordType","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","sourceNode","existsLink","records","edgeType","absorb","processSingleNode","isNodeAbsorded","hasLink","edgeId","isLinked","dataFormatMixin","addCommas","encodeHTML","fillLabel","defaultEmphasis","MarkerModel","extraOpt","createdBySelf","hostSeries","__hostSeries","newOpt","modelPropName","markerOpt","markerModel","seriesIndex","formatTooltip","formattedValue","html","setData","markerTypeCalculatorWithExtent","mlType","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","calcDataDim","numCalculate","indicesOfNearest","precision","getPrecision","toFixed","markerTypeCalculator","average","getAxisInfo","valueIndex","valueDim","valueDataDim","valueAxis","dataDim","dimItem","getDimensionInfo","coordDim","dataDimToCoordDim","baseDataDim","sum","getMedian","getDataExtent","dataTransform","parseFloat","hasXAndY","axisInfo","dataFilter","containData","hasXOrY","dimValueGetter","dimIndex","markerGroupMap","__keep","markerModelKey","renderSeries","PathProxy","BoundingRect","matrix","textContain","textHelper","CMD","arrayJoin","NONE","mathRound","mathSin","sin","mathCos","cos","PI2","degree","EPSILON","round4","isAroundZero","setTransform","svgEl","m","console","log","setAttribute","bindStyle","isText","pathHasFill","getAttribute","textStroke","pathHasStroke","textStrokeWidth","host","getLineScale","lineDash","lineDashOffset","lineCap","lineJoin","miterLimit","svgPath","__svgEl","createPathProxy","__dirtyPath","beginPath","buildPath","pathStr","str","dataLength","cmdStr","nData","M","L","Q","C","A","rx","ry","theta","dTheta","psi","clockwise","dThetaPositive","isCircle","x0","y0","Z","R","pathDataToString","svgTextDrawRectText","svgImage","image","HTMLImageElement","src","dw","dh","__imageSrc","setAttributeNS","attrXLink","svgText","tmpRect","textRect","normalizeTextStyle","textSvgEl","__textSvgEl","textDistance","align","font","DEFAULT_FONT","verticalAlign","getVerticalAlignForSvg","lineHeight","newPos","adjustTextPositionOnRect","textPadding","transformText","applyTransform","pos","transformCoordToGlobal","origin","textOrigin","rotate","textRotation","textLines","nTextLines","textAnchor","__text","__textFont","tspanList","__tspanList","tspan","innerHTML","appendChild","document","createTextNode","removeChild","drawRectText","svgURI","createElementNS","Path","ZImage","ZText","_graphic","Definable","zrId","svgRoot","tagNames","markLabel","domName","_zrId","_svgRoot","_tagNames","_markLabel","_domName","nextId","getDefs","isForceCreating","defs","getElementsByTagName","insertBefore","firstChild","onUpdate","dom","addDom","removeDom","getDoms","doms","tagName","tags","markAllUnused","that","markUsed","removeUnused","getSvgProxy","displayable","getTextSvgElement","getSvgElement","_barGrid","largeLayout","registerLayout","registerVisual","axisModelCreator","axisModelCommonMixin","AxisModel","superApply","resetRange","restoreData","gridIndex","gridId","getAxisType","axisDim","extraOption","show","nameLocation","nameRotate","nameTruncate","maxWidth","ellipsis","placeholder","nameTextStyle","nameGap","triggerEvent","axisLine","axisTick","inside","axisLabel","showMinLabel","showMaxLabel","splitLine","splitArea","areaStyle","categoryAxis","boundaryGap","deduplication","alignWithLabel","splitNumber","timeAxis","logAxis","logBase","SeriesModel","createListFromArray","getInitialData","getSource","getMarkerPosition","clampData","legendHoverLink","barMinHeight","barMinAngle","largeThreshold","progressive","progressiveChunkMode","emphasis","fixPosition","labelPositionOutside","setLabel","normalStyle","getSymbolsIn","visualSymbol","layoutPoints","dataSample","registerProcessor","PRIORITY","PROCESSOR","STATISTIC","prepareDataCoordInfo","valueOrigin","stacked","valueStart","getValueStart","baseAxisDim","valueAxisDim","baseDim","baseDataOffset","dataDimsForPoint","stackedOverDimension","getStackedOnPoint","dataCoordInfo","stackedData","vec2","fixClipWithShadow","vec2Min","vec2Max","scaleAndAdd","v2Copy","cp0","isPointNull","drawSegment","ctx","segLen","allLen","dir","smoothMin","smoothMax","smooth","smoothMonotone","connectNulls","prevIdx","k","prevP","ctrlLen","bezierCurveTo","lineTo","nextIdx","nextP","ratioNextSeg","lenPrevSeg","lenNextSeg","getBoundingBox","smoothConstraint","ptMin","ptMax","stackedOnPoints","stackedOnSmooth","bbox","stackedOnBBox","closePath","mapSymbolLayout","mapDataStatistic","backwardCompat","createDataSelectAction","method","Transformable","v2ApplyTransform","TransformDummy","View","_roamTransformable","_rawTransformable","_center","_zoom","doConvert","methodName","transformTo","_viewRect","rawTransform","calculateTransform","decomposeTransform","_updateTransform","centerCoord","_updateCenterAndZoom","getDefaultCenter","rawRect","getCenter","getZoom","getRoamTransform","rawTransformMatrix","roamTransform","defaultCenter","roamTransformable","rawTransformable","updateTransform","_rawTransform","invTransform","invert","getViewRect","getViewRectAfterRoam","noRoam","roamHelper","getFixedItemStyle","areaColor","updateMapSelected","mapOrGeoModel","eachChild","otherRegionEl","__regions","region","isSelected","MapDraw","updateGroup","_controller","getZr","_controllerHost","_updateGroup","_mouseDownFlag","draw","fromView","isGeo","subType","groupNewProp","itemStyleAccessPath","hoverItemStyleAccessPath","labelAccessPath","hoverLabelAccessPath","regions","regionGroup","compoundPath","CompoundPath","paths","dataIdx","itemStyleModel","regionModel","getRegionModel","hoverItemStyleModel","indexOfName","geometries","geometry","exterior","interiors","isDataNaN","query","textEl","useInsideStyle","eventData","componentType","hoverSilentOnTouch","_updateController","mapDraw","batch","dispatchAction","updateMapSelectHandler","controllerHost","makeActionBase","updateViewOnPan","mouseX","mouseY","updateViewOnZoom","originX","originY","ATTR","getStore","registerAction","resourceKey","userKey","newZoom","zoomMin","zoomMax","zoomScale","updateCenterAndZoom","componentModel","seriesGroup","view","previousZoom","fixX","fixY","dataColor","radarLayout","DATAS","MAIN_DATA","transferInjection","datas","linkAll","linkSingle","changeInjection","cloneShallowInjection","cloneShallow","getLinkedData","datasAttr","main","TRANSFERABLE_METHODS","wrapMethod","CHANGABLE_METHODS","nextRight","hierNode","thread","nextLeft","nextAncestor","nodeInLeft","ancestor","moveSubtree","wl","wr","shift","change","modifier","prelim","defaultSeparation","node1","node2","defaultAncestor","firstWalk","separation","siblings","subtreeW","executeShifts","midPoint","subtreeV","nodeOutRight","nodeInRight","nodeOutLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","apportion","secondWalk","nodeX","radialCoordinate","radialCoor","Graph","edges","directed","beforeLink","graph","addNode","linkNameList","validEdges","linkCount","link","addEdge","nodeData","coordSysCtor","dimensionNames","edgeData","edge","simpleLayoutEdge","eachEdge","curveness","simpleLayout","getGraph","circularLayout","angle","getSum","unitAngle","r","x12","y12","throttleUtil","parallelPreprocessor","parallelModel","_model","_api","handlers","createOrUpdate","_throttledDispatchExpand","_dispatchExpand","checkTrigger","_mouseDownPoint","mouseDownPoint","getSlidedAxisExpandWindow","behavior","axisExpandWindow","debounceNextCall","triggerOn","Parallel","coordSysList","graphicUtil","normalizeRect","makeRectPanelClipPath","localPoints","clipPointsByRect","makeLinearBrushOtherExtent","specifiedXYIndex","brushWidth","base","makeRectIsTargetByCursor","targetModel","keysFunction","sortKeysFunction","sortKeys","entriesMap","mapObject","sortKeyFunction","keyFunction","valuesByKey","keyValue","createListSimply","getDimensionTypeByAxis","seriesModelMixin","_baseAxisDim","ordinalMeta","addOrdinal","xAxisType","yAxisType","coordDims","baseAxisDimIndex","baseAxisType","otherAxisType","newOptionData","newItem","unshift","defaultValueDimensions","otherDims","itemName","dimsDef","curveUtil","EffectLine","_updateEffectSymbol","effectLineProto","effectModel","_updateEffectAnimation","period","constantSpeed","delayExpr","isDelayFunc","updateAnimationPoints","getLineLength","_period","_loop","delay","__t","animator","animate","when","during","updateSymbolPosition","done","__p1","__cp1","__p2","quadraticAt","quadraticDerivativeAt","tx","ty","_createPolyline","polylineProto","isPolyline","isLarge","lineCoords","totalCoordsCount","getLineCoordsCount","getLineCoords","single","rectBound","positionMap","horizontal","vertical","labelDirection","tickDirection","nameDirection","labelInside","labelRotation","isNameSpecified","LegendModel","ignoreSize","selected","superCall","_updateData","legendData","hasSelected","select","potentialData","availableNames","eachRawSeries","isPotential","seriesName","legendDataProvider","mapArray","_availableNames","dataItem","unSelect","toggleSelected","backgroundColor","borderColor","borderRadius","borderWidth","padding","itemGap","itemWidth","itemHeight","inactiveColor","textStyle","selectedMode","makeBackground","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","positionInfo","viewportSize","maxSize","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","selectMode","excludeSeriesId","getSeriesByName","legendSymbolType","_createItem","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","newline","itemGroup","itemIcon","tooltipModel","legendGlobalTooltipModel","textX","formatter","hitRect","formatterParams","legendIndex","$vars","__legendDataIndex","box","contentRect","dataName","storage","getDisplayList","layoutBox","positionElement","boxLayoutParams","normalizeCssArray","brushHelper","COORD_CONVERTS","INCLUDE_FINDER_MAIN_TYPES","BrushTargetManager","targetInfoList","_targetInfoList","info","foundCpts","parseFinder","targetInfoBuilders","builder","include","formatMinMax","minMax","includeMainTypes","setOutputRanges","matchOutputRanges","area","coordRange","coordRanges","coordConvert","__rangeOffset","diffProcessor","xyMinMax","targetInfo","findTargetInfo","coordSyses","setInputRanges","rangeOffset","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","getSize","sizeOrigin","scales","getScales","makePanelOpts","getDefaultBrushType","getPanelRect","coordSysModel","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","panelRectBuilder","xAxisDeclared","yAxisDeclared","geoModels","axisConvert","to","rangeOrCoordRange","xminymin","xmaxymax","axisNameIndex","axisDiffProcessor","refer","getTargetSeries","seriesModelMap","getTargetSeriesModels","modifyOutputEnd","overallReset","filterData","percentRange","valueRange","linkedNodesFinder","effectedModels","pieces","splitList","calculable","visualSolution","VISUAL_PRIORITY","VISUAL","COMPONENT","getColorVisual","visualMapModel","targetVisuals","resultVisual","mapping","createOnAllSeries","resetDefines","isTargetSeries","getDataDimension","visualMetaList","visualMeta","getVisualMeta","stops","outerColors","concreteDim","dimInfo","visualDefault","asc","replacableOptionKeys","dataBound","inRange","outOfRange","contentColor","textGap","_dataExtent","controllerVisuals","itemSize","resetItemSize","completeVisualOption","resetVisual","getTargetSeriesIndices","optionSeriesIndex","seriesIndices","eachTargetSeries","getSeriesByIndex","formatValueText","edgeSymbols","isMinMax","textValue","resetExtent","optDim","listDimensions","isCalculationCoord","completeSingle","defa","stateExist","stateAbsent","optExist","optAbsent","symbolExists","symbolSizeExists","visuals","setSelected","active","inactive","autoPositionValues","doRender","renderBackground","getControllerVisual","targetValue","visualCluster","opts","forceState","visualObj","defaultColor","visualMapping","convertOpacityToAlpha","positionGroup","getItemAlign","modelOption","ecSize","realIndex","paramsSet","reals","fakeValue","layoutInput","rParam","convertDataIndex","batchItem","dataIndexInside","giveStore","newSnapshot","dataZoomId","head","snapshot","doCreateNode","urn","win","window","vmlInited","doc","namespaces","zrvml","createNode","initVML","styleSheets","createStyleSheet","addRule","Cartesian","getAxesByScale","axisX","axisY","reserved","xScale","yScale","xAxisExtent","yAxisExtent","dimAxisMapper","_axes","_dimList","scaleType","toLowerCase","filter","_dataCoordConvert","input","dimList","output","Axis","coordExtent","getGlobalExtent","clamp","containLabel","brushSelector","getProgressive","getProgressiveThreshold","progressiveThreshold","barItemStyle","BAR_BORDER_WIDTH_QUERY","extendChartView","_updateDrawMode","coordinateSystemType","_isLargeDraw","_renderLarge","_renderNormal","incrementalPrepareRender","_clear","incrementalRender","_incrementalRenderLarge","isLargeDraw","isHorizontalOrRadial","animationModel","hasValue","elementCreator","updateStyle","removeRect","removeSector","createLarge","cartesian2d","isUpdate","animateProperty","animateTarget","isRadial","endAngle","sector","Sector","r0","fixedLineWidth","rawLayout","getLineWidth","signX","signY","isPolar","getBarItemStyle","LargePath","startPoint","__startPoint","valueIdx","__valueIdx","moveTo","setLargeStyle","_getBarItemStyle","makeStyleMapper","excludes","getBorderLineDash","AxisBuilder","AxisView","cartesianAxisHelper","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","axisPointerClass","oldAxisGroup","_axisGroup","axisBuilder","getGroup","groupTransition","_splitAreaColors","_splitLine","isBlank","splitLineModel","lineStyleModel","lineColors","lineCount","ticksCoords","getTicksCoords","tickModel","tickCoord","colorIndex","tickValue","subPixelOptimizeLine","anid","_splitArea","splitAreaModel","areaStyleModel","areaColors","areaColorsLen","lastSplitAreaColors","newSplitAreaColors","cIndex","prev","getAreaStyle","baseClone","CLONE_DEEP_FLAG","CLONE_SYMBOLS_FLAG","arrayEach","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","initCloneArray","initCloneByTag","initCloneObject","isMap","isSet","CLONE_FLAT_FLAG","objectTag","cloneableTags","bitmask","stack","isFlat","isFull","isFunc","subValue","keysIn","copyObject","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","boolTag","dateTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","dataView","reFlags","regexp","lastIndex","symbolValueOf","valueOf","baseIsMap","nodeIsMap","baseIsSet","nodeIsSet","dataOpt","pointer","offsetCenter","detail","PointerPath","ChartView","_number","formatLabel","labelFormatter","colorList","posInfo","parsePosition","_renderMain","angleRangeSpan","prevEndAngle","axisLineWidth","getColor","tmp","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","subSplitNumber","splitLineLen","tickLen","step","subStep","splitLineStyle","tickLineStyle","unitX","unitY","tickLine","valueExtent","angleExtent","pointerModel","titleModel","forceRich","detailModel","textWidth","textHeight","clipOverflow","showSymbol","showAllSymbol","sampling","animationEasing","hoverLayerThreshold","lineAnimationDiff","_poly","_helper","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","getBandWidth","createClipShape","hasAnimation","forSymbol","radiusExtent","RADIAN","createPolarClipShape","xExtent","yExtent","expandSize","createGridClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","stepPt","middle","stepPt2","getIsIgnoreFunc","isAuto","availSize","dataLen","canShowAllSymbolForCategory","categoryDataDim","labelMap","getViewLabels","labelItem","lineGroup","symbolDraw","_symbolDraw","_lineGroup","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","_polygon","isAreaChart","isEmpty","getStackedOnPoints","isIgnoreFunc","__temp","_step","_newPolygon","setClipPath","_stackedOnPoints","_points","_updateAnimation","_newPolyline","colorStops","stopLen","minCoord","maxCoord","coordSpan","gradient","LinearGradient","getVisualGradient","stackedOnSeries","_valueOrigin","queryDataIndex","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","status","cmd","idx1","ptIdx","animators","newData","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","diffResult","diffData","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","newDataOldCoordInfo","oldDataNewCoordInfo","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","samplers","frame","nearest","indexSampler","sampler","rate","downSample","_format","dataSelectableMixin","retrieveRawAttr","MapSeries","needsDrawMap","updateSelectedMap","_createSelectableList","getRawData","targetList","_fillOption","regionName","seriesNames","otherIndex","originalData","getTooltipPosition","getRegion","showLegendSymbol","dataRangeHoverLink","scaleLimit","parseGeoJson","geoFixFuncs","_nameCoordMap","loadGeoJson","containCoord","message","regionsMap","specialArea","_regionsMap","fixFunc","getRegionByCoord","getGeoCoord","regionRect","union","Region","coordsOffsetMap","南海诸岛","广东","香港","澳门","天津","coordFix","geoCoordMap","Russia","United States","United States of America","mapModel","seriesId","_mapDraw","_renderSymbols","circle","Circle","fullData","mainSeries","fullIndex","polygonGroups","extendFrom","__mapOriginalZ2","processedMapType","mapSymbolOffsets","subMapSeries","seriesGroups","hostGeoModel","seriesList","statisticType","mapKey","dataStatistics","series","seriesOpt","mapLocation","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","msg","error","registerMap","coordinates","encodeOffsets","childNum","UTF8Encoding","_echarts","_export","LargeSymbolDraw","pointsLayout","_updateSymbolDraw","_finished","IncrementalDisplayable","LargeSymbolPath","extendShape","symbolProxy","symbolProxyShape","getContext","afterBrush","fillRect","restoreTransform","findDataIndex","largeSymbolProto","rectHover","_setCommon","startIndex","endIndex","addDisplayable","isIncremental","extrudeShadow","IndicatorAxis","IntervalScale","getScaleExtent","Radar","radarModel","_indicatorAxes","getIndicatorModels","indicatorModel","indicatorAxis","getIndicatorAxes","indicatorIndex","coordToPoint","sqrt","closestAxis","radian","minRadianDiff","closestAxisIdx","coodToData","viewSize","indicatorAxes","radarSeries","increaseInterval","exp10","LN10","f","rawExtent","fixedMin","getMin","fixedMax","getMax","getInterval","setInterval","getTicks","halfSplitNumber","radarList","radar","valueAxisDefault","defaultsShow","showName","nameFormatter","indicatorModels","indicatorOpt","iNameTextStyle","indName","indicator","_buildAxes","_buildSplitLineAndArea","axisBuilders","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","splitLines","splitAreas","ticksRadius","getColorIndex","Ring","realSplitNumber","axesTicksPoints","prevPoints","mergePath","areaOrLine","areaOrLineColorList","RadarSeries","generateCoord","generateCoordCount","radarIndex","normalizeSymbolSize","updateSymbols","oldPoints","newPoints","symbolGroup","__dimIdx","getInitialPoints","hoverAreaStyleModel","polygonIgnore","hoverPolygonIgnore","itemHoverStyle","labelHoverModel","labelDimIndex","axes","pointsConverter","polarOptArr","polarNotRadar","polarOpt","polarIndex","treeLayout","layoutInfo","treeOption","treeDepth","expandTreeDepth","expandAndCollapse","initialTreeDepth","collapsed","getOrient","realRoot","animationDuration","_oldTree","_mainGroup","curvature","updateNode","removeNode","getTreeNodeStyle","virtualRoot","sourceSymbolEl","sourceLayout","sourceOldLayout","rawX","__radialOldRawX","rawY","__radialOldRawY","targetLayout","__radialRawX","__radialRawY","rad","isLeft","rootLayout","__edge","BezierCurve","getEdgeShape","cpx2","cpy2","radialCoor1","radialCoor2","radialCoor3","radialCoor4","_traversalHelper","eachAfter","eachBefore","_layoutHelper","sep","kx","ky","coorX","coorY","finalCoor","commonLayout","treemapVisual","treemapLayout","_viewRoot","clipWindow","squareRatio","leafDepth","drillDownIcon","zoomToNodeRatio","roam","nodeClick","breadcrumb","emptyItemWidth","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","upperLabel","gapWidth","borderColorSaturation","visualDimension","visualMin","visualMax","colorMappingBy","visibleMin","childrenVisibleMin","completeTreeValue","childValue","thisValue","hasColorDefine","globalColorList","modelColor","level0","setDefault","resetViewRoot","setLayoutInfo","mapIdToIndex","idIndexMap","_idIndexMap","_idIndexMapCount","getViewRoot","Breadcrumb","animationUtil","PATH_LABEL_NOAMAL","PATH_LABEL_EMPHASIS","PATH_UPPERLABEL_NORMAL","PATH_UPPERLABEL_EMPHASIS","Z_BASE","Z_BG","Z_CONTENT","getItemStyleEmphasis","getItemStyleNormal","_containerGroup","_storage","nodeGroup","background","_breadcrumb","_state","models","findComponents","payloadType","thisStorage","reRoot","rootNodeGroup","direction","containerGroup","_giveContainerGroup","renderResult","_doRender","renderFinally","_doAnimation","_resetController","_renderBreadcrumb","_initEvents","thisTree","oldTree","lastsForAnimation","oldStorage","willInvisibleEls","doRenderNode","renderNode","dualTravel","thisViewChildren","oldViewChildren","parentGroup","sameTree","processNode","thisNode","oldNode","willDeleteEls","storageName","delEls","__tmWillDelete","clearStorage","els","duration","easing","animationWrap","createWrap","__tmNodeWidth","__tmNodeHeight","targetX","targetY","last","old","fadein","_onPan","_onZoom","_clearController","rootRect","translate","findTarget","isLeafRoot","_rootToNode","_zoomToNode","linkTarget","open","bgEl","thisLayout","isInView","thisWidth","thisHeight","thisInvisible","thisRawIndex","oldRawIndex","upperHeight","isParent","itemStyleNormalModel","itemStyleEmphasisModel","giveGraphic","isAboveViewRoot","bg","useUpperLabel","visualBorderColor","emphasisBorderColor","emphasisStyle","upperLabelWidth","prepareText","contentWidth","contentHeight","renderContent","__tmWillVisible","upperLabelRect","nodeModel","iconChar","normalLabelModel","emphasisLabelModel","isShow","truncate","outerWidth","outerHeight","minChar","lasts","prepareAnimationWhenHasOld","calculateZ","__tmDepth","__tmStorageName","lastCfg","parentOldX","parentOldY","parentOldBg","prepareAnimationWhenNoOld","zInLevel","zb","ARRAY_LENGTH","makeItemPoints","packEventData","itemNode","componentSubType","selfType","onSelect","normalStyleModel","layoutParam","totalWidth","_prepare","_renderContent","getTextRect","TEXT_PADDING","lastX","availableSize","getAvailableSize","textFont","getFont","onclick","doneCallback","elExistsMap","time","actionTypes","originViewRoot","ITEM_STYLE_NORMAL","seriesItemStyleModel","travelTree","designatedVisual","levelItemStyles","viewRootAncestors","nodeLayout","nodeItemStyleModel","levelItemStyle","visualName","buildVisuals","thisNodeColor","calculateColor","calculateBorderColor","rangeVisual","getRangeVisual","__drColorMappingBy","buildVisualMapping","childVisual","childVisuals","mappingType","getValueVisualDefine","retrieveValue","PATH_BORDER_WIDTH","PATH_GAP_WIDTH","PATH_UPPER_LABEL_SHOW","PATH_UPPER_LABEL_HEIGHT","ecWidth","ecHeight","seriesOption","containerWidth","containerHeight","viewAbovePath","rootSize","currNode","defaultSize","viewArea","currNodeValue","getUpperLabelHeight","estimateRootSize","viewRootLayout","squarify","hideChildren","halfGapWidth","upperLabelHeight","layoutOffset","layoutOffsetUpper","totalArea","orderBy","overLeafDepth","statistic","orderedChildren","deletePoint","filterByThreshold","initChildren","rowFixedLength","best","row","score","worst","treeRoot","defaultPosition","targetCenter","calculateRootPosition","prunning","clipRect","nodeInViewAbovePath","intersect","childClipRect","areaMax","areaMin","squareArea","flush","idx0WhenH","idx1WhenH","xy","wh","rowOtherLength","rowLen","wh1","remain","modWH","wh0","categoryFilter","categoryVisual","edgeVisual","forceLayout","createView","createGraphFromNodeEdge","GraphSeries","extendSeriesModel","_categoriesData","fillDataTextStyle","links","_updateCategoriesData","categoriesModels","_categoriesModels","categoryIdx","categoryModel","edgeLabelModel","fakeSeriesModel","emphasisEdgeLabelModel","emphasisFakeSeriesModel","edgeGetParent","parsePath","customizeGetParent","getEdgeData","getCategoriesData","multipleSeries","getEdgeByIndex","sourceName","targetName","categoriesData","focusNodeAdjacency","circular","rotateLabel","force","initLayout","repulsion","gravity","edgeLength","layoutAnimation","edgeSymbol","edgeSymbolSize","edgeLabel","nodeScaleRatio","enableClassCheck","generateNodeKey","_directed","_nodesMap","_edgesMap","graphProto","Node","inEdges","outEdges","hostGraph","Edge","n1","n2","isDirected","nodesMap","getNodeByIndex","rawIdx","edgesMap","isInstance","getEdge","breadthFirstTraverse","startNode","__visited","queue","currentNode","otherNode","filterSelf","inDegree","outDegree","createGraphDataProxyMixin","hostName","getGraphicEl","adjustEdge","nodeOpacityPath","lineOpacityPath","getItemOpacity","opacityPath","fadeOutItem","opacityRatio","fadeInItem","_lineDraw","_firstRender","_nodeScaleRatio","_getNodeGlobalScale","_updateNodeAndLinkScale","clearTimeout","_layoutTimeout","_startForceLayoutIteration","warmUp","_layouting","setFixed","setUnfixed","__focusNodeAdjacency","__unfocusNodeAdjacency","edgeDataIndex","circularRotateLabel","adjacentEdge","unfocusNodeAdjacency","stopped","setTimeout","nodeScale","groupScale","groupZoom","straightLineProto","bezierCurveProto","isLine","curveTool","v1","v2","v3","v2DistSquare","distSquare","mathAbs","intersectCurveCircle","curvePoints","p0","radiusSquare","_t","nextDiff","tmp0","quadraticSubdivide","pts2","fromSymbol","toSymbol","__original","originalPoints","legendModels","graphSeries","categoryNames","paletteScope","categoryNameIdxMap","getColorFromPalette","colorQuery","opacityQuery","_simpleLayoutHelper","preservedPoints","forceModel","nodeDataExtent","edgeDataExtent","rep","forceInstance","oldStep","l","random","pp","friction","v12","nLen","repFact","viewList","coordSysType","positions","fromPoints","bbWidth","bbHeight","viewCoordSys","funnelLayout","FunnelSeries","_defaultLabelLine","labelLineNormalOpt","labelLine","labelLineEmphasisOpt","minSize","gap","funnelAlign","FunnelPiece","hoverIgnore","normalIgnore","funnelPieceProto","opacityAccessPath","firstCreate","_updateLabel","labelText","labelLayout","labelLineModel","labelLineHoverModel","funnelPiece","piePiece","valueArr","isAscending","getSortedIndices","sizeExtent","getLinePoints","offY","textY","labelPosition","isLabelInside","labelLineLen","parallelVisual","parallel","hasParallelSeries","createParallelIfNeeded","parallelAxis","axisOption","parallelIndex","parallelOption","parallelAxisDefault","mergeAxisOptionFromParallel","axisHelper","ParallelAxis","sliderMove","mathFloor","mathCeil","_axesLayout","_init","parallelAxisIndex","_updateAxesFromSeries","_makeLayoutInfo","axisBase","layoutBase","pixelDimIndex","pAxis","pLayout","axisLength","layoutLength","_layoutAxes","winSize","layoutExtent","axisCount","axisExpandWidth","axisExpandCount","axisExpandable","axisCollapseWidth","winInnerIndices","axisExpandWindow0Pos","nameTruncateMaxWidth","axisNameAvailableWidth","axisLabelShow","positionTable","rotationTable","axisCoordToPoint","eachActiveState","dataDimensions","hasActiveSet","hasAxisBrushed","activeState","getValues","lenj","getActiveState","axisLayout","getAxisLayout","pointCoord","triggerArea","useJump","axisExpandCenter","axisExpandRate","axisExpandDebounce","axisExpandSlideTriggerArea","axisExpandTriggerOn","_initDimensions","setAxisExpand","activeIntervals","getAreaSelectStyle","setActiveIntervals","intervals","areaSelectStyle","parallelAxisModel","elementList","_brushController","_onBrush","fromAxisAreaSelect","areaWidth","builderOpt","strokeContainThreshold","_refreshBrushController","extentLen","getCoverInfoList","coverInfoList","coverInfo","parallelAxisId","visualColorAccessPath","encodeDefine","dataDimIndex","setEncodeAndDimensions","getRawIndicesByActiveState","theActiveState","inactiveOpacity","activeOpacity","DEFAULT_SMOOTH","createLinePoints","addEl","dataGroup","updateElCommon","_dataGroup","_initialized","newDataIndex","oldDataIndex","rectEl","removeClipPath","globalColors","opacityMap","normal","itemOpacity","sankeyLayout","sankeyVisual","SankeySeries","setNodePosition","localPosition","localX","localY","rawDataOpt","nodeWidth","nodeGap","layoutIterations","SankeyShape","halfExtent","curve","n1Layout","node1Model","dragX1","dragY1","n2Layout","node2Model","dragX2","dragY2","edgeLayout","sy","dragX","dragY","nest","resolveCollisions","nodesByBreadth","ascendingDepth","nodeY","relaxRightToLeft","alpha","weightedTarget","getEdgeValue","relaxLeftToRight","weightedSource","ascendingTargetDepth","ascendingSourceDepth","ascending","value1","value2","computeNodeValues","iterations","remainEdges","indegreeArr","zeroIndegrees","nextNode","indexEdge","nodeIndex","moveSinksRight","scaleNodeBreadths","computeNodeBreadths","kyArray","ky0","nodeDy","edgeDy","initializeNodeDepth","computeNodeDepths","computeEdgeDepths","layoutSankey","minValue","maxValue","nodeValue","mapValueToColor","customColor","boxplotVisual","boxplotLayout","BoxplotSeries","defaultTooltip","boxWidth","NORMAL_ITEM_STYLE_PATH","EMPHASIS_ITEM_STYLE_PATH","BoxplotView","constDim","createNormalBox","updateNormalBoxData","BoxPath","transInit","updateMethod","normalItemStyleModel","initBaseline","borderColorQuery","eachRawSeriesByType","defaulColor","groupResult","axisList","seriesModels","groupSeriesByAxis","groupItem","bandWidth","seriesCount","boxWidthList","boxOffsetList","boundList","maxDataCount","boxWidthBound","availableWidth","boxGap","calculateBase","halfWidth","cDimIdx","vDimIdx","cDim","vDims","axisDimVal","median","getPoint","end1","end2","end4","end5","addBodyEnd","layEndLine","dimIdx","point1","point2","endCenter","layoutSingleSeries","preprocessor","candlestickVisual","candlestickLayout","CandlestickSeries","color0","borderColor0","barMaxWidth","barMinWidth","barWidth","animationUpdate","getShadowDim","selectors","brushRect","SKIP_PROPS","CandlestickView","_incrementalRenderNormal","isSimpleBox","setBoxCommon","NormalBoxPath","__simpleBox","LargeBoxPath","__sign","largePoints","elP","elN","suffix","seriesItem","positiveBorderColorQuery","negativeBorderColorQuery","positiveColorQuery","negativeColorQuery","colorP","colorN","borderColorP","getBorderColor","borderColorN","subPixelOptimize","LargeArr","candleWidth","calculateCandleWidth","openDim","closeDim","lowestDim","highestDim","openVal","closeVal","lowestVal","highestVal","getSign","ocLow","ocHigh","ocLowPoint","ocHighPoint","lowestPoint","highestPoint","subPixelOptimizePoint","makeBrushRect","pmin","pmax","effectType","showEffectOn","rippleEffect","EffectSymbol","effectSymbolDraw","_updateGroupTransform","updateRipplePath","rippleGroup","effectCfg","ripplePath","effectSymbolProto","stopEffectAnimation","startEffectAnimation","effectOffset","rippleScale","animateStyle","updateEffectAnimation","oldEffectCfg","_effectCfg","DIFFICULT_PROPS","propName","linesLayout","linesVisual","concatArray","Uint32Arr","Uint32Array","Float64Arr","Float64Array","compatEc2","itemOpt","coords","fromName","toName","LinesSeries","_processFlatCoordsArray","_flatCoords","flatCoords","_flatCoordsOffset","flatCoordsOffset","appendData","_getCoordsFromItemModel","startOffset","coordsOffsetAndLenStorage","coordsStorage","coordsCursor","offsetCursor","dataCount","preventIncremental","effect","trailLength","EffectPolyline","LargeLineDraw","_updateLineDraw","isSvg","painter","getType","getLayer","_lastZlevel","configLayer","motionBlur","_showEffect","lastFrameAlpha","_clearLayer","progressiveRender","hasEffect","_hasEffet","_isPolyline","_lastFrame","_lastFramePercent","effectPolylineProto","accLenArr","_offsets","_length","offsets","lastFrame","lerp","lineContain","quadraticContain","LargeLineShape","segs","quadraticCurveTo","containStroke","largeLineProto","lineEl","__startIndex","coordSysCreator","blurSize","pointSize","maxOpacity","minOpacity","HeatmapLayer","visualMapOfThisSeries","targetSeries","_incrementalDisplayable","_renderOnCartesianAndCalendar","isGeoCoordSys","_renderOnGeo","hoverStl","dataDims","dataToRect","contentShape","inRangeVisuals","outOfRangeVisuals","hmLayer","_hmLayer","lng","lat","isInRange","dataSpan","getIsInContinuousRange","getIsInPiecewiseRange","getPieceList","img","Image","canvas","Heatmap","createCanvas","_gradientPixels","colorFunc","_getBrush","gradientInRange","_getGradient","gradientOutOfRange","globalAlpha","drawImage","imageData","getImageData","pixels","pixelLen","diffOpacity","gradientOffset","putImageData","brushCanvas","_brushCanvas","clearRect","arc","gradientPixels","pixelsSingleState","Uint8ClampedArray","PictorialBarSeries","symbolPosition","symbolMargin","symbolRepeat","symbolRepeatDirection","symbolClip","symbolBoundingData","symbolPatternSize","barGap","isNumeric","LAYOUT_ATTRS","posDesc","pathForLineWidth","getSymbolMeta","symbolMeta","boundingLength","zeroPx","pxSignIdx","symbolBoundingExtent","convertToCoordOnAxis","coordSysExtent","repeatCutLength","pxSign","prepareBarLength","categoryDim","categorySize","symbolScale","prepareSymbolSize","valueLineWidth","prepareLineWidth","unitLength","pathLen","absBoundingLength","hasEndGap","lastIndexOf","uLenWithMargin","endFix","repeatSpecified","repeatTimes","toIntTimes","mDiff","sizeFix","pathPosition","bundlePosition","barRectShape","prepareLayoutInfo","createPath","createOrUpdateRepeatSymbols","bar","bundle","__pictorialBundle","unit","eachPath","__pictorialAnimationIndex","__pictorialRepeatTimes","updateAttr","makeTarget","updateHoverAnimation","onMouseOver","onMouseOut","createOrUpdateSingleSymbol","mainPath","__pictorialMainPath","createOrUpdateBarRect","rectShape","barRect","__pictorialBarRect","createOrUpdateClip","__pictorialClipPath","getAnimationDelayParams","createBar","__pictorialShapeStr","getShapeStr","__pictorialSymbolMeta","removeBar","labelRect","pathes","immediateAttrs","animationAttrs","barRectHoverStyle","barPositionOutside","times","roundedTimes","coordSysRect","pictorialShapeStr","updateBar","themeRiverLayout","themeRiverVisual","Single","singles","SingleAxis","_axis","_adjustAxis","_updateAxisTransform","extentSum","singleAxisHelper","SingleAxisView","selfBuilderAttr","getLineDash","BaseAxisPointer","viewHelper","XY","WH","SingleAxisPointer","makeElOption","elOption","axisPointerModel","getPointDimIndex","pixelValue","axisPointerType","buildElStyle","pointerOption","pointerShapeBuilder","graphicKey","buildCartesianSingleLabelElOption","getHandleTransform","labelMargin","getTransformedPosition","updateHandleTransform","currPosition","cursorOtherValue","cursorPoint","tooltipOption","makeLineShape","shadow","makeRectShape","registerAxisPointerClass","ThemeRiverSeries","fixData","rawDataLength","dataByName","layData","dataList","layerNum","largestLayer","timeValue","keyIndex","nameList","dimensionsDefine","getLayerSeries","lenCount","indexArr","layerSeries","timeDim","comparer","index1","index2","getAxisTooltipData","nestestValue","minDist","Number","MAX_VALUE","nearestIdx","pointNum","theValue","dataIndices","htmlName","htmlValue","_layers","keyGetter","dataDiffer","_layersSeries","newLayersGroups","oldLayersGroups","points0","textLayout","layerGroup","baseY0","layerPoints","singleLayer","sums","temp","computeBaseline","baseLine","layerIndex","idxMap","sunburstLayout","minAngle","percentPrecision","stillShowZeroSum","highlightPolicy","renderLabelForZeroData","animationType","SunburstPiece","newRoot","newChildren","oldChildren","_oldChildren","newId","oldId","newNode","virtualPiece","_onclickEvent","renderRollUp","unhighlight","targetFound","NodeHighlightPolicy","DESCENDANT","ANCESTOR","SELF","DEFAULT_SECTOR_Z","DEFAULT_TEXT_Z","SunburstPieceProto","_ecModel","sectorShape","getRootId","getNodeColor","stateStyle","activeNode","policy","onHighlight","onDownplay","normalModel","getLabelAttr","labelMinAngle","midAngle","labelPadding","rotateType","stateAttr","ROOT_TO_NODE_ACTION","HIGHLIGHT_ACTION","rootDepth","isAsc","sortOrder","validDataCount","unitRadian","renderRollupNode","rPerLevel","rStart","rEnd","siblingAngle","getLayoutOnAxis","prepareCartesian2d","prepareGeo","prepareSingleAxis","preparePolar","prepareCalendar","ITEM_STYLE_NORMAL_PATH","ITEM_STYLE_EMPHASIS_PATH","LABEL_NORMAL","LABEL_EMPHASIS","GROUP_DIFF_PREFIX","prepareCustoms","calendar","prepareStyleTransition","targetStyle","elOptionStyle","oldElStyle","makeRenderItem","customSeries","prepareResult","currDataIndexInside","currItemModel","currLabelNormalModel","currLabelEmphasisModel","currVisualColor","userAPI","getDevicePixelRatio","updateCache","styleEmphasis","barLayout","currentSeriesIndices","getCurrentSeriesIndices","userParams","dataInsideLength","encode","wrapEncodeDef","currDirty","encodeDef","isExtraCoord","coordDimIndex","animatableModel","doCreateOrUpdate","elOptionType","__customGraphicType","pathData","__customPathData","__customImagePath","__customText","graphicType","makePath","Clz","charAt","toUpperCase","createEl","targetProps","targetOpacity","updateEl","diffChildrenByName","processAddUpdate","processRemove","childOption","setIncrementalAndHoverLayer","dataToCoordSize","dataSize","halfSize","dataToRadius","dataToAngle","rangeInfo","getRangeInfo","cellWidth","getCellWidth","cellHeight","getCellHeight","weeks","dayCount","allDay","graphicOption","elements","GraphicModel","parentId","_elOptionsToUpdate","newList","existList","flattenedList","_flatten","mappingResult","mappingToExists","makeIdAndName","elOptionsToUpdate","resultItem","newElOption","existElOption","exist","keyInfo","newElParentOption","parentOption","setKeyInfoToNewElOption","newElOptCopy","$action","copyLayoutParams","mergeNewElOptionToExist","existItem","hv","isSetLoc","setLayoutInfoToExist","optionList","useElOptionsToUpdate","targetElParent","elMap","__ecGraphicId","removeEl","existEl","existElParent","removeKey","_elMap","_lastGraphicModel","graphicModel","_updateElements","_relocate","rootGroup","textBaseline","elOptionCleaned","LOCATION_PARAMS","getCleanedElOption","__ecGraphicWidth","__ecGraphicHeight","elOptions","parentEl","containerInfo","boundingMode","bounding","legendFilter","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","filterSeries","ScrollableLegendModel","setScrollDataIndex","scrollDataIndex","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","mergeAndNormalizeLayoutParams","raw","LegendView","ScrollableLegendView","_currentIndex","_controllerGroup","_showController","__rectSize","me","controllerGroup","createPageButton","pageTextStyleModel","iconIdx","pageDataIndexName","icon","createIcon","_pageGo","orientIdx","hw","yx","controllerRect","showController","contentPos","containerPos","controllerPos","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","legendId","canJump","pageText","pageCount","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","itemRect","itemLoc","startIdx","winRect","getItemRect","startRect","barPolar","getSeriesStackId","getAxisKey","lastStackCoords","barWidthAndOffset","barSeries","columnsMap","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","stackId","barCategoryGap","coordSysName","barGapPercent","autoWidth","column","lastColumn","widthSum","calRadialBar","getSeriesByType","columnLayoutInfo","columnOffset","columnWidth","valueAxisStart","baseValue","baseCoord","radiusSpan","angleSpan","RadiusAxis","AngleAxis","_radiusAxis","_angleAxis","pointToCoord","radiusToData","angleToData","maxAngle","foundAxisModel","PolarAxisModel","polarId","polarAxisDefaultExtendedOption","getAxisLineShape","rExtent","getRadiusIdx","fixAngleOverlap","firstItem","lastItem","ticksAngles","labels","_axisLine","_axisTick","lines","tickAngleItem","_axisLabel","rawCategoryData","commonLabelModel","labelTextAlign","labelTextVerticalAlign","formattedLabel","prevAngle","r1","axisAngle","labelRotate","layoutAxis","prevRadius","PolarAxisPointer","animationThreshold","coordValue","labelPos","innerTextLayout","getLabelPosition","buildLabelElOption","makeSectorShape","makeAction","actionInfo","selectableMixin","GeoModel","_optionModelMap","reduce","optionModelMap","regionOpt","DEFAULT_TOOLBOX_BTNS","brushComponents","brushComponentSpecifiedBtns","brushOpt","tbs","toolbox","feature","toolboxFeature","toolboxBrush","brushTypes","flag","removeDuplicate","selector","STATE_LIST","DISPATCH_METHOD","DISPATCH_FLAG","PRIORITY_BRUSH","BRUSH","doDispatch","brushSelected","isDisposed","checkInRange","selectorsByBrushType","rangeInfoList","getSelectorsByBrushType","sels","selectorsByElementType","bSelector","sel","brushModel","setBrushOption","brushTargetManager","throttleType","throttleDelay","brushIndex","thisBrushSelected","brushId","brushName","brushLink","linkedSeriesMap","selectedDataIndexForLink","rangeInfoBySeries","hasBrushExists","selFn","elType","bindSelector","boundingRect","boundingRectBuilders","linkOthers","brushed","stepAParallel","brushModelNotControll","stepAOthers","seriesBrushSelected","fn","getBoundingRectFromMinMax","rg","polygonContain","getLineSelectors","inLineRange","layoutRange","lineIntersectPolygon","lx","ly","l2x","l2y","lineIntersect","a1x","a1y","a2x","a2y","b1x","b1y","b2x","b2y","determinant","namenda","miu","v4","DEFAULT_OUT_OF_BRUSH_COLOR","generateBrushOption","coordInfoList","inBrush","outOfBrush","setAreas","updateController","updateView","modelId","$from","featureManager","brushLang","Brush","_brushMode","keep","featureModel","isBrushed","setIconStatus","getIcons","availableIcons","icons","command","Calendar","calendarModel","getDimensionsInfo","_rangeInfo","_sw","_sh","_orient","getFirstDayOfWeek","_firstDayOfWeek","getDateInfo","date","parseDate","getFullYear","getMonth","getDate","day","getDay","getTime","formatedDate","getNextNDay","Date","setDate","_lineWidth","_getRangeInfo","_initRangeOption","whNames","cellSize","layoutParams","cellNumbers","cellSizeSpecified","whGlobal","calendarRect","dayInfo","week","nthWeek","pointToDate","tl","tr","br","bl","nthX","nthY","_getDateByWeeksAndDay","firstDay","setMonth","reversed","startDateNum","endDateNum","fweek","lweek","nthDay","calendarList","calendarSeries","sizeCalculable","CalendarModel","dayLabel","monthLabel","yearLabel","hvIdx","MONTH_TEXT","EN","CN","WEEK_TEXT","_tlpoints","_blpoints","_firstDayOfMonth","_firstDayPoints","rangeData","_renderDayRect","_renderLines","_renderYearText","_renderMonthText","_renderWeekText","itemRectStyleModel","sh","addPoints","_getLinePointsOfOneWeek","_drawSplitline","_getEdgesPoints","rs","poyline","tmpD","_formatterLabel","formatTplSimple","_yearTextPositionControl","aligns","xc","yc","posPoints","yearText","_monthTextPositionControl","isCenter","vAlign","termPoints","firstDayPoints","yyyy","yy","MM","monthText","_weekTextPositionControl","isStart","firstDayOfWeek","weekText","_dimName","_axisIndex","_valueWindow","_percentWindow","_minMaxSpan","_dataZoomModel","setAxisModel","isRestore","percentWindow","valueWindow","getPixelPrecision","useOrigin","setRange","getOtherAxisModel","coordSysIndexName","foundOtherAxisModel","otherAxisModel","getMinMaxSpan","calculateDataWindow","percentExtent","boundValue","boundPercent","seriesData","seriesExtent","getApproximateExtent","isCategoryAxis","axisDataLen","fixExtentByAxis","calculateDataExtent","dataWindow","minMaxSpan","valueSpan","setMinMaxSpan","restore","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","isInWindow","selectRange","setApproximateExtent","dataBackground","fillerColor","handleIcon","handleStyle","labelPrecision","showDetail","showDataShadow","zoomLock","DataZoomView","HORIZONTAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_displayables","_range","_handleEnds","_size","_handleWidth","_handleHeight","_location","_dataShadowInfo","_buildView","_updateView","_resetLocation","_resetInterval","barGroup","_renderBackground","_renderHandle","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","location","targetAxisModel","otherAxisInverse","_getViewExtent","_onClickPanelClick","_prepareDataShadowInfo","otherDim","otherDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","thisCoord","stride","otherCoord","thisAxis","thisDim","displaybles","handles","handleLabels","filler","getCursor","_onDragMove","onmousemove","ondragstart","_showDataInfo","_onDragEnd","onmouseover","onmouseout","subPixelOptimizeRect","bRect","handleColor","viewExtent","_updateInterval","viewExtend","lastRange","nonRealtime","handleInterval","handle","handleHeight","_updateDataInfo","labelTexts","dataInterval","_formatLabel","orderedHandleEnds","barTransform","textPoint","valueStr","getLabel","showOrHide","vertex","changed","_dispatchZoomAction","localPoint","disabled","roams","InsideZoomView","allCoordIds","coordInfo","generateCoordId","dataZoomOption","coordId","containsPoint","throttleRate","panGetRange","zoomGetRange","roamControllerOpt","unregister","newX","newY","directionInfo","getDirectionInfo","percentDelta","signal","pixel","pixelLength","percentPoint","pixelStart","oldPoint","newPoint","cleanStore","record","onPan","wrapAndDispatch","onZoom","getRange","dataZoomInfos","dataZoomInfo","theDataZoomId","theCoordId","newRecord","createController","controllerParams","typePriority","type_true","type_move","type_false","type_undefined","oneType","mergeControllerParams","VisualMapModel","DEFAULT_BAR_BOUND","ContinuousModel","hoverLink","hoverLinkDataSize","hoverLinkOnHandle","_resetRange","auto","getSelected","findTargetDataIndices","oVals","getColorStopValues","iVals","setStop","iIdx","oIdx","iLen","oLen","first","stopsLen","stopValues","VisualMapView","HOVER_LINK_SIZE","HOVER_LINK_OUT","ContinuousView","_shapes","_dataInterval","_useHandle","_hoverLinkDataIndices","_hovering","_renderBar","dataRangeText","_renderEndsText","_enableHoverLinkToSeries","_enableHoverLinkFromSeries","endsIndex","_applyTransform","targetGroup","shapes","useHandle","_createBarGroup","createPolygon","_dragHandle","textSize","handleThumbs","handleLabelPoints","_createHandle","_createIndicator","onDrift","onDragEnd","handleThumb","createHandlePoints","handleLabel","handleLabelPoint","indicatorLabel","indicatorLabelPoint","visualMapId","_clearHoverLinkToSeries","useHoverLinkOnHandle","_doHoverLinkToSeries","forSketch","outOfRangeHandleEnds","inRangeHandleEnds","visualInRange","_createBarVisual","visualOutOfRange","barColor","barPoints","_updateHandle","_makeColorGradient","symbolSizes","_createBarPoints","handlesColor","currValue","_showIndicator","cursorValue","rangeSymbol","halfHoverLinkSize","isRange","extentMax","createIndicatorPoints","_hoverLinkFromSeriesMouseOver","_hideIndicator","_clearHoverLinkFromSeries","cursorPos","hoverOnBar","getHalfHoverLinkSize","hoverRange","oldBatch","newBatch","resultBatches","compressBatches","_dispatchHighDown","dataModel","global","reformIntervals","PiecewiseModel","minOpen","maxOpen","itemSymbol","_pieceList","mode","_mode","_determineMode","resetMethods","_resetSelected","visualTypesInPieces","exists","getSelectedMapKey","hasSel","getRepresentValue","representValue","pieceInterval","curr","parseInt","splitStep","normalizeReverse","pieceListItem","closeList","infinityList","useMinMax","_getItemAlign","viewData","_getViewData","endsText","viewPieceList","_onItemClick","_enableHoverLink","indexInModelPieceList","_createItemSymbol","visualState","onHoverLink","shapeParam","newKey","markPoint","markerHelper","updateMarkerLayout","mpData","xPx","yPx","markPointModel","mpModel","symbolDrawMap","coordDimsInfos","createList","markLine","MarkerView","markLineTransform","mlModel","mlFrom","mlTo","isInifinity","ifMarkLineHasOnlyDim","fromCoord","toCoord","otherDimIndex","markLineFilter","updateSingleMarkerEndLayout","isFrom","markLineModel","mlData","fromData","__from","toData","__to","lineDrawMap","optData","updateDataVisualAndLayout","lineColor","fromSymbolSize","toSymbolSize","markArea","colorUtil","markAreaTransform","maModel","lt","rb","ltCoord","rbCoord","markAreaFilter","getSingleMarkerEndPoint","dimPermutations","markAreaModel","areaData","areaGroupMap","polygonGroup","__data","transferItem","itemStyleEmphasis","labelNormal","excludeLabelAttr","timelineOpt","timeline","ec2Types","number","controlStyle","controlPosition","compatibleEC2","timelineModel","currentIndex","setCurrentIndex","isIndexMax","setPlayState","resetOption","playState","TimelineModel","SliderTimelineModel","checkpointStyle","showPlayBtn","showPrevBtn","showNextBtn","playIcon","stopIcon","nextIcon","prevIcon","autoPlay","rewind","playInterval","_names","_initData","getCurrentIndex","getPlayState","dataArr","idxArr","getDataItemValue","dimType","TimelineView","TimelineAxis","_timer","_currentPointer","_labelGroup","mainGroup","_createGroup","labelGroup","_createAxis","_renderAxisLabel","_position","_doPlayStop","_clearTimer","labelPosOpt","playPosition","prevBtnPosition","nextBtnPosition","labelAlignMap","labelBaselineMap","rotationMap","mainLength","controlModel","showControl","controlSize","controlGap","sizePlusGap","xLeft","xRight","labelAlign","labelBaseline","rotateOriginX","rotateOriginY","viewBound","getBound","mainBound","labelBound","mainPosition","labelsPosition","mainBoundIdx","toBound","setOrigin","boundIdx","niceTicks","newGroup","_renderAxisLine","_renderAxisTick","ticks","hoverStyleModel","symbolOpt","_changeTimeline","giveSymbol","getLabelModel","_renderControl","makeBtn","iconPath","willRotate","btn","objPath","makeIcon","_handlePlayClick","_renderCurrentPointer","onCreate","_handlePointerDrag","_handlePointerDragend","pointerMoveTo","nextState","_pointerChangeTimeline","mousePos","_toAxisCoord","targetDataIndex","_findNearestTick","trans","axisCoord","nextIndex","noAnimation","dragging","ToolboxModel","featureOpt","featureName","Feature","showTitle","iconStyle","listComponentHelper","toolboxModel","featureOpts","_features","featureNames","_featureNames","processFeature","titleText","__title","makeFont","needPutOnTop","topOffset","oldName","isUserFeatureName","unusable","iconStyleModel","iconStyleEmphasisModel","titles","iconPaths","iconStr","iconName","createIconPaths","iconStatus","lang","saveAsImageLang","saveAsImage","SaveAsImage","excludeComponents","pixelRatio","$a","download","url","getConnectedDataURL","href","MouseEvent","browser","ie","navigator","msSaveOrOpenBlob","bstr","atob","u8arr","charCodeAt","blob","Blob","write","evt","bubbles","cancelable","dispatchEvent","magicTypeLang","magicType","MagicType","tiled","seriesOptGenreator","radioTypes","radio","newSeriesOpt","currentType","dataViewLang","BLOCK_SPLITER","ITEM_SPLITER","assembleSeriesWithCategoryAxis","tables","headers","columns","trim","itemSplitRegex","parseContents","blockMetaList","blocks","block","isTSVFormat","tsv","tsvLines","parseTSVContents","blockMeta","axisKey","hasName","parseListContents","_dom","tryMergeDataOption","original","readOnly","optionToContent","contentToOption","textColor","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","container","getDom","cssText","viewMain","textarea","seriesGroupByCategoryAxis","otherSeries","meta","groupSeries","argLen","getContentFromModel","htmlOrDom","getOption","isDom","buttonContainer","buttonStyle","closeButton","refreshButton","addEventListener","Error","keyCode","which","selectionStart","selectionEnd","substring","clientHeight","newSeriesOptList","history","dataZoomLang","dataZoom","DATA_ZOOM_ID_BASE","DataZoom","_isZoomActive","back","zoomActive","dataZoomSelectActive","retrieveAxisSetting","updateZoomBtnStatus","updateBackBtnStatus","nextActive","setBatch","found","dzModel","findDataZoom","dataZoomOpts","toolboxOpt","dataZoomOpt","addForAxis","axisIndicesName","givenAxisIndices","forEachComponent","axisOpt","$fromToolbox","restoreLang","Restore","registerPainter","colorTool","RectText","Displayable","Gradient","vmlCore","Z2","initRootElStyle","coordsize","coordorigin","rgb2Str","g","append","getZIndex","setColorAndOpacity","colorArr","getColorAndAlpha","updateFillAndStroke","vmlEl","zrEl","isFill","gradientType","focus","expansion","rectWidth","rectHeight","cs1","cs2","colorAndAlphaList","colors","colorAndAlpha","color1","color2","opacity1","opacity2","focusposition","updateFillNode","dashstyle","updateStrokeNode","brushVML","vmlRoot","_vmlEl","needTransform","strokeEl","det","weight","toStatic","nPoint","xi","yi","x3","y3","sx","zIndex","removeRectText","onRemove","onAdd","appendRectText","ow","oh","_imageSrc","_imageWidth","_imageHeight","imageRuntimeStyle","runtimeStyle","oldRuntimeWidth","oldRuntimeHeight","sWidth","sHeight","hasCrop","vmlElStyle","hasRotation","scaleX","scaleY","p3","maxX","maxY","transformFilter","imageTransformPrefix","imageEl","_imageEl","cropEl","_cropEl","imageELStyle","tmpImage","onload","overflow","cropElStyle","filterStr","textMeasureEl","fontStyleCache","fontStyleCacheCount","fontEl","$override","body","ex","offsetWidth","fromTextEl","rich","contentBlock","parseRichText","tokens","textLine","fontString","variant","fontVariant","family","getFontStyle","adjustTextX","adjustTextY","pathEl","textPathEl","skewEl","textVmlEl","_textVmlEl","nextSibling","textpathok","textVmlElStyle","zrLog","parseInt10","VMLPainter","vmlViewport","_vmlRoot","_vmlViewport","oldDelFromStorage","delFromStorage","oldAddToStorage","addToStorage","_firstPaint","getViewportRoot","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","refresh","_paintList","__alreadyNotVisible","beforeBrush","_getWidth","_getHeight","_width","_height","vmlViewportStyle","stl","currentStyle","clientWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","util","arrayDiff","GradientManager","ClippathManager","ShadowManager","checkParentAvailable","insertAfter","prevSibling","prepend","SVGPainter","_opts","gradientManager","clipPathManager","shadowManager","viewport","_viewport","_visibleList","setBackgroundColor","visibleList","listLen","newVisibleList","svgProxy","svgElement","prevSvgElement","removed","textSvgElement","added","addWithoutUpdate","_getDefs","display","_getSize","viewportStyle","whIdx","cwh","plt","prb","defaultView","getComputedStyle","pathToDataUrl","outerHTML","Diff","buildValues","components","newArr","oldArr","componentPos","componentLen","oldPos","component","equals","newLen","oldLen","editLength","maxEditLength","bestPath","extractCommon","execEditLength","diagonalPath","basePath","addPath","removePath","canAdd","canRemove","pushComponent","commonCount","tokenize","fillOrStroke","updateDom","__clipPaths","clipPaths","clipPathEl","mul","cloneNode","_textDom","hasShadow","textShadowBlur","textShadowOffsetX","textShadowOffsetY","_shadowDom","_shadowDomId","domChild","blur","textShadowColor","stdDeviation"],"mappings":"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","file":"static/js/13.4314eff0.chunk.js","sourcesContent":["/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","var overArg = require('./_overArg');\n/** Built-in value references. */\n\n\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\nmodule.exports = getPrototype;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\n\n\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n\n  return object;\n}\n\nmodule.exports = copyObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var Uint8Array = require('./_Uint8Array');\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\n\n\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var root = require('./_root');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\n\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\n\n\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n  array || (array = Array(length));\n\n  while (++index < length) {\n    array[index] = source[index];\n  }\n\n  return array;\n}\n\nmodule.exports = copyArray;","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\n\n\nfunction initCloneObject(object) {\n  return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};\n}\n\nmodule.exports = initCloneObject;","var isObject = require('./isObject');\n/** Built-in value references. */\n\n\nvar objectCreate = Object.create;\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\n\nvar baseCreate = function () {\n  function object() {}\n\n  return function (proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n\n    object.prototype = proto;\n    var result = new object();\n    object.prototype = undefined;\n    return result;\n  };\n}();\n\nmodule.exports = baseCreate;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeysIn;","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = nativeKeysIn;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    // For legend.\n    performRawSeries: true,\n    reset: function reset(seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      var keepAspect = seriesModel.get('symbolKeepAspect');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize,\n        symbolKeepAspect: keepAspect\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n          var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n\n          if (itemSymbolKeepAspect != null) {\n            data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n/**\n * @param {Object} option\n * @param {string} [option.type] See visualHandlers.\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n *                                              required when mappingMethod is 'linear'\n * @param {Array.<Object>=} [option.pieceList] [\n *                                             {value: someValue},\n *                                             {interval: [min1, max1], visual: {...}},\n *                                             {interval: [min2, max2]}\n *                                             ],\n *                                            required when mappingMethod is 'piecewise'.\n *                                            Visual for only each piece can be specified.\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n *                                            required when mappingMethod is 'category'.\n *                                            If no option.categories, categories is set\n *                                            as [0, 1, 2, ...].\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n * @param {(Array|Object|*)} [option.visual]  Visual data.\n *                                            when mappingMethod is 'category',\n *                                            visual data can be array or object\n *                                            (like: {cate1: '#222', none: '#fff'})\n *                                            or primary types (which represents\n *                                            defualt category visual), otherwise visual\n *                                            can be array or primary (which will be\n *                                            normalized to array).\n *\n */\n\nvar VisualMapping = function VisualMapping(option) {\n  var mappingMethod = option.mappingMethod;\n  var visualType = option.type;\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n\n  var thisOption = this.option = zrUtil.clone(option);\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.type = visualType;\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.mappingMethod = mappingMethod;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._normalizeData = normalizers[mappingMethod];\n  var visualHandler = visualHandlers[visualType];\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.applyVisual = visualHandler.applyVisual;\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.getColorMapper = visualHandler.getColorMapper;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._doMap = visualHandler._doMap[mappingMethod];\n\n  if (mappingMethod === 'piecewise') {\n    normalizeVisualRange(thisOption);\n    preprocessForPiecewise(thisOption);\n  } else if (mappingMethod === 'category') {\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\n    // which need no more preprocess except normalize visual.\n    : normalizeVisualRange(thisOption, true);\n  } else {\n    // mappingMethod === 'linear' or 'fixed'\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n    normalizeVisualRange(thisOption);\n  }\n};\n\nVisualMapping.prototype = {\n  constructor: VisualMapping,\n  mapValueToVisual: function mapValueToVisual(value) {\n    var normalized = this._normalizeData(value);\n\n    return this._doMap(normalized, value);\n  },\n  getNormalizer: function getNormalizer() {\n    return zrUtil.bind(this._normalizeData, this);\n  }\n};\nvar visualHandlers = VisualMapping.visualHandlers = {\n  color: {\n    applyVisual: makeApplyVisual('color'),\n\n    /**\n     * Create a mapper function\n     * @return {Function}\n     */\n    getColorMapper: function getColorMapper() {\n      var thisOption = this.option;\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\n        !isNormalized && (value = this._normalizeData(value));\n        return doMapCategory.call(this, value);\n      } : function (value, isNormalized, out) {\n        // If output rgb array\n        // which will be much faster and useful in pixel manipulation\n        var returnRGBArray = !!out;\n        !isNormalized && (value = this._normalizeData(value));\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\n      }, this);\n    },\n    _doMap: {\n      linear: function linear(normalized) {\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n      },\n      category: doMapCategory,\n      piecewise: function piecewise(normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  colorHue: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, value);\n  }),\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, value);\n  }),\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, null, value);\n  }),\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyAlpha(color, value);\n  }),\n  opacity: {\n    applyVisual: makeApplyVisual('opacity'),\n    _doMap: makeDoMap([0, 1])\n  },\n  liftZ: {\n    applyVisual: makeApplyVisual('liftZ'),\n    _doMap: {\n      linear: doMapFixed,\n      category: doMapFixed,\n      piecewise: doMapFixed,\n      fixed: doMapFixed\n    }\n  },\n  symbol: {\n    applyVisual: function applyVisual(value, getter, setter) {\n      var symbolCfg = this.mapValueToVisual(value);\n\n      if (zrUtil.isString(symbolCfg)) {\n        setter('symbol', symbolCfg);\n      } else if (isObject(symbolCfg)) {\n        for (var name in symbolCfg) {\n          if (symbolCfg.hasOwnProperty(name)) {\n            setter(name, symbolCfg[name]);\n          }\n        }\n      }\n    },\n    _doMap: {\n      linear: doMapToArray,\n      category: doMapCategory,\n      piecewise: function piecewise(normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = doMapToArray.call(this, normalized);\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  symbolSize: {\n    applyVisual: makeApplyVisual('symbolSize'),\n    _doMap: makeDoMap([0, 1])\n  }\n};\n\nfunction preprocessForPiecewise(thisOption) {\n  var pieceList = thisOption.pieceList;\n  thisOption.hasSpecialVisual = false;\n  zrUtil.each(pieceList, function (piece, index) {\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\n    // a visual range, so it does not need to be normalized.\n\n    if (piece.visual != null) {\n      thisOption.hasSpecialVisual = true;\n    }\n  });\n}\n\nfunction preprocessForSpecifiedCategory(thisOption) {\n  // Hash categories.\n  var categories = thisOption.categories;\n  var visual = thisOption.visual;\n  var categoryMap = thisOption.categoryMap = {};\n  each(categories, function (cate, index) {\n    categoryMap[cate] = index;\n  }); // Process visual map input.\n\n  if (!zrUtil.isArray(visual)) {\n    var visualArr = [];\n\n    if (zrUtil.isObject(visual)) {\n      each(visual, function (v, cate) {\n        var index = categoryMap[cate];\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n      });\n    } else {\n      // Is primary type, represents default visual.\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n    }\n\n    visual = setVisualToOption(thisOption, visualArr);\n  } // Remove categories that has no visual,\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n\n\n  for (var i = categories.length - 1; i >= 0; i--) {\n    if (visual[i] == null) {\n      delete categoryMap[categories[i]];\n      categories.pop();\n    }\n  }\n}\n\nfunction normalizeVisualRange(thisOption, isCategory) {\n  var visual = thisOption.visual;\n  var visualArr = [];\n\n  if (zrUtil.isObject(visual)) {\n    each(visual, function (v) {\n      visualArr.push(v);\n    });\n  } else if (visual != null) {\n    visualArr.push(visual);\n  }\n\n  var doNotNeedPair = {\n    color: 1,\n    symbol: 1\n  };\n\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\n    // Do not care visualArr.length === 0, which is illegal.\n    visualArr[1] = visualArr[0];\n  }\n\n  setVisualToOption(thisOption, visualArr);\n}\n\nfunction makePartialColorVisualHandler(applyValue) {\n  return {\n    applyVisual: function applyVisual(value, getter, setter) {\n      value = this.mapValueToVisual(value); // Must not be array value\n\n      setter('color', applyValue(getter('color'), value));\n    },\n    _doMap: makeDoMap([0, 1])\n  };\n}\n\nfunction doMapToArray(normalized) {\n  var visual = this.option.visual;\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\n}\n\nfunction makeApplyVisual(visualType) {\n  return function (value, getter, setter) {\n    setter(visualType, this.mapValueToVisual(value));\n  };\n}\n\nfunction doMapCategory(normalized) {\n  var visual = this.option.visual;\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\n}\n\nfunction doMapFixed() {\n  return this.option.visual[0];\n}\n\nfunction makeDoMap(sourceExtent) {\n  return {\n    linear: function linear(normalized) {\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\n    },\n    category: doMapCategory,\n    piecewise: function piecewise(normalized, value) {\n      var result = getSpecifiedVisual.call(this, value);\n\n      if (result == null) {\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\n      }\n\n      return result;\n    },\n    fixed: doMapFixed\n  };\n}\n\nfunction getSpecifiedVisual(value) {\n  var thisOption = this.option;\n  var pieceList = thisOption.pieceList;\n\n  if (thisOption.hasSpecialVisual) {\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n    var piece = pieceList[pieceIndex];\n\n    if (piece && piece.visual) {\n      return piece.visual[this.type];\n    }\n  }\n}\n\nfunction setVisualToOption(thisOption, visualArr) {\n  thisOption.visual = visualArr;\n\n  if (thisOption.type === 'color') {\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\n      return zrColor.parse(item);\n    });\n  }\n\n  return visualArr;\n}\n/**\n * Normalizers by mapping methods.\n */\n\n\nvar normalizers = {\n  linear: function linear(value) {\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\n  },\n  piecewise: function piecewise(value) {\n    var pieceList = this.option.pieceList;\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n\n    if (pieceIndex != null) {\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n    }\n  },\n  category: function category(value) {\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\n\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n  },\n  fixed: zrUtil.noop\n};\n/**\n * List available visual types.\n *\n * @public\n * @return {Array.<string>}\n */\n\nVisualMapping.listVisualTypes = function () {\n  var visualTypes = [];\n  zrUtil.each(visualHandlers, function (handler, key) {\n    visualTypes.push(key);\n  });\n  return visualTypes;\n};\n/**\n * @public\n */\n\n\nVisualMapping.addVisualHandler = function (name, handler) {\n  visualHandlers[name] = handler;\n};\n/**\n * @public\n */\n\n\nVisualMapping.isValidType = function (visualType) {\n  return visualHandlers.hasOwnProperty(visualType);\n};\n/**\n * Convinent method.\n * Visual can be Object or Array or primary type.\n *\n * @public\n */\n\n\nVisualMapping.eachVisual = function (visual, callback, context) {\n  if (zrUtil.isObject(visual)) {\n    zrUtil.each(visual, callback, context);\n  } else {\n    callback.call(context, visual);\n  }\n};\n\nVisualMapping.mapVisual = function (visual, callback, context) {\n  var isPrimary;\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\n  VisualMapping.eachVisual(visual, function (v, key) {\n    var newVal = callback.call(context, v, key);\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\n  });\n  return newVisual;\n};\n/**\n * @public\n * @param {Object} obj\n * @return {Object} new object containers visual values.\n *                 If no visuals, return null.\n */\n\n\nVisualMapping.retrieveVisuals = function (obj) {\n  var ret = {};\n  var hasVisual;\n  obj && each(visualHandlers, function (h, visualType) {\n    if (obj.hasOwnProperty(visualType)) {\n      ret[visualType] = obj[visualType];\n      hasVisual = true;\n    }\n  });\n  return hasVisual ? ret : null;\n};\n/**\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n *\n * @public\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n * @return {Array.<string>} Sorted visual types.\n */\n\n\nVisualMapping.prepareVisualTypes = function (visualTypes) {\n  if (isObject(visualTypes)) {\n    var types = [];\n    each(visualTypes, function (item, type) {\n      types.push(type);\n    });\n    visualTypes = types;\n  } else if (zrUtil.isArray(visualTypes)) {\n    visualTypes = visualTypes.slice();\n  } else {\n    return [];\n  }\n\n  visualTypes.sort(function (type1, type2) {\n    // color should be front of colorSaturation, colorAlpha, ...\n    // symbol and symbolSize do not matter.\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\n  });\n  return visualTypes;\n};\n/**\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n * Other visuals are only depends on themself.\n *\n * @public\n * @param {string} visualType1\n * @param {string} visualType2\n * @return {boolean}\n */\n\n\nVisualMapping.dependsOn = function (visualType1, visualType2) {\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\n};\n/**\n * @param {number} value\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n *                         Always from small to big.\n * @param {boolean} [findClosestWhenOutside=false]\n * @return {number} index\n */\n\n\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n  var possibleI;\n  var abs = Infinity; // value has the higher priority.\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var pieceValue = pieceList[i].value;\n\n    if (pieceValue != null) {\n      if (pieceValue === value // FIXME\n      // It is supposed to compare value according to value type of dimension,\n      // but currently value type can exactly be string or number.\n      // Compromise for numeric-like string (like '12'), especially\n      // in the case that visualMap.categories is ['22', '33'].\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(pieceValue, i);\n    }\n  }\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var piece = pieceList[i];\n    var interval = piece.interval;\n    var close = piece.close;\n\n    if (interval) {\n      if (interval[0] === -Infinity) {\n        if (littleThan(close[1], value, interval[1])) {\n          return i;\n        }\n      } else if (interval[1] === Infinity) {\n        if (littleThan(close[0], interval[0], value)) {\n          return i;\n        }\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(interval[0], i);\n      findClosestWhenOutside && updatePossible(interval[1], i);\n    }\n  }\n\n  if (findClosestWhenOutside) {\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\n  }\n\n  function updatePossible(val, index) {\n    var newAbs = Math.abs(val - value);\n\n    if (newAbs < abs) {\n      abs = newAbs;\n      possibleI = index;\n    }\n  }\n};\n\nfunction littleThan(close, a, b) {\n  return close ? a <= b : a < b;\n}\n\nvar _default = VisualMapping;\nmodule.exports = _default;","\"use strict\";\n\nrequire(\"../../style/index.less\");\n\nrequire(\"./index.less\");","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid view\n\n\necharts.extendComponentView({\n  type: 'grid',\n  render: function render(gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\n\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\n  // the symbol element shape. We use the same clip shape here as\n  // the line clip.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function reset(seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n      var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n      if (isDimensionStacked(data, dims[0]\n      /*, dims[1]*/\n      )) {\n        dims[0] = stackResultDim;\n      }\n\n      if (isDimensionStacked(data, dims[1]\n      /*, dims[0]*/\n      )) {\n        dims[1] = stackResultDim;\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i);\n            var y = tmpIn[1] = data.get(dims[1], i); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function init(option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption(newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function doInit(rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function _giveAxisProxies() {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function _resetTarget() {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function _judgeAutoMode() {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function _autoSetAxisIndex() {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function _autoSetOrient() {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function _isSeriesHasAllAxesTypeOf(seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function _setDefaultThrottle(rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function getFirstTargetAxisModel() {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function eachTargetAxis(callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function getAxisProxy(dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function getAxisModel(dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function setRawRange(opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function getPercentRange() {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function getValueRange(axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function findRepresentativeAxisProxy(axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function getRangePropMode() {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function render(dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function getTargetCoordInfo() {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME axisType is fixed ?\n\n\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function mergeDefaultAndTheme(option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function optionUpdated() {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function getCategories(rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function getOrdinalMeta() {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n/**\n * @public\n * @static\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {Array.<number>} [width, height]\n */\n\nvar getSymbolSize = SymbolClz.getSymbolSize = function (data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n};\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color, keepAspect);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\n\n    this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var liftZ = data.getItemVisual(idx, 'liftZ');\n  var z2Origin = symbolPath.__z2Origin;\n\n  if (liftZ != null) {\n    if (z2Origin == null) {\n      symbolPath.__z2Origin = symbolPath.z2;\n      symbolPath.z2 += liftZ;\n    }\n  } else if (z2Origin != null) {\n    symbolPath.z2 = z2Origin;\n    symbolPath.__z2Origin = null;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function onEmphasis() {\n      // Do not support this hover animation util some scenario required.\n      // Animation can only be supported in hover layer when using `el.incremetal`.\n      if (this.incremental) {\n        return;\n      }\n\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function onNormal() {\n      if (this.incremental) {\n        return;\n      }\n\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Geo = require(\"./Geo\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspectScale = geoModel.get('aspectScale') || 0.75;\n  var aspect = rect.width / rect.height * aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function create(ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var mapData = echarts.getMap(name);\n      var geo = new Geo(name + idx, name, mapData && mapData.geoJson, mapData && mapData.specialAreas, geoModel.get('nameMap'));\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var mapData = echarts.getMap(mapType);\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, mapData && mapData.geoJson, mapData && mapData.specialAreas, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function getFilledRegions(originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    nameMap = nameMap || {};\n    var map = echarts.getMap(mapName);\n    var geoJson = map && map.geoJson;\n\n    if (!geoJson) {\n      return originRegionArr;\n    }\n\n    var dataNameMap = zrUtil.createHashMap();\n    var features = geoJson.features;\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    for (var i = 0; i < features.length; i++) {\n      var name = features[i].properties.name;\n\n      if (!dataNameMap.get(name)) {\n        if (nameMap.hasOwnProperty(name)) {\n          name = nameMap[name];\n        }\n\n        regionsArr.push({\n          name: name\n        });\n      }\n    }\n\n    return regionsArr;\n  }\n};\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\n\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true]\n   * @param {Object} [opt.moveOnMouseMove=true]\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  // wheelDelta maybe -0 in chrome mac.\n  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n    return;\n  } // Convenience:\n  // Mac and VM Windows on Mac: scroll up: zoom out.\n  // Windows: scroll up: zoom in.\n\n\n  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n}\n\nfunction zoom(e, zoomDelta, zoomX, zoomY) {\n  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n  }\n}\n\nfunction checkKeyBinding(roamController, prop, e) {\n  var setting = roamController._opt[prop];\n  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapping = require(\"./VisualMapping\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual solution, for consistent option specification.\n */\n\n\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return true;\n      }\n    }\n  }\n}\n/**\n * @param {Object} option\n * @param {Array.<string>} stateList\n * @param {Function} [supplementVisualOption]\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n */\n\n\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function Creater() {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\n/**\n * @param {Object} thisOption\n * @param {Object} newOption\n * @param {Array.<string>} keys\n */\n\n\nfunction replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {module:echarts/data/List} list\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {object} [scope] Scope for getValueState\n * @param {string} [dimension] Concrete dimension, if used.\n */\n// ???! handle brush?\n\n\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return data.getItemVisual(dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    data.setItemVisual(dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem);\n  } else {\n    data.each([dimension], eachItem);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {number} [dim] dimension or dimension index.\n */\n\n\nfunction incrementalApplyVisual(stateList, visualMappings, getValueState, dim) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n\n  function progress(params, data) {\n    if (dim != null) {\n      dim = data.getDimension(dim);\n    }\n\n    function getVisual(key) {\n      return data.getItemVisual(dataIndex, key);\n    }\n\n    function setVisual(key, value) {\n      data.setItemVisual(dataIndex, key, value);\n    }\n\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n      if (rawDataItem && rawDataItem.visualMap === false) {\n        return;\n      }\n\n      var value = dim != null ? data.get(dim, dataIndex, true) : dataIndex;\n      var valueState = getValueState(value);\n      var mappings = visualMappings[valueState];\n      var visualTypes = visualTypesMap[valueState];\n\n      for (var i = 0, len = visualTypes.length; i < len; i++) {\n        var type = visualTypes[i];\n        mappings[type] && mappings[type].applyVisual(value, getVisual, setVisual);\n      }\n    }\n  }\n\n  return {\n    progress: progress\n  };\n}\n\nexports.createVisualMappings = createVisualMappings;\nexports.replaceVisualOption = replaceVisualOption;\nexports.applyVisual = applyVisual;\nexports.incrementalApplyVisual = incrementalApplyVisual;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","\"use strict\";\n\nrequire(\"../../style/index.less\");\n\nrequire(\"./index.less\");\n\nrequire(\"../../empty/style\");\n\nrequire(\"../../spin/style\");\n\nrequire(\"../../pagination/style\");\n\nrequire(\"../../grid/style\");","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _configProvider = require(\"../config-provider\");\n\nvar _spin = _interopRequireDefault(require(\"../spin\"));\n\nvar _pagination = _interopRequireDefault(require(\"../pagination\"));\n\nvar _grid = require(\"../grid\");\n\nvar _Item = _interopRequireDefault(require(\"./Item\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar List =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(List, _React$Component);\n\n  function List() {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).apply(this, arguments));\n    _this.state = {\n      paginationCurrent: 1\n    };\n    _this.defaultPaginationProps = {\n      current: 1,\n      pageSize: 10,\n      onChange: function onChange(page, pageSize) {\n        var pagination = _this.props.pagination;\n\n        _this.setState({\n          paginationCurrent: page\n        });\n\n        if (pagination && pagination.onChange) {\n          pagination.onChange(page, pageSize);\n        }\n      },\n      total: 0\n    };\n    _this.keys = {};\n\n    _this.renderItem = function (item, index) {\n      var _this$props = _this.props,\n          renderItem = _this$props.renderItem,\n          rowKey = _this$props.rowKey;\n      var key;\n\n      if (typeof rowKey === 'function') {\n        key = rowKey(item);\n      } else if (typeof rowKey === 'string') {\n        key = item[rowKey];\n      } else {\n        key = item.key;\n      }\n\n      if (!key) {\n        key = \"list-item-\".concat(index);\n      }\n\n      _this.keys[index] = key;\n      return renderItem(item, index);\n    };\n\n    _this.renderEmpty = function (prefixCls, renderEmpty) {\n      var locale = _this.props.locale;\n      return React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-empty-text\")\n      }, locale && locale.emptyText || renderEmpty('List'));\n    };\n\n    _this.renderList = function (_ref) {\n      var _classNames;\n\n      var getPrefixCls = _ref.getPrefixCls,\n          renderEmpty = _ref.renderEmpty;\n      var paginationCurrent = _this.state.paginationCurrent;\n\n      var _a = _this.props,\n          customizePrefixCls = _a.prefixCls,\n          bordered = _a.bordered,\n          split = _a.split,\n          className = _a.className,\n          children = _a.children,\n          itemLayout = _a.itemLayout,\n          loadMore = _a.loadMore,\n          pagination = _a.pagination,\n          grid = _a.grid,\n          dataSource = _a.dataSource,\n          size = _a.size,\n          rowKey = _a.rowKey,\n          renderItem = _a.renderItem,\n          header = _a.header,\n          footer = _a.footer,\n          loading = _a.loading,\n          locale = _a.locale,\n          rest = __rest(_a, [\"prefixCls\", \"bordered\", \"split\", \"className\", \"children\", \"itemLayout\", \"loadMore\", \"pagination\", \"grid\", \"dataSource\", \"size\", \"rowKey\", \"renderItem\", \"header\", \"footer\", \"loading\", \"locale\"]);\n\n      var prefixCls = getPrefixCls('list', customizePrefixCls);\n      var loadingProp = loading;\n\n      if (typeof loadingProp === 'boolean') {\n        loadingProp = {\n          spinning: loadingProp\n        };\n      }\n\n      var isLoading = loadingProp && loadingProp.spinning; // large => lg\n      // small => sm\n\n      var sizeCls = '';\n\n      switch (size) {\n        case 'large':\n          sizeCls = 'lg';\n          break;\n\n        case 'small':\n          sizeCls = 'sm';\n\n        default:\n          break;\n      }\n\n      var classString = (0, _classnames[\"default\"])(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-vertical\"), itemLayout === 'vertical'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(sizeCls), sizeCls), _defineProperty(_classNames, \"\".concat(prefixCls, \"-split\"), split), _defineProperty(_classNames, \"\".concat(prefixCls, \"-bordered\"), bordered), _defineProperty(_classNames, \"\".concat(prefixCls, \"-loading\"), isLoading), _defineProperty(_classNames, \"\".concat(prefixCls, \"-grid\"), grid), _defineProperty(_classNames, \"\".concat(prefixCls, \"-something-after-last-item\"), _this.isSomethingAfterLastItem()), _classNames));\n\n      var paginationProps = _extends({}, _this.defaultPaginationProps, {\n        total: dataSource.length,\n        current: paginationCurrent\n      }, pagination || {});\n\n      var largestPage = Math.ceil(paginationProps.total / paginationProps.pageSize);\n\n      if (paginationProps.current > largestPage) {\n        paginationProps.current = largestPage;\n      }\n\n      var paginationContent = pagination ? React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-pagination\")\n      }, React.createElement(_pagination[\"default\"], _extends({}, paginationProps, {\n        onChange: _this.defaultPaginationProps.onChange\n      }))) : null;\n\n      var splitDataSource = _toConsumableArray(dataSource);\n\n      if (pagination) {\n        if (dataSource.length > (paginationProps.current - 1) * paginationProps.pageSize) {\n          splitDataSource = _toConsumableArray(dataSource).splice((paginationProps.current - 1) * paginationProps.pageSize, paginationProps.pageSize);\n        }\n      }\n\n      var childrenContent;\n      childrenContent = isLoading && React.createElement(\"div\", {\n        style: {\n          minHeight: 53\n        }\n      });\n\n      if (splitDataSource.length > 0) {\n        var items = splitDataSource.map(function (item, index) {\n          return _this.renderItem(item, index);\n        });\n        var childrenList = [];\n        React.Children.forEach(items, function (child, index) {\n          childrenList.push(React.cloneElement(child, {\n            key: _this.keys[index]\n          }));\n        });\n        childrenContent = grid ? React.createElement(_grid.Row, {\n          gutter: grid.gutter\n        }, childrenList) : childrenList;\n      } else if (!children && !isLoading) {\n        childrenContent = _this.renderEmpty(prefixCls, renderEmpty);\n      }\n\n      var paginationPosition = paginationProps.position || 'bottom';\n      return React.createElement(\"div\", _extends({\n        className: classString\n      }, rest), (paginationPosition === 'top' || paginationPosition === 'both') && paginationContent, header && React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-header\")\n      }, header), React.createElement(_spin[\"default\"], loadingProp, childrenContent, children), footer && React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-footer\")\n      }, footer), loadMore || (paginationPosition === 'bottom' || paginationPosition === 'both') && paginationContent);\n    };\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        grid: this.props.grid\n      };\n    }\n  }, {\n    key: \"isSomethingAfterLastItem\",\n    value: function isSomethingAfterLastItem() {\n      var _this$props2 = this.props,\n          loadMore = _this$props2.loadMore,\n          pagination = _this$props2.pagination,\n          footer = _this$props2.footer;\n      return !!(loadMore || pagination || footer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(_configProvider.ConfigConsumer, null, this.renderList);\n    }\n  }]);\n\n  return List;\n}(React.Component);\n\nexports[\"default\"] = List;\nList.Item = _Item[\"default\"];\nList.childContextTypes = {\n  grid: PropTypes.any\n};\nList.defaultProps = {\n  dataSource: [],\n  bordered: false,\n  split: true,\n  loading: false,\n  pagination: false\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.Meta = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _grid = require(\"../grid\");\n\nvar _configProvider = require(\"../config-provider\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar Meta = function Meta(props) {\n  return React.createElement(_configProvider.ConfigConsumer, null, function (_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n\n    var customizePrefixCls = props.prefixCls,\n        className = props.className,\n        avatar = props.avatar,\n        title = props.title,\n        description = props.description,\n        others = __rest(props, [\"prefixCls\", \"className\", \"avatar\", \"title\", \"description\"]);\n\n    var prefixCls = getPrefixCls('list', customizePrefixCls);\n    var classString = (0, _classnames[\"default\"])(\"\".concat(prefixCls, \"-item-meta\"), className);\n    var content = React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-item-meta-content\")\n    }, title && React.createElement(\"h4\", {\n      className: \"\".concat(prefixCls, \"-item-meta-title\")\n    }, title), description && React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-item-meta-description\")\n    }, description));\n    return React.createElement(\"div\", _extends({}, others, {\n      className: classString\n    }), avatar && React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-item-meta-avatar\")\n    }, avatar), (title || description) && content);\n  });\n};\n\nexports.Meta = Meta;\n\nfunction getGrid(grid, t) {\n  return grid[t] && Math.floor(24 / grid[t]);\n}\n\nvar Item =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Item, _React$Component);\n\n  function Item() {\n    var _this;\n\n    _classCallCheck(this, Item);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Item).apply(this, arguments));\n\n    _this.renderItem = function (_ref2) {\n      var getPrefixCls = _ref2.getPrefixCls;\n      var grid = _this.context.grid;\n\n      var _a = _this.props,\n          customizePrefixCls = _a.prefixCls,\n          children = _a.children,\n          actions = _a.actions,\n          extra = _a.extra,\n          className = _a.className,\n          others = __rest(_a, [\"prefixCls\", \"children\", \"actions\", \"extra\", \"className\"]);\n\n      var prefixCls = getPrefixCls('list', customizePrefixCls);\n      var classString = (0, _classnames[\"default\"])(\"\".concat(prefixCls, \"-item\"), className);\n      var metaContent = [];\n      var otherContent = [];\n      React.Children.forEach(children, function (element) {\n        if (element && element.type && element.type === Meta) {\n          metaContent.push(element);\n        } else {\n          otherContent.push(element);\n        }\n      });\n      var contentClassString = (0, _classnames[\"default\"])(\"\".concat(prefixCls, \"-item-content\"), _defineProperty({}, \"\".concat(prefixCls, \"-item-content-single\"), metaContent.length < 1));\n      var content = otherContent.length > 0 ? React.createElement(\"div\", {\n        className: contentClassString\n      }, otherContent) : null;\n      var actionsContent;\n\n      if (actions && actions.length > 0) {\n        var actionsContentItem = function actionsContentItem(action, i) {\n          return React.createElement(\"li\", {\n            key: \"\".concat(prefixCls, \"-item-action-\").concat(i)\n          }, action, i !== actions.length - 1 && React.createElement(\"em\", {\n            className: \"\".concat(prefixCls, \"-item-action-split\")\n          }));\n        };\n\n        actionsContent = React.createElement(\"ul\", {\n          className: \"\".concat(prefixCls, \"-item-action\")\n        }, actions.map(function (action, i) {\n          return actionsContentItem(action, i);\n        }));\n      }\n\n      var extraContent = React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-item-extra-wrap\")\n      }, React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-item-main\")\n      }, metaContent, content, actionsContent), React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-item-extra\")\n      }, extra));\n      var mainContent = grid ? React.createElement(_grid.Col, {\n        span: getGrid(grid, 'column'),\n        xs: getGrid(grid, 'xs'),\n        sm: getGrid(grid, 'sm'),\n        md: getGrid(grid, 'md'),\n        lg: getGrid(grid, 'lg'),\n        xl: getGrid(grid, 'xl'),\n        xxl: getGrid(grid, 'xxl')\n      }, React.createElement(\"div\", _extends({}, others, {\n        className: classString\n      }), extra && extraContent, !extra && metaContent, !extra && content, !extra && actionsContent)) : React.createElement(\"div\", _extends({}, others, {\n        className: classString\n      }), extra && extraContent, !extra && metaContent, !extra && content, !extra && actionsContent);\n      return mainContent;\n    };\n\n    return _this;\n  }\n\n  _createClass(Item, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(_configProvider.ConfigConsumer, null, this.renderItem);\n    }\n  }]);\n\n  return Item;\n}(React.Component);\n\nexports[\"default\"] = Item;\nItem.Meta = Meta;\nItem.contextTypes = {\n  grid: PropTypes.any\n};","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./GridModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxis ? [otherAxis] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxis;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxis = otherAxes[onZeroAxisIndex];\n    }\n\n    return;\n  } // Find the first available other axis.\n\n\n  for (var idx in otherAxes) {\n    if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx])) {\n      otherAxis = otherAxes[idx];\n      break;\n    }\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\n\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar linkList = require(\"./helper/linkList\");\n\nvar List = require(\"./List\");\n\nvar createDimensions = require(\"./helper/createDimensions\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Tree data structure\n *\n * @module echarts/data/Tree\n */\n\n/**\n * @constructor module:echarts/data/Tree~TreeNode\n * @param {string} name\n * @param {module:echarts/data/Tree} hostTree\n */\n\n\nvar TreeNode = function TreeNode(name, hostTree) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * Depth of node\n   *\n   * @type {number}\n   * @readOnly\n   */\n\n  this.depth = 0;\n  /**\n   * Height of the subtree rooted at this node.\n   * @type {number}\n   * @readOnly\n   */\n\n  this.height = 0;\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n\n  this.parentNode = null;\n  /**\n   * Reference to list item.\n   * Do not persistent dataIndex outside,\n   * besause it may be changed by list.\n   * If dataIndex -1,\n   * this node is logical deleted (filtered) in list.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.dataIndex = -1;\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @readOnly\n   */\n\n  this.children = [];\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @pubilc\n   */\n\n  this.viewChildren = [];\n  /**\n   * @type {moduel:echarts/data/Tree}\n   * @readOnly\n   */\n\n  this.hostTree = hostTree;\n};\n\nTreeNode.prototype = {\n  constructor: TreeNode,\n\n  /**\n   * The node is removed.\n   * @return {boolean} is removed.\n   */\n  isRemoved: function isRemoved() {\n    return this.dataIndex < 0;\n  },\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb If in preorder and return false,\n   *                      its subtree will not be visited.\n   * @param {Object} [context]\n   */\n  eachNode: function eachNode(options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  },\n\n  /**\n   * Update depth and height of this subtree.\n   *\n   * @param  {number} depth\n   */\n  updateDepthAndHeight: function updateDepthAndHeight(depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  },\n\n  /**\n   * @param  {string} id\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeById: function getNodeById(id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~TreeNode} node\n   * @return {boolean}\n   */\n  contains: function contains(node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {boolean} includeSelf Default false.\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\n   */\n  getAncestors: function getAncestors(includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  },\n\n  /**\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\n   * @return {number} Value.\n   */\n  getValue: function getValue(dimension) {\n    var data = this.hostTree.data;\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n  },\n\n  /**\n   * @param {Object} layout\n   * @param {boolean=} [merge=false]\n   */\n  setLayout: function setLayout(layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  },\n\n  /**\n   * @return {Object} layout\n   */\n  getLayout: function getLayout() {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function getModel(path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    var levelModel = this.getLevelModel();\n    var leavesModel;\n\n    if (!levelModel && (this.children.length === 0 || this.children.length !== 0 && this.isExpand === false)) {\n      leavesModel = this.getLeavesModel();\n    }\n\n    return itemModel.getModel(path, (levelModel || leavesModel || hostTree.hostModel).getModel(path));\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLevelModel: function getLevelModel() {\n    return (this.hostTree.levelModels || [])[this.depth];\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLeavesModel: function getLeavesModel() {\n    return this.hostTree.leavesModel;\n  },\n\n  /**\n   * @example\n   *  setItemVisual('color', color);\n   *  setItemVisual({\n   *      'color': color\n   *  });\n   */\n  setVisual: function setVisual(key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  },\n\n  /**\n   * Get item visual\n   */\n  getVisual: function getVisual(key, ignoreParent) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\n  },\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getRawIndex: function getRawIndex() {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  },\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getId: function getId() {\n    return this.hostTree.data.getId(this.dataIndex);\n  },\n\n  /**\n   * if this is an ancestor of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is ancestor\n   */\n  isAncestorOf: function isAncestorOf(node) {\n    var parent = node.parentNode;\n\n    while (parent) {\n      if (parent === this) {\n        return true;\n      }\n\n      parent = parent.parentNode;\n    }\n\n    return false;\n  },\n\n  /**\n   * if this is an descendant of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is descendant\n   */\n  isDescendantOf: function isDescendantOf(node) {\n    return node !== this && node.isAncestorOf(this);\n  }\n};\n/**\n * @constructor\n * @alias module:echarts/data/Tree\n * @param {module:echarts/model/Model} hostModel\n * @param {Array.<Object>} levelOptions\n * @param {Object} leavesOption\n */\n\nfunction Tree(hostModel, levelOptions, leavesOption) {\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n  this.root;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * Index of each item is the same as the raw index of coresponding list item.\n   * @private\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\n   */\n\n  this._nodes = [];\n  /**\n   * @private\n   * @readOnly\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @private\n   * @readOnly\n   * @type {Array.<module:echarts/model/Model}\n   */\n\n  this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\n    return new Model(levelDefine, hostModel, hostModel.ecModel);\n  });\n  this.leavesModel = new Model(leavesOption || {}, hostModel, hostModel.ecModel);\n}\n\nTree.prototype = {\n  constructor: Tree,\n  type: 'tree',\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb\n   * @param {Object}   [context]\n   */\n  eachNode: function eachNode(options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  },\n\n  /**\n   * @param {number} dataIndex\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByDataIndex: function getNodeByDataIndex(dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByName: function getNodeByName(name) {\n    return this.root.getNodeByName(name);\n  },\n\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n  update: function update() {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  },\n\n  /**\n   * Clear all layouts\n   */\n  clearLayouts: function clearLayouts() {\n    this.data.clearItemLayouts();\n  }\n};\n/**\n * data node format:\n * {\n *     name: ...\n *     value: ...\n *     children: [\n *         {\n *             name: ...\n *             value: ...\n *             children: ...\n *         },\n *         ...\n *     ]\n * }\n *\n * @static\n * @param {Object} dataRoot Root node.\n * @param {module:echarts/model/Model} hostModel\n * @param {Object} treeOptions\n * @param {Array.<Object>} treeOptions.levels\n * @param {Array.<Object>} treeOptions.leaves\n * @return module:echarts/data/Tree\n */\n\nTree.createTree = function (dataRoot, hostModel, treeOptions) {\n  var tree = new Tree(hostModel, treeOptions.levels, treeOptions.leaves);\n  var listData = [];\n  var dimMax = 1;\n  buildHierarchy(dataRoot);\n\n  function buildHierarchy(dataNode, parentNode) {\n    var value = dataNode.value;\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n    listData.push(dataNode);\n    var node = new TreeNode(dataNode.name, tree);\n    parentNode ? addChild(node, parentNode) : tree.root = node;\n\n    tree._nodes.push(node);\n\n    var children = dataNode.children;\n\n    if (children) {\n      for (var i = 0; i < children.length; i++) {\n        buildHierarchy(children[i], node);\n      }\n    }\n  }\n\n  tree.root.updateDepthAndHeight(0);\n  var dimensionsInfo = createDimensions(listData, {\n    coordDimensions: ['value'],\n    dimensionsCount: dimMax\n  });\n  var list = new List(dimensionsInfo, hostModel);\n  list.initData(listData);\n  linkList({\n    mainData: list,\n    struct: tree,\n    structAttr: 'tree'\n  });\n  tree.update();\n  return tree;\n};\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n *\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nvar _default = Tree;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\n\n\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData; // Do not support update layout in incremental mode.\n\n  if (!lineData) {\n    return;\n  }\n\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n      lineData.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\n\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n    labelModel = itemModel.getModel('label');\n    hoverLabelModel = itemModel.getModel('emphasis.label');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var baseText; // FIXME: the logic below probably should be merged to `graphic.setLabelStyle`.\n\n  if (showLabel || hoverShowLabel) {\n    defaultLabelColor = visualColor || '#000';\n    baseText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\n\n    if (baseText == null) {\n      var rawVal = seriesModel.getRawValue(idx);\n      baseText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    }\n  }\n\n  var normalText = showLabel ? baseText : null;\n  var emphasisText = hoverShowLabel ? zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), baseText) : null;\n  var labelStyle = label.style; // Always set `textStyle` even if `normalStyle.text` is null, because default\n  // values have to be set on `normalStyle`.\n\n  if (normalText != null || emphasisText != null) {\n    graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  }\n\n  if (emphasisText != null) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function enableBrush(brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function setPanels(panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function mount(opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function eachCover(cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function updateCovers(brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function unmount() {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function dispose() {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function mousedown(e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function mousemove(e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function createCover(controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function getCreatingRange(localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function updateCoverShape(controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function createCover(controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function getCreatingRange(localTrack) {\n      return localTrack;\n    },\n    endCreating: function endCreating(controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function updateCoverShape(controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function createCover(controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function getCreatingRange(localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function updateCoverShape(controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Polar = require(\"./Polar\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./PolarModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Axis scale\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = parsePercent(polarModel.get('radius'), size);\n  radiusAxis.inverse ? radiusAxis.setExtent(radius, 0) : radiusAxis.setExtent(0, radius);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      zrUtil.each(data.mapDimension('radius', true), function (dim) {\n        radiusAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n      zrUtil.each(data.mapDimension('angle', true), function (dim) {\n        angleAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function create(ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt, 'label', ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function init(option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function isAnimationEnabled() {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function mergeOption(newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType, true);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function formatTooltip(dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function getData() {\n    return this._data;\n  },\n  setData: function setData(data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n} // Make it simple, do not visit all stacked value to count precision.\n// function getPrecision(data, valueAxisDim, dataIndex) {\n//     var precision = -1;\n//     var stackedDim = data.mapDimension(valueAxisDim);\n//     do {\n//         precision = Math.max(\n//             numberUtil.getPrecision(data.get(stackedDim, dataIndex)),\n//             precision\n//         );\n//         var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n//         if (stackedOnSeries) {\n//             var byValue = data.get(data.getCalculationInfo('stackedByDimension'), dataIndex);\n//             data = stackedOnSeries.getData();\n//             dataIndex = data.indexOf(data.getCalculationInfo('stackedByDimension'), byValue);\n//             stackedDim = data.getCalculationInfo('stackedDimension');\n//         }\n//         else {\n//             data = null;\n//         }\n//     } while (data);\n//     return precision;\n// }\n\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var stacked = isDimensionStacked(data, targetDataDim\n  /*, otherDataDim*/\n  );\n  var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\n  var value = numCalculate(data, calcDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\n\n  var precision = numberUtil.getPrecision(data.get(targetDataDim, dataIndex));\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n    ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\n  }\n\n  return ret;\n}\n\nfunction dataDimToCoordDim(seriesModel, dataDim) {\n  var data = seriesModel.getData();\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    });\n    return sum / count;\n  } else if (type === 'median') {\n    return data.getMedian(valueDataDim);\n  } else {\n    // max & min\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function init() {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function render(markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function renderSeries() {}\n});\n\nmodule.exports = _default;","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar matrix = require(\"../core/matrix\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar Text = require(\"../graphic/Text\"); // TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\n\n\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    if (typeof val === 'string' && val.indexOf('NaN') > -1) {\n      console.log(val);\n    }\n\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = !isText && style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale); // stroke then fill for text; fill then stroke for others\n\n    attr(svgEl, 'paint-order', isText ? 'stroke' : 'fill');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive - PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function svgTextDrawRectText(el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  if (text == null) {\n    // Draw no text only when text is set to null, but not ''\n    return;\n  } else {\n    text += '';\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    } // Text rotation, but no element transform\n\n\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = textRect.width / 2 + x;\n      y = textRect.height / 2 + y;\n    } else if (origin) {\n      x = origin[0] + x;\n      y = origin[1] + y;\n    }\n\n    var rotate = -style.textRotation || 0;\n    var transform = matrix.create(); // Apply textRotate to element matrix\n\n    matrix.rotate(transform, el.transform, rotate);\n    setTransform(textSvgEl, transform);\n  }\n\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;","var svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;","var _core = require(\"../core\");\n\nvar createElement = _core.createElement;\n\nvar zrUtil = require(\"../../core/util\");\n\nvar Path = require(\"../../graphic/Path\");\n\nvar ZImage = require(\"../../graphic/Image\");\n\nvar ZText = require(\"../../graphic/Text\");\n\nvar _graphic = require(\"../graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\n\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {number}          zrId      zrender instance id\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(zrId, svgRoot, tagNames, markLabel, domName) {\n  this._zrId = zrId;\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this._domName = domName || '_dom';\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element[this._domName] && defs.contains(element[this._domName])) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate(element);\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element[this._domName] = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n\n  if (defs && element[this._domName]) {\n    defs.removeChild(element[this._domName]);\n    element[this._domName] = null;\n  }\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\nvar largeLayout = _barGrid.largeLayout;\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\n\n\necharts.registerLayout(zrUtil.curry(layout, 'bar')); // Should after normal bar layout, otherwise it is blocked by normal bar layout.\n\necharts.registerLayout(largeLayout);\necharts.registerVisual({\n  seriesType: 'bar',\n  reset: function reset(seriesModel) {\n    // Visual coding for legend\n    seriesModel.getData().setVisual('legendSymbol', 'roundRect');\n  }\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function init() {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption() {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function restoreData() {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function getCoordSysModel() {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5 // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function getMarkerPosition(value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 5e3,\n    progressiveChunkMode: 'mod',\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar _labelHelper = require(\"../helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function (object) {\n  var result = [];\n\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n\n  return result;\n};\nmodule.exports = getSymbolsIn;","require(\"./gauge/GaugeSeries\");\n\nrequire(\"./gauge/GaugeView\");","var echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\n\n\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));","var _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\n\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var dims = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  var stacked;\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n  if (stacked |= isDimensionStacked(data, dims[0]\n  /*, dims[1]*/\n  )) {\n    // jshint ignore:line\n    dims[0] = stackResultDim;\n  }\n\n  if (stacked |= isDimensionStacked(data, dims[1]\n  /*, dims[0]*/\n  )) {\n    // jshint ignore:line\n    dims[1] = stackResultDim;\n  }\n\n  return {\n    dataDimsForPoint: dims,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: !!stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Poly path support NaN point\n\n\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  // if (smoothMonotone == null) {\n  //     if (isMono(points, 'x')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n  //     }\n  //     else if (isMono(points, 'y')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n  //     }\n  //     else {\n  //         return drawNonMono.apply(this, arguments);\n  //     }\n  // }\n  // else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n  //     return drawMono.apply(this, arguments);\n  // }\n  // else {\n  //     return drawNonMono.apply(this, arguments);\n  // }\n  if (smoothMonotone === 'none' || !smoothMonotone) {\n    return drawNonMono.apply(this, arguments);\n  } else {\n    return drawMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n// function isMono(points, smoothMonotone) {\n//     if (points.length <= 1) {\n//         return true;\n//     }\n//     var dim = smoothMonotone === 'x' ? 0 : 1;\n//     var last = points[0][dim];\n//     var lastDiff = 0;\n//     for (var i = 1; i < points.length; ++i) {\n//         var diff = points[i][dim] - last;\n//         if (!isNaN(diff) && !isNaN(lastDiff)\n//             && diff !== 0 && lastDiff !== 0\n//             && ((diff >= 0) !== (lastDiff >= 0))\n//         ) {\n//             return false;\n//         }\n//         if (!isNaN(diff) && diff !== 0) {\n//             lastDiff = diff;\n//             last = points[i][dim];\n//         }\n//     }\n//     return true;\n// }\n\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function buildPath(ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function buildPath(ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;","var echarts = require(\"../echarts\");\n\nrequire(\"./map/MapSeries\");\n\nrequire(\"./map/MapView\");\n\nrequire(\"../action/geoRoam\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nvar mapSymbolLayout = require(\"./map/mapSymbolLayout\");\n\nvar mapVisual = require(\"./map/mapVisual\");\n\nvar mapDataStatistic = require(\"./map/mapDataStatistic\");\n\nvar backwardCompat = require(\"./map/backwardCompat\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerLayout(mapSymbolLayout);\necharts.registerVisual(mapVisual);\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\necharts.registerPreprocessor(backwardCompat);\ncreateDataSelectAction('map', [{\n  type: 'mapToggleSelect',\n  event: 'mapselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'mapSelect',\n  event: 'mapselected',\n  method: 'select'\n}, {\n  type: 'mapUnSelect',\n  event: 'mapunselected',\n  method: 'unSelect'\n}]);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\n\n\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransformable = new TransformDummy();\n  this._rawTransformable = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function setBoundingRect(x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function getBoundingRect() {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function setViewRect(x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function transformTo(x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var rawTransform = this._rawTransformable;\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function setCenter(centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function setZoom(zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function getDefaultCenter() {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function getCenter() {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function getZoom() {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function getRoamTransform() {\n    return this._roamTransformable.getLocalTransform();\n  },\n\n  /**\n   * Remove roam\n   */\n  _updateCenterAndZoom: function _updateCenterAndZoom() {\n    // Must update after view transform updated\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\n    var roamTransform = this._roamTransformable;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, rawTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function _updateTransform() {\n    var roamTransformable = this._roamTransformable;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.parent = roamTransformable;\n    roamTransformable.updateTransform();\n    rawTransformable.updateTransform();\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n    this._rawTransform = rawTransformable.getLocalTransform();\n    this.invTransform = this.invTransform || [];\n    matrix.invert(this.invTransform, this.transform);\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function getViewRect() {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function getViewRectAfterRoam() {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function dataToPoint(data, noRoam, out) {\n    var transform = noRoam ? this._rawTransform : this.transform;\n    out = out || [];\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function pointToData(point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function containPoint(point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"./RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, group, api, fromView) {\n  group.off('click');\n  group.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    group.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    group.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, group);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, group) {\n  // FIXME\n  group.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function draw(mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var group = this.group;\n    var scale = geo.scale;\n    var groupNewProp = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!group.childAt(0) || payload) {\n      group.attr(groupNewProp);\n    } else {\n      graphic.updateProps(group, groupNewProp, mapOrGeoModel);\n    }\n\n    group.removeAll();\n    var itemStyleAccessPath = ['itemStyle'];\n    var hoverItemStyleAccessPath = ['emphasis', 'itemStyle'];\n    var labelAccessPath = ['label'];\n    var hoverLabelAccessPath = ['emphasis', 'label'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      graphic.setHoverStyle(regionGroup, hoverItemStyle, {\n        hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')\n      });\n      group.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, group, api, fromView);\n    updateMapSelected(mapOrGeoModel, group);\n  },\n  remove: function remove() {\n    this.group.removeAll();\n\n    this._controller.dispose();\n\n    this._controllerHost = {};\n  },\n  _updateController: function _updateController(mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (dx, dy) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: dx,\n        dy: dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (zoom, mouseX, mouseY) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      }));\n\n      if (this._updateGroup) {\n        var group = this.group;\n        var scale = group.scale;\n        group.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _roamHelper = require(\"./roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {string} [componentType=series]\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateTransform'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\n    // So the center and zoom must be in sync. Include the series not selected by legend\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;","var echarts = require(\"../echarts\");\n\nrequire(\"./scatter/ScatterSeries\");\n\nrequire(\"./scatter/ScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nrequire(\"../component/gridSimple\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import * as zrUtil from 'zrender/src/core/util';\n// In case developer forget to include grid component\n\n\necharts.registerVisual(visualSymbol('scatter', 'circle'));\necharts.registerLayout(layoutPoints('scatter')); // echarts.registerProcessor(function (ecModel, api) {\n//     ecModel.eachSeriesByType('scatter', function (seriesModel) {\n//         var data = seriesModel.getData();\n//         var coordSys = seriesModel.coordinateSystem;\n//         if (coordSys.type !== 'geo') {\n//             return;\n//         }\n//         var startPt = coordSys.pointToData([0, 0]);\n//         var endPt = coordSys.pointToData([api.getWidth(), api.getHeight()]);\n//         var dims = zrUtil.map(coordSys.dimensions, function (dim) {\n//             return data.mapDimension(dim);\n//         });\n//         var range = {};\n//         range[dims[0]] = [Math.min(startPt[0], endPt[0]), Math.max(startPt[0], endPt[0])];\n//         range[dims[1]] = [Math.min(startPt[1], endPt[1]), Math.max(startPt[1], endPt[1])];\n//         data.selectRange(range);\n//     });\n// });","var echarts = require(\"../echarts\");\n\nrequire(\"../component/radar\");\n\nrequire(\"./radar/RadarSeries\");\n\nrequire(\"./radar/RadarView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar radarLayout = require(\"./radar/radarLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\nvar backwardCompat = require(\"./radar/backwardCompat\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Must use radar component\n\n\necharts.registerVisual(dataColor('radar'));\necharts.registerVisual(visualSymbol('radar', 'circle'));\necharts.registerLayout(radarLayout);\necharts.registerProcessor(dataFilter('radar'));\necharts.registerPreprocessor(backwardCompat);","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Link lists and struct (graph or tree)\n */\n\n\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n * @see https://github.com/d3/d3-hierarchy\n */\n\n/**\n * Initialize all computational message for following algorithm\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree\n */\n\n\nfunction init(root) {\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param {Function} separation\n */\n\n\nfunction firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * Computes all real x-coordinates by summing up the modifiers recursively.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\n\nfunction separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate\n * @param  {number} x\n * @param  {number} y\n * @return {Object}\n */\n\n\nfunction radialCoordinate(x, y) {\n  var radialCoor = {};\n  x -= Math.PI / 2;\n  radialCoor.x = y * Math.cos(x);\n  radialCoor.y = y * Math.sin(x);\n  return radialCoor;\n}\n/**\n * Get the layout position of the whole view\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @param  {Function} separation\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * Shifts the current subtree rooted at wr. This is done by increasing prelim(w+) and modifier(w+) by shift.\n * @param  {module:echarts/data/Tree~TreeNode} wl\n * @param  {module:echarts/data/Tree~TreeNode} wr\n * @param  {number} shift [description]\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}\n\nexports.init = init;\nexports.firstWalk = firstWalk;\nexports.secondWalk = secondWalk;\nexports.separation = separation;\nexports.radialCoordinate = radialCoordinate;\nexports.getViewRect = getViewRect;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar Graph = require(\"../../data/Graph\");\n\nvar linkList = require(\"../../data/helper/linkList\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar createListFromArray = require(\"./createListFromArray\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(nodes, edges, seriesModel, directed, beforeLink) {\n  // ??? TODO\n  // support dataset?\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = seriesModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, seriesModel);\n  } else {\n    var coordSysCtor = CoordinateSystem.get(coordSys);\n    var coordDimensions = coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []; // FIXME: Some geo do not need `value` dimenson, whereas `calendar` needs\n    // `value` dimension, but graph need `value` dimension. It's better to\n    // uniform this behavior.\n\n    if (zrUtil.indexOf(coordDimensions, 'value') < 0) {\n      coordDimensions.concat(['value']);\n    }\n\n    var dimensionNames = createDimensions(nodes, {\n      coordDimensions: coordDimensions\n    });\n    nodeData = new List(dimensionNames, seriesModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], seriesModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;","var vec2 = require(\"zrender/lib/core/vector\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;","var vec2 = require(\"zrender/lib/core/vector\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar throttleUtil = require(\"../util/throttle\");\n\nvar parallelPreprocessor = require(\"../coord/parallel/parallelPreprocessor\");\n\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"../coord/parallel/ParallelModel\");\n\nrequire(\"./parallelAxis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar CLICK_THRESHOLD = 5; // > 4\n// Parallel view\n\necharts.extendComponentView({\n  type: 'parallel',\n  render: function render(parallelModel, ecModel, api) {\n    this._model = parallelModel;\n    this._api = api;\n\n    if (!this._handlers) {\n      this._handlers = {};\n      zrUtil.each(handlers, function (handler, eventName) {\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\n      }, this);\n    }\n\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\n  },\n  dispose: function dispose(ecModel, api) {\n    zrUtil.each(this._handlers, function (handler, eventName) {\n      api.getZr().off(eventName, handler);\n    });\n    this._handlers = null;\n  },\n\n  /**\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\n   */\n  _throttledDispatchExpand: function _throttledDispatchExpand(opt) {\n    this._dispatchExpand(opt);\n  },\n  _dispatchExpand: function _dispatchExpand(opt) {\n    opt && this._api.dispatchAction(zrUtil.extend({\n      type: 'parallelAxisExpand'\n    }, opt));\n  }\n});\nvar handlers = {\n  mousedown: function mousedown(e) {\n    if (checkTrigger(this, 'click')) {\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\n    }\n  },\n  mouseup: function mouseup(e) {\n    var mouseDownPoint = this._mouseDownPoint;\n\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\n      var point = [e.offsetX, e.offsetY];\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\n\n      if (dist > CLICK_THRESHOLD) {\n        return;\n      }\n\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n\n      result.behavior !== 'none' && this._dispatchExpand({\n        axisExpandWindow: result.axisExpandWindow\n      });\n    }\n\n    this._mouseDownPoint = null;\n  },\n  mousemove: function mousemove(e) {\n    // Should do nothing when brushing.\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\n      return;\n    }\n\n    var model = this._model;\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n    var behavior = result.behavior;\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\n\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\n    : {\n      axisExpandWindow: result.axisExpandWindow,\n      // Jumping uses animation, and sliding suppresses animation.\n      animation: behavior === 'jump' ? null : false\n    });\n  }\n};\n\nfunction checkTrigger(view, triggerOn) {\n  var model = view._model;\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\n}\n\necharts.registerPreprocessor(parallelPreprocessor);","var Parallel = require(\"./Parallel\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel coordinate system creater.\n */\n\n\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * nest helper used to group by the array.\n * can specified the keys and sort the keys.\n */\n\n\nfunction nest() {\n  var keysFunction = [];\n  var sortKeysFunction = [];\n  /**\n   * map an Array into the mapObject.\n   * @param {Array} array\n   * @param {number} depth\n   */\n\n  function map(array, depth) {\n    if (depth >= keysFunction.length) {\n      return array;\n    }\n\n    var i = -1;\n    var n = array.length;\n    var keyFunction = keysFunction[depth++];\n    var mapObject = {};\n    var valuesByKey = {};\n\n    while (++i < n) {\n      var keyValue = keyFunction(array[i]);\n      var values = valuesByKey[keyValue];\n\n      if (values) {\n        values.push(array[i]);\n      } else {\n        valuesByKey[keyValue] = [array[i]];\n      }\n    }\n\n    zrUtil.each(valuesByKey, function (value, key) {\n      mapObject[key] = map(value, depth);\n    });\n    return mapObject;\n  }\n  /**\n   * transform the Map Object to multidimensional Array\n   * @param {Object} map\n   * @param {number} depth\n   */\n\n\n  function entriesMap(mapObject, depth) {\n    if (depth >= keysFunction.length) {\n      return mapObject;\n    }\n\n    var array = [];\n    var sortKeyFunction = sortKeysFunction[depth++];\n    zrUtil.each(mapObject, function (value, key) {\n      array.push({\n        key: key,\n        values: entriesMap(value, depth)\n      });\n    });\n\n    if (sortKeyFunction) {\n      return array.sort(function (a, b) {\n        return sortKeyFunction(a.key, b.key);\n      });\n    } else {\n      return array;\n    }\n  }\n\n  return {\n    /**\n     * specified the key to groupby the arrays.\n     * users can specified one more keys.\n     * @param {Function} d\n     */\n    key: function key(d) {\n      keysFunction.push(d);\n      return this;\n    },\n\n    /**\n     * specified the comparator to sort the keys\n     * @param {Function} order\n     */\n    sortKeys: function sortKeys(order) {\n      sortKeysFunction[keysFunction.length - 1] = order;\n      return this;\n    },\n\n    /**\n     * the array to be grouped by.\n     * @param {Array} array\n     */\n    entries: function entries(array) {\n      return entriesMap(map(array, 0), 0);\n    }\n  };\n}\n\nmodule.exports = nest;","var createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar seriesModelMixin = {\n  /**\n   * @private\n   * @type {string}\n   */\n  _baseAxisDim: null,\n\n  /**\n   * @override\n   */\n  getInitialData: function getInitialData(option, ecModel) {\n    // When both types of xAxis and yAxis are 'value', layout is\n    // needed to be specified by user. Otherwise, layout can be\n    // judged by which axis is category.\n    var ordinalMeta;\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var addOrdinal; // FIXME\n    // 考虑时间轴\n\n    if (xAxisType === 'category') {\n      option.layout = 'horizontal';\n      ordinalMeta = xAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else if (yAxisType === 'category') {\n      option.layout = 'vertical';\n      ordinalMeta = yAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else {\n      option.layout = option.layout || 'horizontal';\n    }\n\n    var coordDims = ['x', 'y'];\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n    var axisModels = [xAxisModel, yAxisModel];\n    var baseAxisType = axisModels[baseAxisDimIndex].get('type');\n    var otherAxisType = axisModels[1 - baseAxisDimIndex].get('type');\n    var data = option.data; // ??? FIXME make a stage to perform data transfrom.\n    // MUST create a new data, consider setOption({}) again.\n\n    if (data && addOrdinal) {\n      var newOptionData = [];\n      zrUtil.each(data, function (item, index) {\n        var newItem;\n\n        if (item.value && zrUtil.isArray(item.value)) {\n          newItem = item.value.slice();\n          item.value.unshift(index);\n        } else if (zrUtil.isArray(item)) {\n          newItem = item.slice();\n          item.unshift(index);\n        } else {\n          newItem = item;\n        }\n\n        newOptionData.push(newItem);\n      });\n      option.data = newOptionData;\n    }\n\n    var defaultValueDimensions = this.defaultValueDimensions;\n    return createListSimply(this, {\n      coordDimensions: [{\n        name: baseAxisDim,\n        type: getDimensionTypeByAxis(baseAxisType),\n        ordinalMeta: ordinalMeta,\n        otherDims: {\n          tooltip: false,\n          itemName: 0\n        },\n        dimsDef: ['base']\n      }, {\n        name: otherAxisDim,\n        type: getDimensionTypeByAxis(otherAxisType),\n        dimsDef: defaultValueDimensions.slice()\n      }],\n      dimensionsCount: defaultValueDimensions.length + 1\n    });\n  },\n\n  /**\n   * If horizontal, base axis is x, otherwise y.\n   * @override\n   */\n  getBaseAxis: function getBaseAxis() {\n    var dim = this._baseAxisDim;\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n  }\n};\nexports.seriesModelMixin = seriesModelMixin;","var graphic = require(\"../../util/graphic\");\n\nvar Line = require(\"./Line\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar curveUtil = require(\"zrender/lib/core/curve\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Polyline}\n */\n\n\nfunction Polyline(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createPolyline(lineData, idx, seriesScope);\n}\n\nvar polylineProto = Polyline.prototype;\n\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\n  // var seriesModel = lineData.hostModel;\n  var points = lineData.getItemLayout(idx);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    }\n  });\n  this.add(line);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childAt(0);\n  var target = {\n    shape: {\n      points: lineData.getItemLayout(idx)\n    }\n  };\n  graphic.updateProps(line, target, seriesModel, idx);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var line = this.childAt(0);\n  var itemModel = lineData.getItemModel(idx);\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\n  if (!seriesScope || lineData.hasItemOption) {\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n  }\n\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle;\n  graphic.setHoverStyle(this);\n};\n\npolylineProto.updateLayout = function (lineData, idx) {\n  var polyline = this.childAt(0);\n  polyline.setShape('points', lineData.getItemLayout(idx));\n};\n\nzrUtil.inherits(Polyline, graphic.Group);\nvar _default = Polyline;\nmodule.exports = _default;","var createRenderPlanner = require(\"../helper/createRenderPlanner\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function reset(seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n\n    function progress(params, lineData) {\n      var lineCoords = [];\n\n      if (isLarge) {\n        var points;\n        var segCount = params.end - params.start;\n\n        if (isPolyline) {\n          var totalCoordsCount = 0;\n\n          for (var i = params.start; i < params.end; i++) {\n            totalCoordsCount += seriesModel.getLineCoordsCount(i);\n          }\n\n          points = new Float32Array(segCount + totalCoordsCount * 2);\n        } else {\n          points = new Float32Array(segCount * 4);\n        }\n\n        var offset = 0;\n        var pt = [];\n\n        for (var i = params.start; i < params.end; i++) {\n          var len = seriesModel.getLineCoords(i, lineCoords);\n\n          if (isPolyline) {\n            points[offset++] = len;\n          }\n\n          for (var k = 0; k < len; k++) {\n            pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n            points[offset++] = pt[0];\n            points[offset++] = pt[1];\n          }\n        }\n\n        lineData.setLayout('linesPoints', points);\n      } else {\n        for (var i = params.start; i < params.end; i++) {\n          var itemModel = lineData.getItemModel(i);\n          var len = seriesModel.getLineCoords(i, lineCoords);\n          var pts = [];\n\n          if (isPolyline) {\n            for (var j = 0; j < len; j++) {\n              pts.push(coordSys.dataToPoint(lineCoords[j]));\n            }\n          } else {\n            pts[0] = coordSys.dataToPoint(lineCoords[0]);\n            pts[1] = coordSys.dataToPoint(lineCoords[1]);\n            var curveness = itemModel.get('lineStyle.curveness');\n\n            if (+curveness) {\n              pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n            }\n          }\n\n          lineData.setItemLayout(i, pts);\n        }\n      }\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"../coord/single/singleCreator\");\n\nrequire(\"./axis/SingleAxisView\");\n\nrequire(\"../coord/single/AxisModel\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/SingleAxisPointer\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.extendComponentView({\n  type: 'single'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\n\n\nfunction layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function init(option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function mergeOption(option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function optionUpdated() {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function _updateData(ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function getData() {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function select(name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function unSelect(name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function toggleSelected(name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function isSelected(name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function init() {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function getContentGroup() {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function render(legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function resetInner() {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function renderInner(itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function _createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function layoutInner(legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nmodule.exports = _default;","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\n\n\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function grid(foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function geo(foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function grid() {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function geo() {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function rect(to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function polygon(to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function rect(values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function polygon(values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;","var Component = require(\"../../model/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});","var echarts = require(\"../../echarts\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\necharts.registerProcessor({\n  // `dataZoomProcessor` will only be performed in needed series. Consider if\n  // there is a line series and a pie series, it is better not to update the\n  // line series if only pie series is needed to be updated.\n  getTargetSeries: function getTargetSeries(ecModel) {\n    var seriesModelMap = createHashMap();\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        var axisProxy = dataZoomModel.getAxisProxy(dimNames.name, axisIndex);\n        each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\n          seriesModelMap.set(seriesModel.uid, seriesModel);\n        });\n      });\n    });\n    return seriesModelMap;\n  },\n  modifyOutputEnd: true,\n  // Consider appendData, where filter should be performed. Because data process is\n  // in block mode currently, it is not need to worry about that the overallProgress\n  // execute every frame.\n  overallReset: function overallReset(ecModel, api) {\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // We calculate window and reset axis here but not in model\n      // init stage and not after action dispatch handler, because\n      // reset should be called after seriesData.restoreData.\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel, api);\n      }); // Caution: data zoom filtering is order sensitive when using\n      // percent range and no min/max/scale set on axis.\n      // For example, we have dataZoom definition:\n      // [\n      //      {xAxisIndex: 0, start: 30, end: 70},\n      //      {yAxisIndex: 0, start: 20, end: 80}\n      // ]\n      // In this case, [20, 80] of y-dataZoom should be based on data\n      // that have filtered by x-dataZoom using range of [30, 70],\n      // but should not be based on full raw data. Thus sliding\n      // x-dataZoom will change both ranges of xAxis and yAxis,\n      // while sliding y-dataZoom will only change the range of yAxis.\n      // So we should filter x-axis after reset x-axis immediately,\n      // and then reset y-axis and filter y-axis.\n\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel, api);\n      });\n    });\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // Fullfill all of the range props so that user\n      // is able to get them from chart.getOption().\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n      var percentRange = axisProxy.getDataPercentWindow();\n      var valueRange = axisProxy.getDataValueWindow();\n      dataZoomModel.setRawRange({\n        start: percentRange[0],\n        end: percentRange[1],\n        startValue: valueRange[0],\n        endValue: valueRange[1]\n      }, true);\n    });\n  }\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\n\nfunction _default(option) {\n  var visualMap = option && option.visualMap;\n\n  if (!zrUtil.isArray(visualMap)) {\n    visualMap = visualMap ? [visualMap] : [];\n  }\n\n  each(visualMap, function (opt) {\n    if (!opt) {\n      return;\n    } // rename splitList to pieces\n\n\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n      opt.pieces = opt.splitList;\n      delete opt.splitList;\n    }\n\n    var pieces = opt.pieces;\n\n    if (pieces && zrUtil.isArray(pieces)) {\n      each(pieces, function (piece) {\n        if (zrUtil.isObject(piece)) {\n          if (has(piece, 'start') && !has(piece, 'min')) {\n            piece.min = piece.start;\n          }\n\n          if (has(piece, 'end') && !has(piece, 'max')) {\n            piece.max = piece.end;\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction has(obj, name) {\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n}\n\nmodule.exports = _default;","var Component = require(\"../../model/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar VISUAL_PRIORITY = echarts.PRIORITY.VISUAL.COMPONENT;\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function reset(seriesModel, ecModel) {\n    var resetDefines = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      var pipelineContext = seriesModel.pipelineContext;\n\n      if (!visualMapModel.isTargetSeries(seriesModel) || pipelineContext && pipelineContext.large) {\n        return;\n      }\n\n      resetDefines.push(visualSolution.incrementalApplyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, zrUtil.bind(visualMapModel.getValueState, visualMapModel), visualMapModel.getDataDimension(seriesModel.getData())));\n    });\n    return resetDefines;\n  }\n}); // Only support color.\n\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function reset(seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var visualMetaList = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (visualMapModel.isTargetSeries(seriesModel)) {\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\n          stops: [],\n          outerColors: []\n        };\n        var concreteDim = visualMapModel.getDataDimension(data);\n        var dimInfo = data.getDimensionInfo(concreteDim);\n\n        if (dimInfo != null) {\n          // visualMeta.dimension should be dimension index, but not concrete dimension.\n          visualMeta.dimension = dimInfo.index;\n          visualMetaList.push(visualMeta);\n        }\n      }\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\n  }\n}); // FIXME\n// performance and export for heatmap?\n// value can be Infinity or -Infinity\n\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\n  var mappings = visualMapModel.targetVisuals[valueState];\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n  var resultVisual = {\n    color: seriesModel.getData().getVisual('color') // default color.\n\n  };\n\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\n    var type = visualTypes[i];\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\n  }\n\n  return resultVisual.color;\n\n  function getVisual(key) {\n    return resultVisual[key];\n  }\n\n  function setVisual(key, value) {\n    resultVisual[key] = value;\n  }\n}","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar numberUtil = require(\"../../util/number\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar mapVisual = VisualMapping.mapVisual;\nvar eachVisual = VisualMapping.eachVisual;\nvar isArray = zrUtil.isArray;\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\nvar linearMap = numberUtil.linearMap;\nvar noop = zrUtil.noop;\nvar VisualMapModel = echarts.extendComponentModel({\n  type: 'visualMap',\n  dependencies: ['series'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  stateList: ['inRange', 'outOfRange'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\n\n  /**\n   * [lowerBound, upperBound]\n   *\n   * @readOnly\n   * @type {Array.<number>}\n   */\n  dataBound: [-Infinity, Infinity],\n\n  /**\n   * @readOnly\n   * @type {string|Object}\n   */\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    zlevel: 0,\n    z: 4,\n    seriesIndex: 'all',\n    // 'all' or null/undefined: all series.\n    // A number or an array of number: the specified series.\n    // set min: 0, max: 200, only for campatible with ec2.\n    // In fact min max should not have default value.\n    min: 0,\n    // min value, must specified if pieces is not specified.\n    max: 200,\n    // max value, must specified if pieces is not specified.\n    dimension: null,\n    inRange: null,\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    outOfRange: null,\n    // 'color', 'colorHue', 'colorSaturation',\n    // 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    left: 0,\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n    right: null,\n    // The same as left.\n    top: null,\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n    bottom: 0,\n    // The same as top.\n    itemWidth: null,\n    itemHeight: null,\n    inverse: false,\n    orient: 'vertical',\n    // 'horizontal' ¦ 'vertical'\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    // 值域边框颜色\n    contentColor: '#5793f3',\n    inactiveColor: '#aaa',\n    borderWidth: 0,\n    // 值域边框线宽，单位px，默认为0（无边框）\n    padding: 5,\n    // 值域内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    textGap: 10,\n    //\n    precision: 0,\n    // 小数精度，默认为0，无小数点\n    color: null,\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n    formatter: null,\n    text: null,\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n    textStyle: {\n      color: '#333' // 值域文字颜色\n\n    }\n  },\n\n  /**\n   * @protected\n   */\n  init: function init(option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this._dataExtent;\n    /**\n     * @readOnly\n     */\n\n    this.targetVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.controllerVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * [width, height]\n     * @readOnly\n     * @type {Array.<number>}\n     */\n\n    this.itemSize;\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n\n  /**\n   * @protected\n   */\n  optionUpdated: function optionUpdated(newOption, isInit) {\n    var thisOption = this.option; // FIXME\n    // necessary?\n    // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\n    this.textStyleModel = this.getModel('textStyle');\n    this.resetItemSize();\n    this.completeVisualOption();\n  },\n\n  /**\n   * @protected\n   */\n  resetVisual: function resetVisual(supplementVisualOption) {\n    var stateList = this.stateList;\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\n  },\n\n  /**\n   * @protected\n   * @return {Array.<number>} An array of series indices.\n   */\n  getTargetSeriesIndices: function getTargetSeriesIndices() {\n    var optionSeriesIndex = this.option.seriesIndex;\n    var seriesIndices = [];\n\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\n      this.ecModel.eachSeries(function (seriesModel, index) {\n        seriesIndices.push(index);\n      });\n    } else {\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\n    }\n\n    return seriesIndices;\n  },\n\n  /**\n   * @public\n   */\n  eachTargetSeries: function eachTargetSeries(callback, context) {\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n    }, this);\n  },\n\n  /**\n   * @pubilc\n   */\n  isTargetSeries: function isTargetSeries(seriesModel) {\n    var is = false;\n    this.eachTargetSeries(function (model) {\n      model === seriesModel && (is = true);\n    });\n    return is;\n  },\n\n  /**\n   * @example\n   * this.formatValueText(someVal); // format single numeric value to text.\n   * this.formatValueText(someVal, true); // format single category value to text.\n   * this.formatValueText([min, max]); // format numeric min-max to text.\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n   *\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n   * @param {boolean} [isCategory=false] Only available when value is number.\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n   * @return {string}\n   * @protected\n   */\n  formatValueText: function formatValueText(value, isCategory, edgeSymbols) {\n    var option = this.option;\n    var precision = option.precision;\n    var dataBound = this.dataBound;\n    var formatter = option.formatter;\n    var isMinMax;\n    var textValue;\n    edgeSymbols = edgeSymbols || ['<', '>'];\n\n    if (zrUtil.isArray(value)) {\n      value = value.slice();\n      isMinMax = true;\n    }\n\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\n\n    if (zrUtil.isString(formatter)) {\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\n    } else if (zrUtil.isFunction(formatter)) {\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\n    }\n\n    if (isMinMax) {\n      if (value[0] === dataBound[0]) {\n        return edgeSymbols[0] + ' ' + textValue[1];\n      } else if (value[1] === dataBound[1]) {\n        return edgeSymbols[1] + ' ' + textValue[0];\n      } else {\n        return textValue[0] + ' - ' + textValue[1];\n      }\n    } else {\n      // Format single value (includes category case).\n      return textValue;\n    }\n\n    function toFixed(val) {\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetExtent: function resetExtent() {\n    var thisOption = this.option; // Can not calculate data extent by data here.\n    // Because series and data may be modified in processing stage.\n    // So we do not support the feature \"auto min/max\".\n\n    var extent = asc([thisOption.min, thisOption.max]);\n    this._dataExtent = extent;\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/data/List} list\n   * @return {string} Concrete dimention. If return null/undefined,\n   *                  no dimension used.\n   */\n  getDataDimension: function getDataDimension(list) {\n    var optDim = this.option.dimension;\n    var listDimensions = list.dimensions;\n\n    if (optDim == null && !listDimensions.length) {\n      return;\n    }\n\n    if (optDim != null) {\n      return list.getDimension(optDim);\n    }\n\n    var dimNames = list.dimensions;\n\n    for (var i = dimNames.length - 1; i >= 0; i--) {\n      var dimName = dimNames[i];\n      var dimInfo = list.getDimensionInfo(dimName);\n\n      if (!dimInfo.isCalculationCoord) {\n        return dimName;\n      }\n    }\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getExtent: function getExtent() {\n    return this._dataExtent.slice();\n  },\n\n  /**\n   * @protected\n   */\n  completeVisualOption: function completeVisualOption() {\n    var ecModel = this.ecModel;\n    var thisOption = this.option;\n    var base = {\n      inRange: thisOption.inRange,\n      outOfRange: thisOption.outOfRange\n    };\n    var target = thisOption.target || (thisOption.target = {});\n    var controller = thisOption.controller || (thisOption.controller = {});\n    zrUtil.merge(target, base); // Do not override\n\n    zrUtil.merge(controller, base); // Do not override\n\n    var isCategory = this.isCategory();\n    completeSingle.call(this, target);\n    completeSingle.call(this, controller);\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\n\n    completeController.call(this, controller);\n\n    function completeSingle(base) {\n      // Compatible with ec2 dataRange.color.\n      // The mapping order of dataRange.color is: [high value, ..., low value]\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n      // Notice: ec2 has no inverse.\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\n      // So adding color only when no inRange defined.\n      && !base.inRange) {\n        base.inRange = {\n          color: thisOption.color.slice().reverse()\n        };\n      } // Compatible with previous logic, always give a defautl color, otherwise\n      // simple config with no inRange and outOfRange will not work.\n      // Originally we use visualMap.color as the default color, but setOption at\n      // the second time the default color will be erased. So we change to use\n      // constant DEFAULT_COLOR.\n      // If user do not want the defualt color, set inRange: {color: null}.\n\n\n      base.inRange = base.inRange || {\n        color: ecModel.get('gradientColor')\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\n\n      each(this.stateList, function (state) {\n        var visualType = base[state];\n\n        if (zrUtil.isString(visualType)) {\n          var defa = visualDefault.get(visualType, 'active', isCategory);\n\n          if (defa) {\n            base[state] = {};\n            base[state][visualType] = defa;\n          } else {\n            // Mark as not specified.\n            delete base[state];\n          }\n        }\n      }, this);\n    }\n\n    function completeInactive(base, stateExist, stateAbsent) {\n      var optExist = base[stateExist];\n      var optAbsent = base[stateAbsent];\n\n      if (optExist && !optAbsent) {\n        optAbsent = base[stateAbsent] = {};\n        each(optExist, function (visualData, visualType) {\n          if (!VisualMapping.isValidType(visualType)) {\n            return;\n          }\n\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n          if (defa != null) {\n            optAbsent[visualType] = defa; // Compatibable with ec2:\n            // Only inactive color to rgba(0,0,0,0) can not\n            // make label transparent, so use opacity also.\n\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\n              optAbsent.opacity = [0, 0];\n            }\n          }\n        });\n      }\n    }\n\n    function completeController(controller) {\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\n      var inactiveColor = this.get('inactiveColor');\n      each(this.stateList, function (state) {\n        var itemSize = this.itemSize;\n        var visuals = controller[state]; // Set inactive color for controller if no other color\n        // attr (like colorAlpha) specified.\n\n        if (!visuals) {\n          visuals = controller[state] = {\n            color: isCategory ? inactiveColor : [inactiveColor]\n          };\n        } // Consistent symbol and symbolSize if not specified.\n\n\n        if (visuals.symbol == null) {\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\n        }\n\n        if (visuals.symbolSize == null) {\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n        } // Filter square and none.\n\n\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\n        }); // Normalize symbolSize\n\n        var symbolSize = visuals.symbolSize;\n\n        if (symbolSize != null) {\n          var max = -Infinity; // symbolSize can be object when categories defined.\n\n          eachVisual(symbolSize, function (value) {\n            value > max && (max = value);\n          });\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetItemSize: function resetItemSize() {\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\n  },\n\n  /**\n   * @public\n   */\n  isCategory: function isCategory() {\n    return !!this.option.categories;\n  },\n\n  /**\n   * @public\n   * @abstract\n   */\n  setSelected: noop,\n\n  /**\n   * @public\n   * @abstract\n   * @param {*|module:echarts/data/List} valueOrData\n   * @param {number} dataIndex\n   * @return {string} state See this.stateList\n   */\n  getValueState: noop,\n\n  /**\n   * FIXME\n   * Do not publish to thirt-part-dev temporarily\n   * util the interface is stable. (Should it return\n   * a function but not visual meta?)\n   *\n   * @pubilc\n   * @abstract\n   * @param {Function} getColorVisual\n   *        params: value, valueState\n   *        return: color\n   * @return {Object} visualMeta\n   *        should includes {stops, outerColors}\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n   */\n  getVisualMeta: noop\n});\nvar _default = VisualMapModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual mapping.\n */\n\n\nvar visualDefault = {\n  /**\n   * @public\n   */\n  get: function get(visualType, key, isCategory) {\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\n  }\n};\nvar defaultOption = {\n  color: {\n    active: ['#006edd', '#e0ffff'],\n    inactive: ['rgba(0,0,0,0)']\n  },\n  colorHue: {\n    active: [0, 360],\n    inactive: [0, 0]\n  },\n  colorSaturation: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  colorLightness: {\n    active: [0.9, 0.5],\n    inactive: [0, 0]\n  },\n  colorAlpha: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  opacity: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  symbol: {\n    active: ['circle', 'roundRect', 'diamond'],\n    inactive: ['none']\n  },\n  symbolSize: {\n    active: [10, 50],\n    inactive: [0, 0]\n  }\n};\nvar _default = visualDefault;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar layout = require(\"../../util/layout\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendComponentView({\n  type: 'visualMap',\n\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n  autoPositionValues: {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  },\n  init: function init(ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/visualMap/visualMapModel}\n     */\n\n    this.visualMapModel;\n  },\n\n  /**\n   * @protected\n   */\n  render: function render(visualMapModel, ecModel, api, payload) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender.apply(this, arguments);\n  },\n\n  /**\n   * @protected\n   */\n  renderBackground: function renderBackground(group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new graphic.Rect({\n      z2: -1,\n      // Lay background rect on the lowest layer.\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  },\n\n  /**\n   * @protected\n   * @param {number} targetValue can be Infinity or -Infinity\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param {Object} [opts]\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n  getControllerVisual: function getControllerVisual(targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  },\n\n  /**\n   * @protected\n   */\n  positionGroup: function positionGroup(group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  },\n\n  /**\n   * @protected\n   * @abstract\n   */\n  doRender: zrUtil.noop\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n * @param {module:echarts/ExtensionAPI} api\n * @param {Array.<number>} itemSize always [short, long]\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\n */\n\nfunction getItemAlign(visualMapModel, api, itemSize) {\n  var modelOption = visualMapModel.option;\n  var itemAlign = modelOption.align;\n\n  if (itemAlign != null && itemAlign !== 'auto') {\n    return itemAlign;\n  } // Auto decision align.\n\n\n  var ecSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\n  var reals = paramsSet[realIndex];\n  var fakeValue = [0, null, 10];\n  var layoutInput = {};\n\n  for (var i = 0; i < 3; i++) {\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n  }\n\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\n}\n/**\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n * dataIndexInside means filtered index.\n */\n\n\nfunction convertDataIndex(batch) {\n  zrUtil.each(batch || [], function (batchItem) {\n    if (batch.dataIndex != null) {\n      batch.dataIndexInside = batch.dataIndex;\n      batch.dataIndex = null;\n    }\n  });\n  return batch;\n}\n\nexports.getItemAlign = getItemAlign;\nexports.convertDataIndex = convertDataIndex;","var echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar actionInfo = {\n  type: 'selectDataRange',\n  event: 'dataRangeSelected',\n  // FIXME use updateView appears wrong\n  update: 'update'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'visualMap',\n    query: payload\n  }, function (model) {\n    model.setSelected(payload.selected);\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;","var env = require(\"../core/env\");\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\n\nfunction createNode(tagName) {\n  return doCreateNode(tagName);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nvar doCreateNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    doCreateNode = function doCreateNode(tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    doCreateNode = function doCreateNode(tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function getBaseAxis() {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function containPoint(point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function containData(data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function dataToPoint(data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function clampData(data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function pointToData(point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function getOtherAxis(axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function Cartesian(name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function getAxis(dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function getAxes() {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function getAxesByScale(scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function addAxis(axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function dataToCoord(val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function coordToData(val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function _dataCoordConvert(input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\n\n\nvar Axis2D = function Axis2D(dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\n   *         If not on zero of other axis, return null/undefined.\n   *         If no axes, return an empty array.\n   */\n  getAxesOnZeroOf: null,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function isHorizontal() {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function getGlobalExtent(asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function getOtherAxis() {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function pointToData(point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","var BaseBarSeries = require(\"./BaseBarSeries\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect',\n\n  /**\n   * @override\n   */\n  getProgressive: function getProgressive() {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  },\n\n  /**\n   * @override\n   */\n  getProgressiveThreshold: function getProgressiveThreshold() {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function render(seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function incrementalRender(params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function _updateDrawMode(seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function _renderNormal(seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function _renderLarge(seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderLarge: function _incrementalRenderLarge(params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function remove(ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function _clear(ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function cartesian2d(data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function polar(data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function cartesian2d(data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function polar(data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function buildPath(ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var valueIdx = this.__valueIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[this.__valueIdx] = points[i + valueIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var valueIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - valueIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __valueIdx: valueIdx\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nmodule.exports = _default;","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar _default = {\n  getBarItemStyle: function getBarItemStyle(excludes) {\n    var style = _getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function render(axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function remove() {\n    this._splitAreaColors = null;\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitLine: function _splitLine(axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitArea: function _splitArea(axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitAreaModel,\n      clamp: true\n    });\n\n    if (!ticksCoords.length) {\n      return;\n    } // For Making appropriate splitArea animation, the color and anid\n    // should be corresponding to previous one if possible.\n\n\n    var areaColorsLen = areaColors.length;\n    var lastSplitAreaColors = this._splitAreaColors;\n    var newSplitAreaColors = zrUtil.createHashMap();\n    var colorIndex = 0;\n\n    if (lastSplitAreaColors) {\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n        if (cIndex != null) {\n          colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n          break;\n        }\n      }\n    }\n\n    var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prev;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n        prev = x + width;\n      } else {\n        x = gridRect.x;\n        y = prev;\n        width = gridRect.width;\n        height = tickCoord - y;\n        prev = y + height;\n      }\n\n      var tickValue = ticksCoords[i - 1].tickValue;\n      tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: tickValue != null ? 'area_' + tickValue : null,\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      colorIndex = (colorIndex + 1) % areaColorsLen;\n    }\n\n    this._splitAreaColors = newSplitAreaColors;\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});","var baseClone = require('./_baseClone');\n/** Used to compose bitmasks for cloning. */\n\n\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\n\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys');\n/** Used to compose bitmasks for cloning. */\n\n\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values supported by `_.clone`. */\n\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\n\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n\n  if (result !== undefined) {\n    return result;\n  }\n\n  if (!isObject(value)) {\n    return value;\n  }\n\n  var isArr = isArray(value);\n\n  if (isArr) {\n    result = initCloneArray(value);\n\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n\n    if (tag == objectTag || tag == argsTag || isFunc && !object) {\n      result = isFlat || isFunc ? {} : initCloneObject(value);\n\n      if (!isDeep) {\n        return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  } // Check for circular references and return its corresponding clone.\n\n\n  stack || (stack = new Stack());\n  var stacked = stack.get(value);\n\n  if (stacked) {\n    return stacked;\n  }\n\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function (subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n    return result;\n  }\n\n  if (isMap(value)) {\n    value.forEach(function (subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n    return result;\n  }\n\n  var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function (subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    } // Recursively populate clone (susceptible to call stack limits).\n\n\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n\n  return array;\n}\n\nmodule.exports = arrayEach;","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\n\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length); // Add properties assigned by `RegExp#exec`.\n\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n\n  return result;\n}\n\nmodule.exports = initCloneArray;","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n/** `Object#toString` result references. */\n\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\n\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag:\n    case float64Tag:\n    case int8Tag:\n    case int16Tag:\n    case int32Tag:\n    case uint8Tag:\n    case uint8ClampedTag:\n    case uint16Tag:\n    case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor();\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor();\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\n\n\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\n\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;","var Symbol = require('./_Symbol');\n/** Used to convert symbols to primitives and strings. */\n\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\n\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\n\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\nmodule.exports = isMap;","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]';\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\n\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\n\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\nmodule.exports = isSet;","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar setTag = '[object Set]';\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\n\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;","var createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function getInitialData(option, ecModel) {\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    }\n\n    option.data = dataOpt;\n    return createListSimply(this, ['value']);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      color: 'auto'\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;","var PointerPath = require(\"./PointerPath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function render(seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function dispose() {},\n  _renderMain: function _renderMain(seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function getColor(percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function _renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function _renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get(valueDim, idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('emphasis.itemStyle').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function _renderTitle(seriesModel, ecModel, api, getColor, posInfo) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get(valueDim, 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: data.getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function _renderDetail(seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var data = seriesModel.getData();\n      var value = data.get(data.mapDimension('value'), 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;","var Path = require(\"zrender/lib/graphic/Path\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function buildPath(ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    symbol: 'emptyCircle',\n    symbolSize: 4,\n    symbolRotate: null,\n    showSymbol: true,\n    // `false`: follow the label interval strategy.\n    // `true`: show all symbols.\n    // `'auto'`: If possible, show all symbols, otherwise\n    //           follow the label interval strategy.\n    showAllSymbol: 'auto',\n    // Whether to connect break point.\n    connectNulls: false,\n    // Sampling for large data. Can be: 'average', 'max', 'min', 'sum'.\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\n\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, forSymbol, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y; // Avoid float number rounding error for symbol on the edge of axis extent.\n  // See #7913 and `test/dataZoom-clip.html`.\n\n  if (forSymbol) {\n    x -= 0.5;\n    width += 0.5;\n    y -= 0.5;\n    height += 0.5;\n  } else {\n    var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n    var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n    if (isHorizontal) {\n      y -= expandSize;\n      height += expandSize * 2;\n    } else {\n      x -= expandSize;\n      width += expandSize * 2;\n    }\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, forSymbol, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent().slice();\n  radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180; // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  if (forSymbol) {\n    radiusExtent[0] -= 0.5;\n    radiusExtent[1] += 0.5;\n  }\n\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: round(radiusExtent[0], 1),\n      r: round(radiusExtent[1], 1),\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, forSymbol, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, forSymbol, seriesModel) : createGridClipShape(coordSys, hasAnimation, forSymbol, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function init() {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function render(seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, false, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function dispose() {},\n  highlight: function highlight(seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function downplay(seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function _newPolyline(points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function _newPolygon(points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function _updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function remove(ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;","var _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar samplers = {\n  average: function average(frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function sum(frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function max(frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(max) ? max : NaN;\n  },\n  min: function min(frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(min) ? min : NaN;\n  },\n  // TODO\n  // Median\n  nearest: function nearest(frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function indexSampler(frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    modifyOutputEnd: true,\n    reset: function reset(seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            // Only support sample the first dim mapped from value axis.\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\nvar geoCreator = require(\"../../coord/geo/geoCreator\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  init: function init(option) {\n    // this._fillOption(option, this.getMapType());\n    // this.option = option;\n    MapSeries.superApply(this, 'init', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function getInitialData(option) {\n    return createListSimply(this, ['value']);\n  },\n  mergeOption: function mergeOption(newOption) {\n    // this._fillOption(newOption, this.getMapType());\n    MapSeries.superApply(this, 'mergeOption', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  _createSelectableList: function _createSelectableList() {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    targetList = geoCreator.getFilledRegions(targetList, this.getMapType(), this.option.nameMap);\n    return targetList;\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function getHostGeoModel() {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function getMapType() {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  _fillOption: function _fillOption(option, mapName) {// Shallow clone\n    // option = zrUtil.extend({}, option);\n    // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\n    // return option;\n  },\n  getRawValue: function getRawValue(dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    var data = this.getData();\n    return data.get(data.mapDimension('value'), dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function getRegionModel(regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function formatTooltip(dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n      var valueDim = data.mapDimension('value');\n\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function getTooltipPosition(dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function setZoom(zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function setCenter(center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      show: false,\n      color: '#000'\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      borderWidth: 0.5,\n      borderColor: '#444',\n      areaColor: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    }\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar parseGeoJson = require(\"./parseGeoJson\");\n\nvar View = require(\"../View\");\n\nvar fixNanhai = require(\"./fix/nanhai\");\n\nvar fixTextCoord = require(\"./fix/textCoord\");\n\nvar fixGeoCoord = require(\"./fix/geoCoord\");\n\nvar fixDiaoyuIsland = require(\"./fix/diaoyuIsland\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Geo fix functions\n\n\nvar geoFixFuncs = [fixNanhai, fixTextCoord, fixGeoCoord, fixDiaoyuIsland];\n/**\n * [Geo description]\n * @param {string} name Geo name\n * @param {string} map Map type\n * @param {Object} geoJson\n * @param {Object} [specialAreas]\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n */\n\nfunction Geo(name, map, geoJson, specialAreas, nameMap) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  this._nameCoordMap = zrUtil.createHashMap();\n  this.loadGeoJson(geoJson, specialAreas, nameMap);\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function containCoord(coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param {Object} geoJson\n   * @param {Object} [specialAreas]\n   *        Specify the positioned areas by left, top, width, height\n   * @param {Object.<string, string>} [nameMap]\n   *        Specify name alias\n   */\n  loadGeoJson: function loadGeoJson(geoJson, specialAreas, nameMap) {\n    // https://jsperf.com/try-catch-performance-overhead\n    try {\n      this.regions = geoJson ? parseGeoJson(geoJson) : [];\n    } catch (e) {\n      throw 'Invalid geoJson format\\n' + e.message;\n    }\n\n    specialAreas = specialAreas || {};\n    nameMap = nameMap || {};\n    var regions = this.regions;\n    var regionsMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionName = regions[i].name; // Try use the alias in nameMap\n\n      regionName = nameMap.hasOwnProperty(regionName) ? nameMap[regionName] : regionName;\n      regions[i].name = regionName;\n      regionsMap.set(regionName, regions[i]); // Add geoJson\n\n      this.addGeoCoord(regionName, regions[i].center); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        regions[i].transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    }\n\n    this._regionsMap = regionsMap;\n    this._rect = null;\n    zrUtil.each(geoFixFuncs, function (fixFunc) {\n      fixFunc(this);\n    }, this);\n  },\n  // Overwrite\n  transformTo: function transformTo(x, y, width, height) {\n    var rect = this.getBoundingRect();\n    rect = rect.clone(); // Longitute is inverted\n\n    rect.y = -rect.y - rect.height;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n    var scale = rawTransformable.scale;\n    scale[1] = -scale[1];\n    rawTransformable.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function getRegion(name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function getRegionByCoord(coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function addGeoCoord(name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function getGeoCoord(name) {\n    return this._nameCoordMap.get(name);\n  },\n  // Overwrite\n  getBoundingRect: function getBoundingRect() {\n    if (this._rect) {\n      return this._rect;\n    }\n\n    var rect;\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionRect = regions[i].getBoundingRect();\n      rect = rect || regionRect.clone();\n      rect.union(regionRect);\n    } // FIXME Always return new ?\n\n\n    return this._rect = rect || new BoundingRect(0, 0, 0, 0);\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function dataToPoint(data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"../Region\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 南海诸岛\n\n\nvar geoCoord = [126, 25];\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\n\nfor (var i = 0; i < points.length; i++) {\n  for (var k = 0; k < points[i].length; k++) {\n    points[i][k][0] /= 10.5;\n    points[i][k][1] /= -10.5 / 0.75;\n    points[i][k][0] += geoCoord[0];\n    points[i][k][1] += geoCoord[1];\n  }\n}\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    geo.regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\n      return {\n        type: 'polygon',\n        exterior: exterior\n      };\n    }), geoCoord));\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar coordsOffsetMap = {\n  '南海诸岛': [32, 80],\n  // 全国\n  '广东': [0, -10],\n  '香港': [10, 5],\n  '澳门': [-10, 10],\n  //'北京': [-10, 0],\n  '天津': [5, 5]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.center;\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar geoCoordMap = {\n  'Russia': [100, 60],\n  'United States': [-99, 38],\n  'United States of America': [-99, 38]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var geoCoord = geoCoordMap[region.name];\n\n    if (geoCoord) {\n      var cp = region.center;\n      cp[0] = geoCoord[0];\n      cp[1] = geoCoord[1];\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 钓鱼岛\n// var Region = require('../Region');\n// var zrUtil = require('zrender/src/core/util');\n// var geoCoord = [126, 25];\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    for (var i = 0, len = geo.regions.length; i < len; ++i) {\n      if (geo.regions[i].name === '台湾') {\n        geo.regions[i].geometries.push({\n          type: 'polygon',\n          exterior: points[0]\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar MapDraw = require(\"../../component/helper/MapDraw\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendChartView({\n  type: 'map',\n  render: function render(mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  },\n  remove: function remove() {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  },\n  dispose: function dispose() {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  },\n  _renderSymbols: function _renderSymbols(mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each(originalData.mapDimension('value'), function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(idx);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          fill: mapModel.getData().getVisual('color')\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: !offset ? 10 : 8\n      }); // First data on the same region\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name = originalData.getName(idx);\n        var fullIndex = fullData.indexOfName(name);\n        var itemModel = originalData.getItemModel(idx);\n        var labelModel = itemModel.getModel('label');\n        var hoverLabelModel = itemModel.getModel('emphasis.label');\n        var polygonGroups = fullData.getItemGraphicEl(fullIndex);\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'normal'), name);\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'emphasis'), normalText);\n\n        var onEmphasis = function onEmphasis() {\n          var hoverStyle = graphic.setTextStyle({}, hoverLabelModel, {\n            text: hoverLabelModel.get('show') ? emphasisText : null\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          }, true);\n          circle.style.extendFrom(hoverStyle); // Make label upper than others if overlaps.\n\n          circle.__mapOriginalZ2 = circle.z2;\n          circle.z2 += 1;\n        };\n\n        var onNormal = function onNormal() {\n          graphic.setTextStyle(circle.style, labelModel, {\n            text: labelModel.get('show') ? normalText : null,\n            textPosition: labelModel.getShallow('position') || 'bottom'\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          });\n\n          if (circle.__mapOriginalZ2 != null) {\n            circle.z2 = circle.__mapOriginalZ2;\n            circle.__mapOriginalZ2 = null;\n          }\n        };\n\n        polygonGroups.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n        onNormal();\n      }\n\n      group.add(circle);\n    });\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each(data.mapDimension('value'), function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.center);\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendSymbol(which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var colorList = seriesModel.get('color');\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var areaColor = itemStyleModel.get('areaColor');\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\n    seriesModel.getData().setVisual({\n      'areaColor': areaColor,\n      'color': color\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\n\n\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  zrUtil.each(datas, function (data) {\n    data.each(data.mapDimension('value'), function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(datas[0].mapDimension('value'), function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(option) {\n  // Save geoCoord\n  var mapSeries = [];\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'map') {\n      mapSeries.push(seriesOpt);\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\n\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['exports', 'echarts'], factory);\n  } else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\n    // CommonJS\n    factory(exports, require('echarts'));\n  } else {\n    // Browser globals\n    factory({}, root.echarts);\n  }\n})(this, function (exports, echarts) {\n  var log = function log(msg) {\n    if (typeof console !== 'undefined') {\n      console && console.error && console.error(msg);\n    }\n  };\n\n  if (!echarts) {\n    log('ECharts is not Loaded');\n    return;\n  }\n\n  if (!echarts.registerMap) {\n    log('ECharts Map is not loaded');\n    return;\n  }\n\n  echarts.registerMap('china', {\n    \"type\": \"FeatureCollection\",\n    \"features\": [{\n      \"id\": \"710000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [[\"@@°Ü¯Û\"], [\"@@ƛĴÕƊÉɼģºðʀ\\\\ƎsÆNŌÔĚänÜƤɊĂǀĆĴĤǊŨxĚĮǂƺòƌâÔ®ĮXŦţƸZûÐƕƑGđ¨ĭMó·ęcëƝɉlÝƯֹÅŃ^Ó·śŃǋƏďíåɛGɉ¿@ăƑ¥ĘWǬÏĶŁâ\"], [\"@@\\\\p|WoYG¿¥Ij@¢\"], [\"@@¡@V^RqBbAnTXeRz¤L«³I\"], [\"@@ÆEEkWqë @\"], [\"@@fced\"]],\n        \"encodeOffsets\": [[[122886, 24033]], [[123335, 22980]], [[122375, 24193]], [[122518, 24117]], [[124427, 22618]], [[124862, 26043]]]\n      },\n      \"properties\": {\n        \"cp\": [121.509062, 25.044332],\n        \"name\": \"台湾\",\n        \"childNum\": 6\n      }\n    }, {\n      \"id\": \"130000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [[\"@@o~Z]ªrºc_ħ²G¼s`jÎŸnüsÂłNX_M`Ç½ÓnUKĜēs¤­©yrý§uģcJe\"], [\"@@U`Ts¿mÂ\"], [\"@@oºƋÄdeVDJj£J|ÅdzÂFt~KŨ¸IÆv|¢r}èonb}`RÎÄn°ÒdÞ²^®lnÐèĄlðÓ×]ªÆ}LiĂ±Ö`^°Ç¶p®đDcŋ`ZÔ¶êqvFÆN®ĆTH®¦O¾IbÐã´BĐɢŴÆíȦpĐÞXR·nndO¤OÀĈƒ­QgµFo|gȒęSWb©osx|hYhgŃfmÖĩnºTÌSp¢dYĤ¶UĈjlǐpäìë|³kÛfw²Xjz~ÂqbTÑěŨ@|oMzv¢ZrÃVw¬ŧĖ¸f°ÐTªqs{S¯r æÝlNd®²Ğ ǆiGĘJ¼lr}~K¨ŸƐÌWöÆzR¤lêmĞLÎ@¡|q]SvKÑcwpÏÏĿćènĪWlĄkT}J¤~ÈTdpddʾĬBVtEÀ¢ôPĎƗè@~kü\\\\rÊĔÖæW_§¼F´©òDòjYÈrbĞāøŀG{ƀ|¦ðrb|ÀH`pʞkvGpuARhÞÆǶgĘTǼƹS£¨¡ù³ŘÍ]¿ÂyôEP xX¶¹ÜO¡gÚ¡IwÃé¦ÅBÏ|Ç°N«úmH¯âDùyŜŲIÄuĐ¨D¸dɂFOhđ©OiÃ`ww^ÌkÑH«ƇǤŗĺtFu{Z}Ö@U´ʚLg®¯Oı°Ãw ^VbÉsmAê]]w§RRl£ȭµu¯b{ÍDěïÿȧuT£ġěŗƃĝQ¨fVƋƅn­a@³@ďyÃ½IĹÊKŭfċŰóxV@tƯJ]eR¾fe|rHA|h~Ėƍl§ÏlTíb ØoÅbbx³^zÃĶ¶Sj®AyÂhðk`«PËµEFÛ¬Y¨Ļrõqi¼Wi°§Ð±´°^[À|ĠO@ÆxO\\\\ta\\\\tĕtû{ġȧXýĪÓjùÎRb^ÎfK[ÝděYfíÙTyuUSyŌŏů@Oi½éŅ­aVcř§ax¹XŻácWU£ôãºQ¨÷Ñws¥qEHÙ|šYQoŕÇyáĂ£MÃ°oťÊP¡mWO¡v{ôvîēÜISpÌhp¨ jdeŔQÖjX³àĈ[n`Yp@UcM`RKhEbpŞlNut®EtqnsÁgAiúoHqCXhfgu~ÏWP½¢G^}¯ÅīGCÑ^ãziMáļMTÃƘrMc|O_¯Ŏ´|morDkO\\\\mĆJfl@cĢ¬¢aĦtRıÒ¾ùƀ^juųœK­UFyƝīÛ÷ąV×qƥV¿aȉd³BqPBmaËđŻģmÅ®V¹d^KKonYg¯XhqaLdu¥Ípǅ¡KąÅkĝęěhq}HyÃ]¹ǧ£Í÷¿qáµ§g¤o^á¾ZE¤i`ĳ{nOl»WÝĔįhgF[¿¡ßkOüš_ūiǱàUtėGyl}ÓM}jpEC~¡FtoQiHkk{Ãmï\"]],\n        \"encodeOffsets\": [[[119712, 40641]], [[121616, 39981]], [[116462, 37237]]]\n      },\n      \"properties\": {\n        \"cp\": [114.502461, 38.045474],\n        \"name\": \"河北\",\n        \"childNum\": 3\n      }\n    }, {\n      \"id\": \"140000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\"@@ÞĩÒSra}ÁyWix±Üe´lèßÓǏokćiµVZģ¡coTSË¹ĪmnÕńehZg{gtwªpXaĚThȑp{¶Eh®RćƑP¿£Pmc¸mQÝWďȥoÅîɡųAďä³aÏJ½¥PG­ąSM­EÅruµéYÓŌ_dĒCo­Èµ]¯_²ÕjāK~©ÅØ^ÔkïçămÏk]­±cÝ¯ÑÃmQÍ~_apm~ç¡qu{JÅŧ·Ls}EyÁÆcI{¤IiCfUcƌÃp§]ě«vD@¡SÀµMÅwuYY¡DbÑc¡h×]nkoQdaMç~eDÛtT©±@¥ù@É¡ZcW|WqOJmĩl«ħşvOÓ«IqăV¥D[mI~Ó¢cehiÍ]Ɠ~ĥqX·eƷn±}v[ěďŕ]_œ`¹§ÕōIo©b­s^}Ét±ū«³p£ÿ·Wµ|¡¥ăFÏs×¥ŅxÊdÒ{ºvĴÎêÌɊ²¶ü¨|ÞƸµȲLLúÉƎ¤ϊęĔV`_bªS^|dzY|dz¥pZbÆ£¶ÒK}tĦÔņƠPYznÍvX¶Ěn ĠÔzý¦ª÷ÑĸÙUȌ¸dòÜJð´ìúNM¬XZ´¤ŊǸ_tldI{¦ƀðĠȤ¥NehXnYGR° ƬDj¬¸|CĞKqºfƐiĺ©ª~ĆOQª ¤@ìǦɌ²æBÊTŸʂōĖĴŞȀÆÿȄlŤĒötÎ½î¼ĨXh|ªM¤Ðz\"],\n        \"encodeOffsets\": [[116874, 41716]]\n      },\n      \"properties\": {\n        \"cp\": [112.549248, 37.857014],\n        \"name\": \"山西\",\n        \"childNum\": 1\n      }\n    }, {\n      \"id\": \"150000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [[\"@@Č^â£ĂhĖMÈÄw\\\\fŦ°W ¢¾luŸDw\\\\̀ʉÌÛMĀ[bÓEn}¶Vcês¯PqFB|S³C|kñHdiÄ¥sŉÅPóÑÑE^ÅPpy_YtShQ·aHwsOnŉÃs©iqjUSiº]ïW«gW¡ARëśĳĘů`çõh]y»ǃǛҤxÒm~zf}pf|ÜroÈzrKÈĵSƧż؜Ġu¦ö\"], [\"@@sKCGS|úþXgp{ÁX¿ć{ƱȏñZáĔyoÁhA}ŅĆfdŉ_¹Y°ėǩÑ¡H¯¶oMQqð¡Ë|Ñ`ƭŁX½·óÛxğįÅcQs«tȋǅFù^it«Č¯[hAi©á¥ÇĚ×l|¹y¯YȵƓñǙµïċĻ|Düȭ¶¡oŽäÕG\\\\ÄT¿Òõr¯LguÏYęRƩɷŌO\\\\İÐ¢æ^Ŋ ĲȶȆbÜGĝ¬¿ĚVĎgª^íu½jÿĕęjık@Ľ]ėl¥ËĭûÁėéV©±ćn©­ȇÍq¯½YÃÔŉÉNÑÅÝy¹NqáʅDǡËñ­ƁYÅy̱os§ȋµʽǘǏƬɱàưN¢ƔÊuľýľώȪƺɂļxZĈ}ÌŉŪĺœĭFЛĽ̅ȣͽÒŵìƩÇϋÿȮǡŏçƑůĕ~Ç¼ȳÐUfdIxÿ\\\\G zâɏÙOº·pqy£@qþ@Ǟ˽IBäƣzsÂZÁàĻdñ°ŕzéØűzșCìDȐĴĺf®Àľưø@ɜÖÞKĊŇƄ§͑těï͡VAġÑÑ»d³öǍÝXĉĕÖ{þĉu¸ËʅğU̎éhɹƆ̗̮ȘǊ֥ड़ࡰţાíϲäʮW¬®ҌeרūȠkɬɻ̼ãüfƠSצɩςåȈHϚÎKǳͲOðÏȆƘ¼CϚǚ࢚˼ФÔ¤ƌĞ̪Qʤ´¼mȠJˀƲÀɠmǐnǔĎȆÞǠN~ʢĜ¶ƌĆĘźʆȬ˪ĚĒ¸ĞGȖƴƀj`ĢçĶāàŃºēĢĖćYÀŎüôQÐÂŎŞǆŞêƖoˆDĤÕºÑǘÛˤ³̀gńƘĔÀ^ªƂ`ªt¾äƚêĦĀ¼ÐĔǎ¨Ȕ»͠^ˮÊȦƤøxRrŜH¤¸ÂxDÄ|ø˂˜ƮÐ¬ɚwɲFjĔ²Äw°ǆdÀÉ_ĸdîàŎjÊêTĞªŌŜWÈ|tqĢUB~´°ÎFCU¼pĀēƄN¦¾O¶łKĊOjĚj´ĜYp{¦SĚÍ\\\\T×ªV÷Ší¨ÅDK°ßtŇĔK¨ǵÂcḷ̌ĚǣȄĽFlġUĵŇȣFʉɁMğįʏƶɷØŭOǽ«ƽū¹Ʊő̝Ȩ§ȞʘĖiɜɶʦ}¨֪ࠜ̀ƇǬ¹ǨE˦ĥªÔêFxúQEr´Wrh¤Ɛ \\\\talĈDJÜ|[Pll̚¸ƎGú´P¬W¦^¦H]prRn|or¾wLVnÇIujkmon£cX^Bh`¥V¦U¤¸}xRj[^xN[~ªxQ[`ªHÆÂExx^wN¶Ê|¨ìMrdYpoRzNyÀDs~bcfÌ`L¾n|¾T°c¨È¢ar¤`[|òDŞĔöxElÖdHÀI`Ď\\\\Àì~ÆR¼tf¦^¢ķ¶eÐÚMptgjɡČÅyġLûŇV®ÄÈƀĎ°P|ªVVªj¬ĚÒêp¬E|ŬÂc|ÀtƐK f{ĘFĒƌXƲąo½Ę\\\\¥o}Ûu£ç­kX{uĩ«āíÓUŅßŢqŤ¥lyň[oi{¦LńðFȪȖĒL¿Ìf£K£ʺoqNwğc`uetOj×°KJ±qÆġmĚŗos¬qehqsuH{¸kH¡ÊRǪÇƌbȆ¢´äÜ¢NìÉʖ¦â©Ż؛Ç@Vu»Aylßí¹ĵêÝlISò³C¹Ìâ²i¶Ìoú^H²CǜңǄ z¼g^èöŰ_Ĳĕê}gÁnUI«m]jvV¼euhwqAaW_µj»çjioQR¹ēÃßt@r³[ÛlćË^ÍÉáGOUÛOB±XkÅ¹£k|e]olkVÍ¼ÕqtaÏõjgÁ£§U^RLËnX°ÇBz^~wfvypV ¯ƫĉ˭ȫƗŷɿÿĿƑ˃ĝÿÃǃßËőó©ǐȍŒĖM×ÍEyxþp]ÉvïèvƀnÂĴÖ@V~Ĉ³MEĸÅĖtējyÄDXÄxGQuv_i¦aBçw˛wD©{tāmQ{EJ§KPśƘƿ¥@sCTÉ}ɃwƇy±gÑ}T[÷kÐç¦«SÒ¥¸ëBX½HáÅµÀğtSÝÂa[ƣ°¯¦Pï¡]£ġÒk®G²èQ°óMq}EóƐÇ\\\\@áügQÍu¥FTÕ¿Jû]|mvāÎYua^WoÀa·­ząÒot×¶CLƗi¯¤mƎHǊ¤îìɾŊìTdåwsRÖgĒųúÍġäÕ}Q¶¿A[¡{d×uQAMxVvMOmăl«ct[wº_ÇÊjbÂ£ĦS_éQZ_lwgOiýe`YYLq§IÁǳ£ÙË[ÕªuƏ³ÍTs·bÁĽäė[b[ŗfãcn¥îC¿÷µ[ŏÀQ­ōĉm¿Á^£mJVmL[{Ï_£F¥Ö{ŹA}×Wu©ÅaųĳƳhB{·TQqÙIķËZđ©Yc|M¡LeVUóK_QWk_ĥ¿ãZ»X\\\\ĴuUèlG®ěłTĠğDŃOrÍdÆÍz]±ŭ©Å]ÅÐ}UË¥©TċïxgckfWgi\\\\ÏĒ¥HkµEë{»ÏetcG±ahUiñiWsɁ·cCÕk]wȑ|ća}wVaĚá G°ùnM¬¯{ÈÐÆA¥ÄêJxÙ¢hP¢ÛºµwWOóFÁz^ÀŗÎú´§¢T¤ǻƺSėǵhÝÅQgvBHouʝl_o¿Ga{ïq{¥|ſĿHĂ÷aĝÇqZñiñC³ª»E`¨åXēÕqÉû[l}ç@čƘóO¿¡FUsAʽīccocÇS}£IS~ălkĩXçmĈŀÐoÐdxÒuL^T{r@¢ÍĝKén£kQyÅõËXŷƏL§~}kq»IHėǅjĝ»ÑÞoå°qTt|r©ÏS¯·eŨĕx«È[eM¿yupN~¹ÏyN£{©għWí»Í¾səšǅ_ÃĀɗ±ąĳĉʍŌŷSÉA±åǥɋ@ë£R©ąP©}ĹªƏj¹erLDĝ·{i«ƫC£µ\"]],\n        \"encodeOffsets\": [[[127444, 52594]], [[113793, 40312]]]\n      },\n      \"properties\": {\n        \"cp\": [111.670801, 40.818311],\n        \"name\": \"内蒙古\",\n        \"childNum\": 2\n      }\n    }, {\n      \"id\": \"210000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [[\"@@L@@sa\"], [\"@@MnNm\"], [\"@@dc\"], [\"@@eÀC@b\"], [\"@@fXwkbrÄ`qg\"], [\"@@^jtWQ\"], [\"@@~ Y]c\"], [\"@@G`ĔN^_¿ZÃM\"], [\"@@iX¶BY\"], [\"@@YZ\"], [\"@@L_{Epf\"], [\"@@^WqCT\\\\\"], [\"@@\\\\[§t|¤_\"], [\"@@m`n_\"], [\"@@Ïxǌ{q_×^Giip\"], [\"@@@é^BntaÊU]x ¯ÄPĲ­°hʙK³VÕ@Y~|EvĹsÇ¦­L^pÃ²ŸÒG Ël]xxÄ_fT¤Ď¤cPC¨¸TVjbgH²sdÎdHt`B²¬GJję¶[ÐhjeXdlwhðSČ¦ªVÊÏÆZÆŶ®²^ÎyÅÎcPqńĚDMħĜŁH­kçvV[ĳ¼WYÀäĦ`XlR`ôLUVfK¢{NZdĒªYĸÌÚJRr¸SA|ƴgŴĴÆbvªØX~źB|¦ÕE¤Ð`\\\\|KUnnI]¤ÀÂĊnŎR®Ő¿¶\\\\ÀøíDm¦ÎbŨabaĘ\\\\ľãÂ¸atÎSƐ´©v\\\\ÖÚÌǴ¤Â¨JKrZ_ZfjþhPkx`YRIjJcVf~sCN¤ EhæmsHy¨SðÑÌ\\\\\\\\ĐRZk°IS§fqŒßýáĞÙÉÖ[^¯ǤŲê´\\\\¦¬ĆPM¯£»uïpùzExanµyoluqe¦W^£ÊL}ñrkqWňûPUP¡ôJoo·U}£[·¨@XĸDXm­ÛÝºGUCÁª½{íĂ^cjk¶Ã[q¤LÉö³cux«zZf²BWÇ®Yß½ve±ÃCý£W{Ú^q^sÑ·¨ÍOt¹·C¥GDrí@wÕKţÃ«V·i}xËÍ÷i©ĝɝǡ]{c±OW³Ya±_ç©HĕoƫŇqr³Lys[ñ³¯OSďOMisZ±ÅFC¥Pq{Ã[Pg}\\\\¿ghćOk^ģÁFıĉĥM­oEqqZûěŉ³F¦oĵhÕP{¯~TÍlªNßYÐ{Ps{ÃVUeĎwk±ŉVÓ½ŽJãÇÇ»Jm°dhcÀffdF~ĀeĖd`sx² ®EżĀdQÂd^~ăÔH¦\\\\LKpĄVez¤NP ǹÓRÆąJSh­a[¦´ÂghwmBÐ¨źhI|VV|p] Â¼èNä¶ÜBÖ¼L`¼bØæKVpoúNZÞÒKxpw|ÊEMnzEQIZZNBčÚFÜçmĩWĪñtÞĵÇñZ«uD±|Əlĳ¥ãn·±PmÍada CLǑkùó¡³Ï«QaċÏOÃ¥ÕđQȥċƭy³ÃA\"]],\n        \"encodeOffsets\": [[[123686, 41445]], [[126019, 40435]], [[124393, 40128]], [[126117, 39963]], [[125322, 40140]], [[126686, 40700]], [[126041, 40374]], [[125584, 40168]], [[125453, 40165]], [[125362, 40214]], [[125280, 40291]], [[125774, 39997]], [[125976, 40496]], [[125822, 39993]], [[125509, 40217]], [[122731, 40949]]]\n      },\n      \"properties\": {\n        \"cp\": [123.429096, 41.796767],\n        \"name\": \"辽宁\",\n        \"childNum\": 16\n      }\n    }, {\n      \"id\": \"220000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\"@@pä³PClFbbÍzwBGĭZÅi»lY­ċ²SgkÇ£^Sqd¯R©é£¯S\\\\cZ¹iűƏCuƍÓXoR}M^o£R}oªU­FuuXHlEÅÏ©¤ÛmTþ¤D²ÄufàÀ­XXÈ±AeyYw¬dvõ´KÊ£\\\\rµÄlidā]|î©¾DÂVH¹Þ®ÜWnCķ W§@\\\\¸~¤Vp¸póIO¢VOŇürXql~òÉK]¤¥Xrfkvzpm¶bwyFoúvð¼¤ N°ąO¥«³[éǡű_°Õ\\\\ÚÊĝþâőàerR¨­JYlďQ[ ÏYëÐ§TGztnß¡gFkMāGÁ¤ia ÉÈ¹`\\\\xs¬dĆkNnuNUuP@vRY¾\\\\¢GªóĄ~RãÖÎĢùđŴÕhQxtcæëSɽŉíëǉ£ƍG£nj°KƘµDsØÑpyĆ¸®¿bXp]vbÍZuĂ{n^IüÀSÖ¦EvRÎûh@â[ƏÈô~FNr¯ôçR±­HÑlĢ^¤¢OðævxsŒ]ÞÁTĠs¶¿âÆGW¾ìA¦·TÑ¬è¥ÏÐJ¨¼ÒÖ¼ƦɄxÊ~StD@Ă¼Ŵ¡jlºWvÐzƦZÐ²CH AxiukdGgetqmcÛ£Ozy¥cE}|¾cZk¿uŐã[oxGikfeäT@SUwpiÚFM©£è^Ú`@v¶eňf heP¶täOlÃUgÞzŸU`l}ÔÆUvØ_Ō¬Öi^ĉi§²ÃB~¡ĈÚEgc|DC_Ȧm²rBx¼MÔ¦ŮdĨÃâYxƘDVÇĺĿg¿cwÅ\\\\¹¥Yĭl¤OvLjM_a W`zļMž·\\\\swqÝSAqŚĳ¯°kRē°wx^ĐkǂÒ\\\\]nrĂ}²ĊŲÒøãh·M{yMzysěnĒġV·°G³¼XÀ¤¹i´o¤ŃÈ`ÌǲÄUĞd\\\\iÖmÈBĤÜɲDEh LG¾ƀÄ¾{WaYÍÈĢĘÔRîĐj}ÇccjoUb½{h§Ǿ{KƖµÎ÷GĀÖŠåưÎs­lyiē«`å§H¥Ae^§GK}iã\\\\c]v©ģZmÃ|[M}ģTɟĵÂÂ`ÀçmFK¥ÚíÁbX³ÌQÒHof{]ept·GŋĜYünĎųVY^ydõkÅZW«WUa~U·SbwGçǑiW^qFuNĝ·EwUtW·Ýďæ©PuqEzwAVXRãQ`­©GMehccďÏd©ÑW_ÏYƅ»é\\\\ɹ~ǙG³mØ©BšuT§Ĥ½¢Ã_Ã½L¡ýqT^rme\\\\PpZZbyuybQefµ]UhĿDCmûvaÙNSkCwncćfv~YÇG\"],\n        \"encodeOffsets\": [[130196, 42528]]\n      },\n      \"properties\": {\n        \"cp\": [125.3245, 43.886841],\n        \"name\": \"吉林\",\n        \"childNum\": 1\n      }\n    }, {\n      \"id\": \"230000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [[\"@@ƨĶTLÇyqpÇÛqe{~oyen}s`qiXGù]Ëp½©lÉÁp]Þñ´FĂ^fäîºkàz¼BUvÈ@\"], [\"@@UµNÿ¥īèçHÍøƕ¶Lǽ|g¨|a¾pVidd~ÈiíďÓQġėÇZÎXb½|ſÃH½KFgɱCģÛÇAnjÕc[VĝǱÃËÇ_ £ń³pj£º¿»WH´¯U¸đĢmtĜyzzNN|g¸÷äűÑ±ĉā~mq^[ǁÑďlw]¯xQĔ¯l°řĴrBÞTxr[tŽ¸ĻN_yX`biNKuP£kZĮ¦[ºxÆÀdhĹŀUÈƗCwáZħÄŭcÓ¥»NAw±qȥnD`{ChdÙFć}¢A±Äj¨]ĊÕjŋ«×`VuÓÅ~_kŷVÝyhVkÄãPsOµfgeŇµf@u_Ù ÙcªNªÙEojVxT@ãSefjlwH\\\\pŏäÀvlY½d{F~¦dyz¤PÜndsrhfHcvlwjF£G±DÏƥYyÏu¹XikĿ¦ÏqƗǀOŜ¨LI|FRĂn sª|C˜zxAè¥bfudTrFWÁ¹Am|ĔĕsķÆF´N}ćUÕ@Áĳſmuçuð^ÊýowFzØÎĕNőǏȎôªÌŒǄàĀÄ˄ĞŀƒʀĀƘŸˮȬƬĊ°Uzouxe]}AyÈW¯ÌmKQ]Īºif¸ÄX|sZt|½ÚUÎ lk^p{f¤lºlÆW A²PVÜPHÊâ]ÎĈÌÜk´\\\\@qàsĔÄQºpRij¼èi`¶bXrBgxfv»uUi^v~J¬mVp´£´VWrnP½ì¢BX¬hðX¹^TjVriªjtŊÄmtPGx¸bgRsT`ZozÆO]ÒFôÒOÆŊvÅpcGêsx´DR{AEOr°x|íb³Wm~DVjºéNNËÜ˛ɶ­GxŷCSt}]ûōSmtuÇÃĕNāg»íT«u}ç½BĵÞʣ¥ëÊ¡MÛ³ãȅ¡ƋaǩÈÉQG¢·lG|tvgrrf«ptęŘnÅĢrI²¯LiØsPf_vĠdxM prʹL¤¤eËÀđKïÙVY§]Ióáĥ]ķK¥j|pŇ\\\\kzţ¦šnņäÔVĂîĪ¬|vW®l¤èØrxm¶ă~lÄƯĄ̈́öȄEÔ¤ØQĄĄ»ƢjȦOǺ¨ìSŖÆƬyQv`cwZSÌ®ü±Ǆ]ŀç¬B¬©ńzƺŷɄeeOĨSfm ĊƀP̎ēz©ĊÄÕÊmgÇsJ¥ƔŊśæÎÑqv¿íUOµªÂnĦÁ_½ä@êí£P}Ġ[@gġ}gɊ×ûÏWXá¢užƻÌsNÍ½ƎÁ§čŐAēeL³àydl¦ĘVçŁpśǆĽĺſÊQíÜçÛġÔsĕ¬Ǹ¯YßċġHµ ¡eå`ļrĉŘóƢFìĎWøxÊkƈdƬv|I|·©NqńRŀ¤éeŊŀàŀU²ŕƀBQ£Ď}L¹Îk@©ĈuǰųǨÚ§ƈnTËÇéƟÊcfčŤ^XmHĊĕË«W·ċëx³ǔķÐċJāwİ_ĸȀ^ôWr­°oú¬ĦŨK~ȰCĐ´Ƕ£fNÎèâw¢XnŮeÂÆĶ¾¾xäLĴĘlļO¤ÒĨA¢Êɚ¨®ØCÔ ŬGƠƦYĜĘÜƬDJg_ͥœ@čŅĻA¶¯@wÎqC½Ĉ»NăëKďÍQÙƫ[«ÃígßÔÇOÝáWñuZ¯ĥŕā¡ÑķJu¤E å¯°WKÉ±_d_}}vyõu¬ï¹ÓU±½@gÏ¿rÃ½DgCdµ°MFYxw¿CG£Rƛ½Õ{]L§{qqą¿BÇƻğëܭǊË|c²}Fµ}ÙRsÓpg±QNqǫŋRwŕnéÑÉK«SeYRŋ@{¤SJ}D Ûǖ֍]gr¡µŷjqWÛham³~S«Þ]\"]],\n        \"encodeOffsets\": [[[127123, 51780]], [[134456, 44547]]]\n      },\n      \"properties\": {\n        \"cp\": [126.642464, 45.756967],\n        \"name\": \"黑龙江\",\n        \"childNum\": 2\n      }\n    }, {\n      \"id\": \"320000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\"@@cþÅPi`ZRu¥É\\\\]~°Y`µÓ^phÁbnÀşúòaĬºTÖŒbe¦¦{¸ZâćNp©Hr|^mjhSEb\\\\afv`sz^lkljÄtg¤D­¾X¿À|ĐiZȀåB·î}GL¢õcßjayBFµÏC^ĭcÙt¿sğH]j{s©HM¢QnDÀ©DaÜÞ·jgàiDbPufjDk`dPOîhw¡ĥ¥GP²ĐobºrYî¶aHŢ´ ]´rılw³r_{£DB_Ûdåuk|Ũ¯F Cºyr{XFye³Þċ¿ÂkĭB¿MvÛpm`rÚã@Ę¹hågËÖƿxnlč¶Åì½Ot¾dJlVJĂǀŞqvnO^JZż·Q}êÍÅmµÒ]ƍ¦Dq}¬R^èĂ´ŀĻĊIÔtĲyQŐĠMNtR®òLhĚs©»}OÓGZz¶A\\\\jĨFäOĤHYJvÞHNiÜaĎÉnFQlNM¤B´ĄNöɂtpŬdfåqm¿QûùŞÚb¤uŃJŴu»¹ĄlȖħŴw̌ŵ²ǹǠ͛hĭłƕrçü±Yxcitğ®jű¢KOķCoy`å®VTa­_Ā]ŐÝɞï²ʯÊ^]afYǸÃĆēĪȣJđ͍ôƋÄÄÍīçÛɈǥ£­ÛmY`ó£Z«§°Ó³QafusNıǅ_k}¢m[ÝóDµ¡RLčiXyÅNïă¡¸iĔÏNÌŕoēdōîåŤûHcs}~Ûwbù¹£¦ÓCtOPrE^ÒogĉIµÛÅʹK¤½phMü`oæŀ\"],\n        \"encodeOffsets\": [[121740, 32276]]\n      },\n      \"properties\": {\n        \"cp\": [118.767413, 32.041544],\n        \"name\": \"江苏\",\n        \"childNum\": 1\n      }\n    }, {\n      \"id\": \"330000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [[\"@@E^dQ]K\"], [\"@@jX^j\"], [\"@@sfbU\"], [\"@@qP\\\\xz[ck\"], [\"@@R¢FX}°[s_\"], [\"@@Cb\\\\}\"], [\"@@e|v\\\\la{u\"], [\"@@v~u}\"], [\"@@QxÂF¯}\"], [\"@@¹nvÞs¯o\"], [\"@@rSkUEj\"], [\"@@bi­ZP\"], [\"@@p[}INf\"], [\"@@À¿\"], [\"@@¹dnb\"], [\"@@rSBnR\"], [\"@@g~h}\"], [\"@@FlEk\"], [\"@@OdPc\"], [\"@@v[u\\\\\"], [\"@@FjâL~wyoo~sµL\\\\\"], [\"@@¬e¹aN\"], [\"@@\\\\nÔ¡q]L³ë\\\\ÿ®QÖ\"], [\"@@ÊA­©[¬\"], [\"@@Kxv­\"], [\"@@@hlIk]\"], [\"@@pW{o||j\"], [\"@@Md|_mC\"], [\"@@¢X£ÏylD¼XtH\"], [\"@@hlÜ[LykAvyfw^E¤\"], [\"@@fp¤MusR\"], [\"@@®_ma~LÁ¬Z\"], [\"@@iMxZ\"], [\"@@ZcYd\"], [\"@@Z~dOSo|A¿qZv\"], [\"@@@`EN¡v\"], [\"@@|TY{\"], [\"@@@n@m\"], [\"@@XWkCT\\\\\"], [\"@@ºwZRkĕWO¢\"], [\"@@X®±GrÆª\\\\ÔáXq{\"], [\"@@ůTG°ĄLHm°UC\"], [\"@@¤aÜx~}dtüGæţŎíĔcŖpMËÐjē¢·ðĄÆMzjWKĎ¢Q¶À_ê_Bıi«pZgf¤Nrq]§ĂN®«H±yƳí¾×ŸīàLłčŴǝĂíÀBŖÕªÁŖHŗŉåqûõi¨hÜ·ñt»¹ýv_[«¸mYL¯QªmĉÅdMgÇjcº«ę¬­K­´B«Âącoċ\\\\xKd¡gěŧ«®á[~ıxu·ÅKsËÉc¢Ù\\\\ĭƛëbf¹­ģSĜkáƉÔ­ĈZB{aMµfzŉfåÂŧįƋǝÊĕġć£g³ne­ą»@­¦S®\\\\ßðChiqªĭiAuA­µ_W¥ƣO\\\\lċĢttC¨£t`PZäuXßBsĻyekOđġĵHuXBµ]×­­\\\\°®¬F¢¾pµ¼kŘó¬Wät¸|@L¨¸µrºù³Ù~§WIZW®±Ð¨ÒÉx`²pĜrOògtÁZ}þÙ]¡FKwsPlU[}¦Rvn`hq¬\\\\nQ´ĘRWb_ rtČFIÖkĦPJ¶ÖÀÖJĈĄTĚòC ²@PúØz©Pî¢£CÈÚĒ±hŖl¬â~nm¨f©iļ«mntuÖZÜÄjL®EÌFª²iÊxØ¨IÈhhst\"], [\"@@o\\\\VzRZ}y\"], [\"@@@°¡mÛGĕ¨§Ianá[ýƤjfæØLäGr\"]],\n        \"encodeOffsets\": [[[125592, 31553]], [[125785, 31436]], [[125729, 31431]], [[125513, 31380]], [[125223, 30438]], [[125115, 30114]], [[124815, 29155]], [[124419, 28746]], [[124095, 28635]], [[124005, 28609]], [[125000, 30713]], [[125111, 30698]], [[125078, 30682]], [[125150, 30684]], [[124014, 28103]], [[125008, 31331]], [[125411, 31468]], [[125329, 31479]], [[125626, 30916]], [[125417, 30956]], [[125254, 30976]], [[125199, 30997]], [[125095, 31058]], [[125083, 30915]], [[124885, 31015]], [[125218, 30798]], [[124867, 30838]], [[124755, 30788]], [[124802, 30809]], [[125267, 30657]], [[125218, 30578]], [[125200, 30562]], [[124968, 30474]], [[125167, 30396]], [[124955, 29879]], [[124714, 29781]], [[124762, 29462]], [[124325, 28754]], [[123990, 28459]], [[125366, 31477]], [[125115, 30363]], [[125369, 31139]], [[122495, 31878]], [[125329, 30690]], [[125192, 30787]]]\n      },\n      \"properties\": {\n        \"cp\": [120.153576, 30.287459],\n        \"name\": \"浙江\",\n        \"childNum\": 45\n      }\n    }, {\n      \"id\": \"340000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [[\"@@^iuLX^\"], [\"@@e©Ehl\"], [\"@@°ZÆëĎµmkǀwÌÕæhºgBĝâqÙĊzÖgņtÀÁĂÆáhEz|WzqD¹°Eŧl{ævÜcA`¤C`|´qxĲkq^³³GšµbíZ¹qpa±ď OH¦Ħx¢gPícOl_iCveaOjChß¸iÝbÛªCC¿mRV§¢A|t^iĠGÀtÚsd]ĮÐDE¶zAb àiödK¡~H¸íæAǿYj{ď¿À½W®£ChÃsikkly]_teu[bFaTign{]GqªoĈMYá|·¥f¥őaSÕėNµñĞ«Im_m¿Âa]uĜp Z_§{Cäg¤°r[_YjÆOdý[I[á·¥Q_nùgL¾mvˊBÜÆ¶ĊJhpc¹O]iŠ]¥ jtsggJÇ§w×jÉ©±EFË­KiÛÃÕYvsm¬njĻª§emná}k«ŕgđ²ÙDÇ¤í¡ªOy×Où±@DñSęćăÕIÕ¿IµĥOjNÕËT¡¿tNæŇàåyķrĕq§ÄĩsWÆßF¶X®¿mwRIÞfßoG³¾©uyHį{Ɓħ¯AFnuPÍÔzVdàôº^Ðæd´oG¤{S¬ćxã}ŧ×Kǥĩ«ÕOEÐ·ÖdÖsƘÑ¨[Û^Xr¢¼§xvÄÆµ`K§ tÒ´Cvlo¸fzŨð¾NY´ı~ÉĔēßúLÃÃ_ÈÏ|]ÂÏFlg`ben¾¢pUh~ƴĖ¶_r sĄ~cƈ]|r c~`¼{À{ȒiJjz`îÀT¥Û³]u}fïQl{skloNdjäËzDvčoQďHI¦rbtHĔ~BmlRV_ħTLnñH±DL¼Lªl§Ťa¸ĚlK²\\\\RòvDcÎJbt[¤D@®hh~kt°ǾzÖ@¾ªdbYhüóZ ň¶vHrľ\\\\ÊJuxAT|dmÀO[ÃÔG·ĚąĐlŪÚpSJ¨ĸLvÞcPæķŨ®mÐálwKhïgA¢ųÆ©Þ¤OÈm°K´\"]],\n        \"encodeOffsets\": [[[121722, 32278]], [[119475, 30423]], [[119168, 35472]]]\n      },\n      \"properties\": {\n        \"cp\": [117.283042, 31.86119],\n        \"name\": \"安徽\",\n        \"childNum\": 3\n      }\n    }, {\n      \"id\": \"350000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [[\"@@zht´]\"], [\"@@aj^~ĆG©O\"], [\"@@ed¨C}}i\"], [\"@@@vPGsQ\"], [\"@@sBzddW]Q\"], [\"@@S¨Q{\"], [\"@@NVucW\"], [\"@@qptBAq\"], [\"@@¸[mu\"], [\"@@Q\\\\pD]_\"], [\"@@jSwUadpF\"], [\"@@eXª~\"], [\"@@AjvFso\"], [\"@@fT_Çí\\\\v|ba¦jZÆy°\"], [\"@@IjJi\"], [\"@@wJIx«¼AoNe{M­\"], [\"@@K±¡ÓČäeZ\"], [\"@@k¡¹Eh~c®wBkUplÀ¡I~Māe£bN¨gZý¡a±Öcp©PhI¢QqÇGj|¥U g[Ky¬ŏv@OptÉEF\\\\@ åA¬V{XģĐBycpě¼³Ăp·¤¥ohqqÚ¡ŅLs^Ã¡§qlÀhH¨MCe»åÇGD¥zPO£čÙkJA¼ßėuĕeûÒiÁŧSW¥Qûŗ½ùěcÝ§SùĩąSWó«íęACµeRåǃRCÒÇZÍ¢ź±^dlstjD¸ZpuÔâÃH¾oLUêÃÔjjēò´ĄWƛ^Ñ¥Ħ@ÇòmOw¡õyJyD}¢ďÑÈġfZda©º²z£NjD°Ötj¶¬ZSÎ~¾c°¶ÐmxO¸¢Pl´SL|¥AȪĖMņĲg®áIJČĒü` QF¬h|ĂJ@zµ |ê³È ¸UÖŬŬÀEttĸr]ðM¤ĶĲHtÏ AĬkvsq^aÎbvdfÊòSD´Z^xPsĂrvƞŀjJd×ŘÉ ®AÎ¦ĤdxĆqAZRÀMźnĊ»İÐZ YXæJyĊ²·¶q§·K@·{sXãô«lŗ¶»o½E¡­«¢±¨Y®Ø¶^AvWĶGĒĢPlzfļtàAvWYãO_¤sD§ssČġ[kƤPX¦`¶®BBvĪjv©jx[L¥àï[F¼ÍË»ğV`«Ip}ccÅĥZEãoP´B@D¸m±z«Ƴ¿å³BRØ¶Wlâþäą`]Z£Tc ĹGµ¶Hm@_©k¾xĨôȉðX«½đCIbćqK³ÁÄš¬OAwã»aLŉËĥW[ÂGIÂNxĳ¤D¢îĎÎB§°_JGs¥E@¤ućPåcuMuw¢BI¿]zG¹guĮck\\\\_\"]],\n        \"encodeOffsets\": [[[123250, 27563]], [[122541, 27268]], [[123020, 27189]], [[122916, 27125]], [[122887, 26845]], [[122808, 26762]], [[122568, 25912]], [[122778, 26197]], [[122515, 26757]], [[122816, 26587]], [[123388, 27005]], [[122450, 26243]], [[122578, 25962]], [[121255, 25103]], [[120987, 24903]], [[122339, 25802]], [[121042, 25093]], [[122439, 26024]]]\n      },\n      \"properties\": {\n        \"cp\": [119.306239, 26.075302],\n        \"name\": \"福建\",\n        \"childNum\": 18\n      }\n    }, {\n      \"id\": \"360000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\"@@ĢĨƐgļ¼ÂMD~ņªe^\\\\^§ý©j×cZØ¨zdÒa¶lÒJìõ`oz÷@¤uŞ¸´ôęöY¼HČƶajlÞƩ¥éZ[|h}^U  ¥pĄžƦO lt¸Æ Q\\\\aÆ|CnÂOjt­ĚĤdÈF`¶@Ðë ¦ōÒ¨SêvHĢûXD®QgÄWiØPÞìºr¤ǆNĠ¢lĄtZoCƞÔºCxrpĠV®Ê{f_Y`_eq®Aot`@oDXfkp¨|s¬\\\\DÄSfè©Hn¬^DhÆyøJhØxĢĀLÊƠPżċĄwȠĚ¦G®ǒĤäTŠÆ~Ħw«|TF¡nc³Ïå¹]ĉđxe{ÎÓvOEm°BƂĨİ|Gvz½ª´HàpeJÝQxnÀW­EµàXÅĪt¨ÃĖrÄwÀFÎ|ňÓMå¼ibµ¯»åDT±m[r«_gmQu~¥V\\\\OkxtL E¢Ú^~ýêPóqoě±_Êw§ÑªåƗā¼mĉŹ¿NQYBąrwģcÍ¥B­ŗÊcØiIƝĿuqtāwO]³YCñTeÉcaubÍ]trluīBÐGsĵıN£ï^ķqss¿FūūVÕ·´Ç{éĈýÿOER_đûIċâJh­ŅıNȩĕB¦K{Tk³¡OP·wnµÏd¯}½TÍ«YiµÕsC¯iM¤­¦¯P|ÿUHvhe¥oFTuõ\\\\OSsMòđƇiaºćXĊĵà·çhƃ÷Ç{ígu^đgm[×zkKN¶Õ»lčÓ{XSÆv©_ÈëJbVkĔVÀ¤P¾ºÈMÖxlò~ªÚàGĂ¢B±ÌKyáV¼Ã~­`gsÙfIƋlę¹e|~udjuTlXµf`¿Jd[\\\\L²\"],\n        \"encodeOffsets\": [[116689, 26234]]\n      },\n      \"properties\": {\n        \"cp\": [115.892151, 28.676493],\n        \"name\": \"江西\",\n        \"childNum\": 1\n      }\n    }, {\n      \"id\": \"370000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [[\"@@Xjd]{K\"], [\"@@itbFHy\"], [\"@@HlGk\"], [\"@@TGy\"], [\"@@K¬U\"], [\"@@WdXc\"], [\"@@PtOs\"], [\"@@LnXhc\"], [\"@@ppVu]Or\"], [\"@@cdzAUa\"], [\"@@udRhnCI\"], [\"@@oIpR\"], [\"@@Ľč{fzƤîKÎMĮ]ZF½Y]â£ph¶¨râøÀÎǨ¤^ºÄGz~grĚĜlĞÆLĆǆ¢Îo¦cvKbgr°WhmZp L]LºcUÆ­nżĤÌĒbAnrOA´ȊcÀbƦUØrĆUÜøĬƞEzVL®öØBkŖÝĐĖ¹ŧ̄±ÀbÎÉnb²ĦhņBĖįĦåXćì@L¯´ywƕCéÃµė ƿ¸lµ¾Z|ZWyFY¨Mf~C¿`à_RÇzwƌfQnny´INoƬèôº|sTJULîVjǎ¾ĒØDz²XPn±ŴPè¸ŔLƔÜƺ_TüÃĤBBċÈöA´faM¨{«M`¶d¡ôÖ°mȰBÔjj´PM|c^d¤u¤Û´ä«ƢfPk¶Môl]Lb}su^ke{lCMrDÇ­]NÑFsmoõľHyGă{{çrnÓEƕZGª¹Fj¢ïWuøCǷë¡ąuhÛ¡^KxC`C\\\\bÅxì²ĝÝ¿_NīCȽĿåB¥¢·IŖÕy\\\\¹kxÃ£Č×GDyÃ¤ÁçFQ¡KtŵƋ]CgÏAùSedcÚźuYfyMmhUWpSyGwMPqŀÁ¼zK¶G­Y§Ë@´śÇµƕBm@IogZ¯uTMx}CVKï{éƵP_K«pÛÙqċtkkù]gTğwoɁsMõ³ăAN£MRkmEÊčÛbMjÝGuIZGPģãħE[iµBEuDPÔ~ª¼ęt]ûG§¡QMsğNPŏįzs£Ug{đJĿļā³]ç«Qr~¥CƎÑ^n¶ÆéÎR~Ż¸YI] PumŝrƿIā[xeÇ³L¯v¯s¬ÁY~}ťuŁgƋpÝĄ_ņī¶ÏSR´ÁP~¿Cyċßdwk´SsX|t`Ä ÈðAªìÎT°¦Dda^lĎDĶÚY°`ĪŴǒàŠv\\\\ebZHŖR¬ŢƱùęOÑM­³FÛWp[\"]],\n        \"encodeOffsets\": [[[123806, 39303]], [[123821, 39266]], [[123742, 39256]], [[123702, 39203]], [[123649, 39066]], [[123847, 38933]], [[123580, 38839]], [[123894, 37288]], [[123043, 36624]], [[123344, 38676]], [[123522, 38857]], [[123628, 38858]], [[118260, 36742]]]\n      },\n      \"properties\": {\n        \"cp\": [117.000923, 36.675807],\n        \"name\": \"山东\",\n        \"childNum\": 13\n      }\n    }, {\n      \"id\": \"410000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\"@@ýLùµP³swIÓxcŢĞð´E®ÚPtĴXØxÂ¶@«ŕŕQGYfa[şußǩđš_X³ĳÕčC]kbc¥CS¯ëÍB©÷³­Si_}mYTt³xlàcČzÀD}ÂOQ³ÐTĨ¯ƗòËŖ[hłŦv~}ÂZ«¤lPÇ£ªÝŴÅR§ØnhctâknÏ­ľŹUÓÝdKuķI§oTũÙďkęĆH¸Ó\\\\Ä¿PcnS{wBIvÉĽ[GqµuŇôYgûZca©@½Õǽys¯}lgg@­C\\\\£asIdÍuCQñ[L±ęk·ţb¨©kK»KC²òGKmĨS`UQnk}AGēsqaJ¥ĐGRĎpCuÌy ã iMcplk|tRkðev~^´¦ÜSí¿_iyjI|ȑ|¿_»d}q^{Ƈdă}tqµ`Ƴĕg}V¡om½faÇo³TTj¥tĠRyK{ùÓjuµ{t}uËRivGçJFjµÍyqÎàQÂFewixGw½Yŷpµú³XU½ġyłåkÚwZX·l¢Á¢KzOÎÎjc¼htoDHr|­J½}JZ_¯iPq{tę½ĕ¦Zpĵø«kQĹ¤]MÛfaQpě±ǽ¾]u­Fu÷nčÄ¯ADp}AjmcEÇaª³o³ÆÍSƇĈÙDIzËčľ^KLiÞñ[aA²zzÌ÷D|[íÄ³gfÕÞd®|`Ć~oĠƑô³ŊD×°¯CsøÀ«ìUMhTº¨¸ǡîSÔDruÂÇZÖEvPZW~ØÐtĄE¢¦Ðy¸bô´oŬ¬²Ês~]®tªapŎJ¨Öº_Ŕ`Ŗ^Đ\\\\Ĝu~m²Ƹ¸fWĦrƔ}Î^gjdfÔ¡J}\\\\n C¦þWxªJRÔŠu¬ĨĨmFdM{\\\\d\\\\YÊ¢ú@@¦ª²SÜsC}fNècbpRmlØ^gd¢aÒ¢CZZxvÆ¶N¿¢T@uC¬^ĊðÄn|lGlRjsp¢ED}Fio~ÔN~zkĘHVsǲßjŬŢ`Pûàl¢\\\\ÀEhİgÞē X¼Pk|m\"],\n        \"encodeOffsets\": [[118256, 37017]]\n      },\n      \"properties\": {\n        \"cp\": [113.665412, 34.757975],\n        \"name\": \"河南\",\n        \"childNum\": 1\n      }\n    }, {\n      \"id\": \"420000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [[\"@@AB\"], [\"@@lskt\"], [\"@@¾«}{ra®pîÃ\\\\{øCËyyB±b\\\\òÝjKL ]ĎĽÌJyÚCƈćÎT´Å´pb©ÈdFin~BCo°BĎÃømv®E^vǾ½Ĝ²RobÜeN^ĺ£R¬lĶ÷YoĖ¥Ě¾|sOr°jY`~I¾®I{GqpCgyl{£ÍÍyPLÂ¡¡¸kWxYlÙæŁĢz¾V´W¶ùŸo¾ZHxjwfxGNÁ³Xéæl¶EièIH ujÌQ~v|sv¶Ôi|ú¢FhQsğ¦SiŠBgÐE^ÁÐ{čnOÂÈUÎóĔÊēĲ}Z³½Mŧïeyp·uk³DsÑ¨L¶_ÅuÃ¨w»¡WqÜ]\\\\Ò§tƗcÕ¸ÕFÏǝĉăxŻČƟOKÉġÿ×wg÷IÅzCg]m«ªGeçÃTC«[t§{loWeC@ps_Bp­rf_``Z|ei¡oċMqow¹DƝÓDYpûsYkıǃ}s¥ç³[§cY§HK«Qy]¢wwö¸ïx¼ņ¾Xv®ÇÀµRĠÐHM±cÏdƒǍũȅȷ±DSyúĝ£ŤĀàtÖÿï[îb\\\\}pĭÉI±Ñy¿³x¯No|¹HÏÛmjúË~TuęjCöAwě¬Rđl¯ Ñb­ŇTĿ_[IčĄʿnM¦ğ\\\\É[T·k¹©oĕ@A¾wya¥Y\\\\¥Âaz¯ãÁ¡k¥ne£ÛwE©Êō¶˓uoj_U¡cF¹­[WvP©whuÕyBF`RqJUw\\\\i¡{jEPïÿ½fćQÑÀQ{°fLÔ~wXgītêÝ¾ĺHd³fJd]HJ²EoU¥HhwQsƐ»Xmg±çve]DmÍPoCc¾_hhøYrŊU¶eD°Č_N~øĹĚ·`z]Äþp¼äÌQv\\\\rCé¾TnkžŐÚÜa¼ÝƆĢ¶ÛodĔňÐ¢JqPb ¾|J¾fXƐîĨ_Z¯À}úƲN_ĒÄ^ĈaŐyp»CÇÄKñL³ġM²wrIÒŭxjb[n«øæà ^²­h¯ÚŐªÞ¸Y²ĒVø}Ā^İ´LÚm¥ÀJÞ{JVųÞŃx×sxxƈē ģMřÚðòIfĊŒ\\\\Ʈ±ŒdÊ§ĘDvČ_Àæ~Dċ´A®µ¨ØLV¦êHÒ¤\"]],\n        \"encodeOffsets\": [[[113712, 34000]], [[115612, 30507]], [[113649, 34054]]]\n      },\n      \"properties\": {\n        \"cp\": [114.298572, 30.584355],\n        \"name\": \"湖北\",\n        \"childNum\": 3\n      }\n    }, {\n      \"id\": \"430000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [[\"@@nFTs\"], [\"@@ßÅÆá½ÔXrCOËRïÿĩ­TooQyÓ[ŅBE¬ÎÓXaį§Ã¸G °ITxpúxÚĳ¥ÏĢ¾edÄ©ĸGàGhM¤Â_U}Ċ}¢pczfþg¤ÇòAVM\"], [\"@@©KA·³CQ±Á«³BUƑ¹AtćOwD]JiØSm¯b£ylXHËÑ±H«C^õľAÅ§¤É¥ïyuǙuA¢^{ÌC´­¦ŷJ£^[ª¿ĕ~ƇN skóā¹¿ï]ă~÷O§­@Vm¡Qđ¦¢Ĥ{ºjÔª¥nf´~Õo×ÛąMąıuZmZcÒ ĲĪ²SÊǄŶ¨ƚCÖŎªQØ¼rŭ­«}NÏürÊ¬mjr@ĘrTW ­SsdHzƓ^ÇÂyUi¯DÅYlŹu{hT}mĉ¹¥ěDÿë©ıÓ[Oº£¥ótł¹MÕƪ`PDiÛU¾ÅâìUñBÈ£ýhedy¡oċ`pfmjP~kZaZsÐd°wj§@Ĵ®w~^kÀÅKvNmX\\\\¨aŃqvíó¿F¤¡@ũÑVw}S@j}¾«pĂrªg àÀ²NJ¶¶DôK|^ª°LX¾ŴäPĪ±£EXd^¶ĲÞÜ~u¸ǔMRhsRe`ÄofIÔ\\\\Ø  ićymnú¨cj ¢»GČìƊÿÐ¨XeĈĀ¾Oð Fi ¢|[jVxrIQ_EzAN¦zLU`cªxOTu RLÄ¢dVi`p˔vŎµªÉF~Ød¢ºgİàw¸Áb[¦Zb¦z½xBĖ@ªpºlS¸Ö\\\\Ĕ[N¥ˀmĎăJ\\\\ŀ`ňSÚĖÁĐiOĜ«BxDõĚivSÌ}iùÜnÐºG{p°M´wÀÒzJ²ò¨ oTçüöoÛÿñőĞ¤ùTz²CȆȸǎŪƑÐc°dPÎğË¶[È½u¯½WM¡­ÉB·rínZÒ `¨GA¾\\\\pēXhÃRC­üWGġuTé§ŎÑ©ò³I±³}_EÃħg®ęisÁPDmÅ{b[RÅs·kPŽƥóRoOV~]{g\\\\êYƪ¦kÝbiċƵGZ»Ěõó·³vŝ£ø@pyö_ëIkÑµbcÑ§y×dYØªiþ¨[]f]Ņ©C}ÁN»hĻħƏĩ\"]],\n        \"encodeOffsets\": [[[115640, 30489]], [[112543, 27312]], [[116690, 26230]]]\n      },\n      \"properties\": {\n        \"cp\": [112.982279, 28.19409],\n        \"name\": \"湖南\",\n        \"childNum\": 3\n      }\n    }, {\n      \"id\": \"440000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [[\"@@QdAua\"], [\"@@lxDLo\"], [\"@@sbhNLo\"], [\"@@Ă ā\"], [\"@@WltO[[\"], [\"@@Kr]S\"], [\"@@eI]y\"], [\"@@I|Mym\"], [\"@@Û³LS¼Y\"], [\"@@nvºBëui©`¾\"], [\"@@zdÛJw®\"], [\"@@°¯\"], [\"@@a yAª¸ËJIxØ@ĀHAmÃV¡ofuo\"], [\"@@sŗÃÔėAƁZÄ ~°ČPäh\"], [\"@@¶ÝÌvmĞh­ıQ\"], [\"@@HdSjĒ¢D}waru«ZqadYM\"], [\"@@el\\\\LqqU\"], [\"@@~rMo\\\\\"], [\"@@f^C\"], [\"@@øPªoj÷ÍÝħXČx°Q¨ıXNv\"], [\"@@gÇƳo[~tly\"], [\"@@EÆC¿\"], [\"@@OP\"], [\"@@wđógĝ[³¡VÙæÅöMÌ³¹pÁaËýý©D©ÜJŹƕģGą¤{ÙūÇO²«BƱéAÒĥ¡«BhlmtÃPµyU¯ucd·w_bŝcīímGO|KPȏŹãŝIŕŭŕ@Óoo¿ē±ß}ŭĲWÈCőâUâǙIğŉ©IĳE×Á³AówXJþ±ÌÜÓĨ£L]ĈÙƺZǾĆĖMĸĤfÎĵlŨnÈĐtFFĤêk¶^k°f¶g}®Faf`vXŲxl¦ÔÁ²¬Ð¦pqÊÌ²iXØRDÎ}Ä@ZĠsx®AR~®ETtĄZƈfŠŠHâÒÐAµ\\\\S¸^wĖkRzalŜ|E¨ÈNĀňZTpBh£\\\\ĎƀuXĖtKL¶G|»ĺEļĞ~ÜĢÛĊrOÙîvd]n¬VÊĜ°RÖpMƂªFbwEÀ©\\\\¤]ŸI®¥D³|Ë]CöAŤ¦æ´¥¸Lv¼¢ĽBaôF~®²GÌÒEYzk¤°ahlVÕI^CxĈPsBƒºV¸@¾ªR²ĨN]´_eavSivc}p}Đ¼ƌkJÚe th_¸ ºx±ò_xNË²@ă¡ßH©Ùñ}wkNÕ¹ÇO½¿£ĕ]ly_WìIÇª`uTÅxYĒÖ¼kÖµMjJÚwn\\\\hĒv]îh|ÈƄøèg¸Ķß ĉĈWb¹ƀdéĘNTtP[öSvrCZaGubo´ŖÒÇĐ~¡zCIözx¢PnÈñ @ĥÒ¦]ƞV}³ăĔñiiÄÓVépKG½ÄÓávYoC·sitiaÀyŧÎ¡ÈYDÑům}ý|m[węõĉZÅxUO}÷N¹³ĉo_qtăqwµŁYÙǝŕ¹tïÛUÃ¯mRCºĭ|µÕÊK½Rē ó]GªęAx»HO£|ām¡diď×YïYWªŉOeÚtĐ«zđ¹TāúEá²\\\\ķÍ}jYàÙÆſ¿Çdğ·ùTßÇţʄ¡XgWÀǇğ·¿ÃOj YÇ÷Qěi\"]],\n        \"encodeOffsets\": [[[117381, 22988]], [[116552, 22934]], [[116790, 22617]], [[116973, 22545]], [[116444, 22536]], [[116931, 22515]], [[116496, 22490]], [[116453, 22449]], [[113301, 21439]], [[118726, 21604]], [[118709, 21486]], [[113210, 20816]], [[115482, 22082]], [[113171, 21585]], [[113199, 21590]], [[115232, 22102]], [[115739, 22373]], [[115134, 22184]], [[113056, 21175]], [[119573, 21271]], [[119957, 24020]], [[115859, 22356]], [[116561, 22649]], [[116285, 22746]]]\n      },\n      \"properties\": {\n        \"cp\": [113.280637, 23.125178],\n        \"name\": \"广东\",\n        \"childNum\": 24\n      }\n    }, {\n      \"id\": \"450000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [[\"@@H TQ§A\"], [\"@@ĨÊªLƊDÎĹĐCǦė¸zÚGn£¾rªŀÜt¬@ÖÚSx~øOŒŶÐÂæȠ\\\\ÈÜObĖw^oÞLf¬°bI lTØBÌF£Ć¹gñĤaYt¿¤VSñK¸¤nM¼JE±½¸ñoÜCƆæĪ^ĚQÖ¦^f´QüÜÊz¯lzUĺš@ìp¶n]sxtx¶@~ÒĂJb©gk{°~c°`Ô¬rV\\\\la¼¤ôá`¯¹LCÆbxEræOv[H­[~|aB£ÖsºdAĐzNÂðsÞÆĤªbab`ho¡³F«èVlo¤ÔRzpp®SĪº¨ÖºNĳd`a¦¤F³ºDÎńĀìCĜº¦Ċ~nS|gźvZkCÆj°zVÈÁƔ]LÊFZgčP­kini«qÇczÍY®¬Ů»qR×ō©DÕ§ƙǃŵTÉĩ±ıdÑnYYĲvNĆĆØÜ Öp}e³¦m©iÓ|¹ħņ|ª¦QF¢Â¬ʖovg¿em^ucà÷gÕuíÙćĝ}FĻ¼Ĺ{µHKsLSđƃrč¤[AgoSŇYMÿ§Ç{FśbkylQxĕ]T·¶[BÑÏGáşşƇeăYSs­FQ}­BwtYğÃ@~CÍQ ×WjË±rÉ¥oÏ ±«ÓÂ¥kwWűmcih³K~µh¯e]lµélEģEďsmÇŧē`ãògK_ÛsUʝćğ¶höO¤Ǜn³c`¡y¦CezYwa[ďĵűMę§]XÎ_íÛ]éÛUćİÕBƣ±dy¹T^dûÅÑŦ·PĻþÙ`K¦¢ÍeĥR¿³£[~äu¼dltW¸oRM¢ď\\\\z}Æzdvň{ÎXF¶°Â_ÒÂÏL©ÖTmu¼ãlīkiqéfA·Êµ\\\\őDc¥ÝFyÔćcűH_hLÜêĺĐ¨c}rn`½Ì@¸¶ªVLhŒ\\\\Ţĺk~Ġið°|gtTĭĸ^xvKVGréAébUuMJVÃO¡qĂXËSģãlýà_juYÛÒBG^éÖ¶§EGÅzěƯ¤EkN[kdåucé¬dnYpAyČ{`]þ¯TbÜÈk¡ĠvàhÂƄ¢Jî¶²\"]],\n        \"encodeOffsets\": [[[111707, 21520]], [[107619, 25527]]]\n      },\n      \"properties\": {\n        \"cp\": [108.320004, 22.82402],\n        \"name\": \"广西\",\n        \"childNum\": 2\n      }\n    }, {\n      \"id\": \"460000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\"@@¦Ŝil¢XƦƞòïè§ŞCêɕrŧůÇąĻõ·ĉ³œ̅kÇm@ċȧŧĥĽʉ­ƅſȓÒË¦ŝE}ºƑ[ÍĜȋ gÎfǐÏĤ¨êƺ\\\\Ɔ¸ĠĎvʄȀÐ¾jNðĀÒRZǆzÐŘÎ°H¨Ƣb²_Ġ \"],\n        \"encodeOffsets\": [[112750, 20508]]\n      },\n      \"properties\": {\n        \"cp\": [110.33119, 20.031971],\n        \"name\": \"海南\",\n        \"childNum\": 1\n      }\n    }, {\n      \"id\": \"510000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [[\"@@LqKr\"], [\"@@[ĻéV£_ţġñpG réÏ·~ąSfy×Í·ºſƽiÍıƣıĻmHH}siaX@iÇ°ÁÃ×t«­T¤JJJyJÈ`Ohß¦¡uËhIyCjmÿwZGTiSsOB²fNmsPa{M{õE^Hj}gYpaeu¯oáwHjÁ½M¡pMuåmni{fk\\\\oÎqCwEZ¼KĝAy{m÷LwO×SimRI¯rKõBS«sFe]fµ¢óY_ÆPRcue°Cbo×bd£ŌIHgtrnyPt¦foaXďxlBowz_{ÊéWiêEGhÜ¸ºuFĈIxf®Y½ĀǙ]¤EyF²ċw¸¿@g¢§RGv»áW`ÃĵJwi]t¥wO­½a[×]`Ãi­üL¦LabbTÀåc}ÍhÆh®BHî|îºÉk­¤Sy£ia©taį·Ɖ`ō¥UhOĝLk}©Fos´JmµlŁuønÑJWÎªYÀïAetTŅÓGË«bo{ıwodƟ½OġÜÂµxàNÖ¾P²§HKv¾]|BÆåoZ`¡Ø`ÀmºĠ~ÌÐ§nÇ¿¤]wğ@srğu~Io[é±¹ ¿ſđÓ@qg¹zƱřaí°KtÇ¤V»Ã[ĩǭƑ^ÇÓ@áťsZÏÅĭƋěpwDóÖáŻneQËq·GCœýS]x·ýq³OÕ¶Qzßti{řáÍÇWŝŭñzÇWpç¿JXĩè½cFÂLiVjx}\\\\NŇĖ¥GeJA¼ÄHfÈu~¸Æ«dE³ÉMA|bÒćhG¬CMõƤąAvüVéŀ_VÌ³ĐwQj´·ZeÈÁ¨X´Æ¡Qu·»ÕZ³ġqDoy`L¬gdp°şp¦ėìÅĮZ°Iähzĵf²å ĚÑKpIN|Ñz]ń·FU×é»R³MÉ»GM«kiér}Ã`¹ăÞmÈnÁîRǀ³ĜoİzŔwǶVÚ£À]ɜ»ĆlƂ²ĠþTº·àUȞÏʦ¶I«dĽĢdĬ¿»Ĕ×h\\\\c¬ä²GêëĤł¥ÀǿżÃÆMº}BÕĢyFVvwxBèĻĒ©ĈtCĢɽŠȣ¦āæ·HĽîôNÔ~^¤Ɗu^s¼{TA¼ø°¢İªDè¾Ň¶ÝJ®Z´ğ~Sn|ªWÚ©òzPOȸbð¢|øĞŒQìÛÐ@ĞǎRS¤Á§di´ezÝúØã]HqkIþËQÇ¦ÃsÇ¤[E¬ÉŪÍxXƒ·ÖƁİlƞ¹ª¹|XÊwnÆƄmÀêErĒtD®ċæcQE®³^ĭ¥©l}äQtoŖÜqÆkµªÔĻĴ¡@Ċ°B²Èw^^RsºTĀ£ŚæQPJvÄz^Đ¹Æ¯fLà´GC²dt­ĀRt¼¤ĦOðğfÔðDŨŁĞƘïPÈ®âbMüÀXZ ¸£@Å»»QÉ­]dsÖ×_Í_ÌêŮPrĔĐÕGĂeZÜîĘqBhtO ¤tE[h|YÔZśÎs´xº±Uñt|OĩĠºNbgþJy^dÂY Į]Řz¦gC³R`Āz¢Aj¸CL¤RÆ»@­Ŏk\\\\Ç´£YW}z@Z}Ã¶oû¶]´^NÒ}èNªPÍy¹`S°´ATeVamdUĐwʄvĮÕ\\\\uÆŗ¨Yp¹àZÂmWh{á}WØǍÉüwga§áCNęÎ[ĀÕĪgÖÉªXøx¬½Ů¦¦[NÎLÜUÖ´òrÙŠxR^JkĳnDX{U~ET{ļº¦PZcjF²Ė@pg¨B{u¨ŦyhoÚD®¯¢ WòàFÎ¤¨GDäz¦kŮPġqË¥À]eâÚ´ªKxīPÖ|æ[xÃ¤JÞĥsNÖ½I¬nĨY´®ÐƐmDŝuäđđEbee_v¡}ìęǊē}qÉåT¯µRs¡M@}ůaa­¯wvƉåZw\\\\Z{åû^\"]],\n        \"encodeOffsets\": [[[108815, 30935]], [[110617, 31811]]]\n      },\n      \"properties\": {\n        \"cp\": [104.065735, 30.659462],\n        \"name\": \"四川\",\n        \"childNum\": 2\n      }\n    }, {\n      \"id\": \"520000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [[\"@@G\\\\lY£in\"], [\"@@q|mc¯tÏVSÎ\"], [\"@@hÑ£IsNgßHHªķÃh_¹¡ĝÄ§ń¦uÙùgS¯JH|sÝÅtÁïyMDč»eÕtA¤{b\\\\}G®u\\\\åPFqwÅaDK°ºâ_£ùbµmÁÛĹM[q|hlaªāI}Ñµ@swtwm^oµDéĽŠyVky°ÉûÛR³e¥]RÕěħ[ƅåÛDpJiVÂF²I»mN·£LbÒYbWsÀbpkiTZĄă¶Hq`ĥ_J¯ae«KpÝx]aĕÛPÇȟ[ÁåŵÏő÷Pw}TÙ@Õs«ĿÛq©½m¤ÙH·yǥĘĉBµĨÕnđ]K©œáGçş§ÕßgǗĦTèƤƺ{¶ÉHÎd¾ŚÊ·OÐjXWrãLyzÉAL¾ę¢bĶėy_qMĔąro¼hĊw¶øV¤w²Ĉ]ÊKx|`ź¦ÂÈdrcÈbe¸`I¼čTF´¼Óýȃr¹ÍJ©k_șl³´_pĐ`oÒh¶pa^ÓĔ}D»^Xy`d[KvJPhèhCrĂĚÂ^Êƌ wZL­Ġ£ÁbrzOIlMMĪŐžËr×ÎeŦtw|¢mKjSǘňĂStÎŦEtqFT¾Eì¬¬ôxÌO¢ K³ŀºäYPVgŎ¦ŊmŞ¼VZwVlz¤£Tl®ctĽÚó{G­AÇge~Îd¿æaSba¥KKûj®_Ä^\\\\Ø¾bP®¦x^sxjĶI_Ä Xâ¼Hu¨Qh¡À@Ëô}±GNìĎlT¸`V~R°tbÕĊ`¸úÛtÏFDu[MfqGH·¥yAztMFe|R_GkChZeÚ°tov`xbDnÐ{E}ZèxNEÞREn[Pv@{~rĆAB§EO¿|UZ~ìUf¨J²ĂÝÆsªB`s¶fvö¦Õ~dÔq¨¸º»uù[[§´sb¤¢zþF¢ÆÀhÂW\\\\ıËIÝo±ĭŠ£þÊs}¡R]ěDg´VG¢j±®èºÃmpU[Áëº°rÜbNu¸}º¼`niºÔXĄ¤¼ÔdaµÁ_ÃftQQgR·Ǔv}Ý×ĵ]µWc¤F²OĩųãW½¯K©]{LóµCIµ±Mß¿h©āq¬o½~@i~TUxŪÒ¢@£ÀEîôruńb[§nWuMÆLl¿]x}ĳ­½\"]],\n        \"encodeOffsets\": [[[112158, 27383]], [[112105, 27474]], [[112095, 27476]]]\n      },\n      \"properties\": {\n        \"cp\": [106.713478, 26.578343],\n        \"name\": \"贵州\",\n        \"childNum\": 3\n      }\n    }, {\n      \"id\": \"530000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\"@@[ùx½}ÑRHYīĺûsÍniEoã½Ya²ė{c¬ĝgĂsAØÅwďõzFjw}«Dx¿}Uũlê@HÅ­F¨ÇoJ´Ónũuą¡Ã¢pÒÅØ TF²xa²ËXcÊlHîAßËŁkŻƑŷÉ©hW­æßUËs¡¦}teèÆ¶StÇÇ}Fd£jĈZĆÆ¤Tč\\\\D}O÷£U§~ŃGåŃDĝ¸Tsd¶¶Bª¤u¢ŌĎo~t¾ÍŶÒtD¦ÚiôözØX²ghįh½Û±¯ÿm·zR¦Ɵ`ªŊÃh¢rOÔ´£Ym¼èêf¯ŪĽncÚbw\\\\zlvWªâ ¦gmĿBĹ£¢ƹřbĥkǫßeeZkÙIKueT»sVesbaĕ  ¶®dNĄÄpªy¼³BE®lGŭCǶwêżĔÂepÍÀQƞpC¼ŲÈ­AÎô¶RäQ^Øu¬°_Èôc´¹ò¨PÎ¢hlĎ¦´ĦÆ´sâÇŲPnÊD^¯°Upv}®BPÌªjǬxSöwlfòªvqĸ|`H­viļndĜ­Ćhňem·FyÞqóSį¯³X_ĞçêtryvL¤§z¦c¦¥jnŞklD¤øz½ĜàĂŧMÅ|áƆàÊcðÂFÜáŢ¥\\\\\\\\ºİøÒÐJĴîD¦zK²ǏÎEh~CD­hMn^ÌöÄ©ČZÀaüfɭyœpį´ěFűk]Ôě¢qlÅĆÙa¶~ÄqêljN¬¼HÊNQ´ê¼VØ¸E^ŃÒyM{JLoÒęæe±Ķygã¯JYÆĭĘëo¥Šo¯hcK«z_prC´ĢÖY¼ v¸¢RÅW³Â§fÇ¸Yi³xR´ďUË`êĿUûuĆBƣöNDH«ĈgÑaB{ÊNF´¬c·Åv}eÇÃGB»If¦HňĕM~[iwjUÁKE¾dĪçWIèÀoÈXòyŞŮÈXâÎŚj|àsRyµÖPr´þ ¸^wþTDŔHr¸RÌmfżÕâCôoxĜƌÆĮÐYtâŦÔ@]ÈǮƒ\\\\Ī¼Ä£UsÈ¯LbîƲŚºyhr@ĒÔƀÀ²º\\\\êpJ}ĠvqtĠ@^xÀ£È¨mËÏğ}n¹_¿¢×Y_æpÅA^{½Lu¨GO±Õ½ßM¶wÁĢÛPƢ¼pcĲx|apÌ¬HÐŊSfsðBZ¿©XÏÒKk÷Eû¿SrEFsÕūkóVǥŉiTL¡n{uxţÏhôŝ¬ğōNNJkyPaqÂğ¤K®YxÉƋÁ]āęDqçgOgILu\\\\_gz]W¼~CÔē]bµogpÑ_oď`´³Țkl`IªºÎȄqÔþ»E³ĎSJ»_f·adÇqÇc¥Á_Źw{L^É±ćxU£µ÷xgĉp»ĆqNē`rĘzaĵĚ¡K½ÊBzyäKXqiWPÏÉ¸½řÍcÊG|µƕƣGË÷k°_^ý|_zċBZocmø¯hhcæ\\\\lMFlư£ĜÆyHF¨µêÕ]HAàÓ^it `þßäkĤÎT~Wlÿ¨ÔPzUCNVv [jâôDôď[}z¿msSh¯{jïğl}šĹ[őgK©U·µË@¾m_~q¡f¹ÅË^»f³ø}Q¡ÖË³gÍ±^Ç\\\\ëÃA_¿bWÏ[¶ƛé£F{īZgm@|kHǭƁć¦UĔť×ë}ǝeďºȡȘÏíBÉ£āĘPªĳ¶ŉÿy©nď£G¹¡I±LÉĺÑdĉÜW¥}gÁ{aqÃ¥aıęÏZï`\"],\n        \"encodeOffsets\": [[104636, 22969]]\n      },\n      \"properties\": {\n        \"cp\": [102.712251, 25.040609],\n        \"name\": \"云南\",\n        \"childNum\": 1\n      }\n    }, {\n      \"id\": \"540000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\"@@ÂhľxŖxÒVºÅâAĪÝȆµę¯Ňa±r_w~uSÕňqOj]ɄQ£ZUDûoY»©M[L¼qãË{VÍçWVi]ë©Ä÷àyƛhÚU°adcQ~Mx¥cc¡ÙaSyFÖk­uRýq¿ÔµQĽ³aG{¿FµëªéĜÿª@¬·K·àariĕĀ«V»ŶĴūgèLǴŇƶaftèBŚ£^âǐÝ®M¦ÁǞÿ¬LhJ¾óƾÆºcxwf]Y´¦|QLn°adĊ\\\\¨oǀÍŎ´ĩĀd`tÊQŞŕ|¨C^©Ĉ¦¦ÎJĊ{ëĎjª²rÐl`¼Ą[t|¦Stè¾PÜK¸dƄı]s¤î_v¹ÎVòŦj£Əsc¬_Ğ´|Ł¦Av¦w`ăaÝaa­¢e¤ı²©ªSªÈMĄwÉØŔì@T¤Ę\\\\õª@þo´­xA sÂtŎKzó´ÇĊµ¢r^nĊ­Æ¬×üG¢³ {âĊ]G~bÀgVjzlhǶfOfdªB]pjTOtĊn¤}®¦Č¥d¢¼»ddY¼t¢eȤJ¤}Ǿ¡°§¤AÐlc@ĝsªćļđAçwxUuzEÖġ~AN¹ÄÅȀŻ¦¿ģŁéì±Hãd«g[Ø¼ēÀcīľġ¬cJµÐʥVȝ¸ßS¹ý±ğkƁ¼ą^ɛ¤Ûÿb[}¬ōõÃ]ËNm®g@Bg}ÍF±ǐyL¥íCIĳÏ÷Ñį[¹¦[âšEÛïÁÉdƅß{âNÆāŨß¾ě÷yC£k­´ÓH@Â¹TZ¥¢į·ÌAÐ§®Zcv½Z­¹|ÅWZqgW|ieZÅYVÓqdqbc²R@c¥Rã»GeeƃīQ}J[ÒK¬Ə|oėjġĠÑN¡ð¯EBčnwôɍėª²CλŹġǝʅįĭạ̃ūȹ]ΓͧgšsgȽóϧµǛęgſ¶ҍć`ĘąŌJÞä¤rÅň¥ÖÁUětęuůÞiĊÄÀ\\\\Æs¦ÓRb|Â^řÌkÄŷ¶½÷f±iMÝ@ĥ°G¬ÃM¥n£Øąğ¯ß§aëbéüÑOčk£{\\\\eµª×MÉfm«Ƒ{Å×Gŏǩãy³©WÑăû··Qòı}¯ãIéÕÂZ¨īès¶ZÈsæĔTŘvgÌsN@îá¾ó@ÙwU±ÉTå»£TđWxq¹Zobs[×¯cĩvėŧ³BM|¹kªħ¥TzNYnÝßpęrñĠĉRS~½ěVVµõ«M££µBĉ¥áºae~³AuĐh`Ü³ç@BÛïĿa©|z²Ý¼D£àč²ŸIûI āóK¥}rÝ_Á´éMaň¨~ªSĈ½½KÙóĿeƃÆB·¬ën×W|Uº}LJrƳlŒµ`bÔ`QÐÓ@s¬ñIÍ@ûws¡åQÑßÁ`ŋĴ{ĪTÚÅTSÄ³Yo|Ç[Ç¾µMW¢ĭiÕØ¿@MhpÕ]jéò¿OƇĆƇpêĉâlØwěsǩĵ¸cbU¹ř¨WavquSMzeo_^gsÏ·¥Ó@~¯¿RiīB\\\\qTGªÇĜçPoÿfñòą¦óQīÈáPābß{ZŗĸIæÅhnszÁCËìñÏ·ąĚÝUm®ó­L·ăUÈíoù´Êj°ŁŤ_uµ^°ìÇ@tĶĒ¡ÆM³Ģ«İĨÅ®ğRāðggheÆ¢zÊ©Ô\\\\°ÝĎz~ź¤PnMĪÖB£kné§żćĆKĒ°¼L¶èâz¨u¦¥LDĘz¬ýÎmĘd¾ßFzhg²Fy¦ĝ¤ċņbÎ@yĄæm°NĮZRÖíJ²öLĸÒ¨Y®ƌÐVàtt_ÚÂyĠz]ŢhzĎ{ÂĢXc|ÐqfO¢¤ögÌHNPKŖUú´xx[xvĐCûĀìÖT¬¸^}Ìsòd´_KgžLĴÀBon|H@Êx¦BpŰŌ¿fµƌA¾zǈRx¶FkĄźRzŀ~¶[´HnªVƞuĒ­È¨ƎcƽÌm¸ÁÈM¦x͊ëÀxǆBú^´W£dkɾĬpw˂ØɦļĬIŚÊnŔa¸~J°îlɌxĤÊÈðhÌ®gT´øàCÀ^ªerrƘd¢İP|Ė ŸWªĦ^¶´ÂLaT±üWƜǀRÂŶUńĖ[QhlLüAÜ\\\\qRĄ©\"],\n        \"encodeOffsets\": [[90849, 37210]]\n      },\n      \"properties\": {\n        \"cp\": [91.132212, 29.660361],\n        \"name\": \"西藏\",\n        \"childNum\": 1\n      }\n    }, {\n      \"id\": \"610000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\"@@p¢ȮµûGĦ}Ħðǚ¶òƄjɂz°{ºØkÈęâ¦jªBg\\\\ċ°s¬]jú EȌǆ¬stRÆdĠİwÜ¸ôW¾ƮłÒ_{Ìû¼jº¹¢GǪÒ¯ĘZ`ºŊecņą~BÂgzpâēòYǠȰÌTÎ¨ÂW|fcă§uF@N¢XLRMº[ğȣſï|¥Jkc`sŉǷY¹W@µ÷Kãï³ÛIcñ·VȋÚÒķø©þ¥yÓğęmWµÎumZyOŅƟĥÓ~sÑL¤µaÅY¦ocyZ{y c]{Ta©`U_Ěē£ωÊƍKùK¶ȱÝƷ§{û»ÅÁȹÍéuĳ|¹cÑdìUYOuFÕÈYvÁCqÓTǢí§·S¹NgV¬ë÷Át°DØ¯C´ŉƒópģ}ċcEËFéGU¥×K§­¶³BČ}C¿åċ`wġB·¤őcƭ²ő[Å^axwQOÿEËßŚĤNĔwƇÄńwĪ­o[_KÓª³ÙnKÇěÿ]ďă_d©·©Ýŏ°Ù®g]±ßå¬÷m\\\\iaǑkěX{¢|ZKlçhLtŇîŵœè[É@ƉĄEtƇÏ³­ħZ«mJ×¾MtÝĦ£IwÄå\\\\Õ{OwĬ©LÙ³ÙgBƕŀrÌĢŭO¥lãyC§HÍ£ßEñX¡­°ÙCgpťzb`wIvA|§hoĕ@E±iYd¥OĻ¹S|}F@¾oAO²{tfÜ¢FǂÒW²°BĤh^Wx{@¬­F¸¡ķn£P|ªĴ@^ĠĈæbÔc¶lYi^MicĎ°Â[ävï¶gv@ÀĬ·lJ¸sn|¼u~a]ÆÈtŌºJpþ£KKf~¦UbyäIĺãnÔ¿^­ŵMThĠÜ¤ko¼Ŏìąǜh`[tRd²Ĳ_XPrɲlXiL§à¹H°Ȧqº®QCbAŌJ¸ĕÚ³ĺ§ `d¨YjiZvRĺ±öVKkjGȊÄePĞZmļKÀ[`ösìhïÎoĬdtKÞ{¬èÒÒBÔpĲÇĬJŊ¦±J«Y§@·pHµàåVKepWftsAÅqC·¬ko«pHÆuK@oHĆÛķhxenS³àǍrqƶRbzy¸ËÐl¼EºpĤ¼x¼½~Ğà@ÚüdK^mÌSj\"],\n        \"encodeOffsets\": [[110234, 38774]]\n      },\n      \"properties\": {\n        \"cp\": [108.948024, 34.263161],\n        \"name\": \"陕西\",\n        \"childNum\": 1\n      }\n    }, {\n      \"id\": \"620000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [[\"@@VuUv\"], [\"@@ũEĠtt~nkh`Q¦ÅÄÜdwAb×ĠąJ¤DüègĺqBqj°lI¡ĨÒ¤úSHbjÎB°aZ¢KJO[|A£Dx}NĂ¬HUnrk kp¼Y kMJn[aGáÚÏ[½rc}aQxOgsPMnUsncZsKúvAtÞġ£®ĀYKdnFw¢JE°Latf`¼h¬we|Æbj}GA·~W`¢MC¤tL©Ĳ°qdfObÞĬ¹ttu`^ZúE`[@Æsîz®¡CƳƜG²R¢RmfwĸgÜą G@pzJM½mhVy¸uÈÔO±¨{LfæU¶ßGĂq\\\\ª¬²I¥IŉÈīoıÓÑAçÑ|«LÝcspīðÍgtë_õ\\\\ĉñLYnĝgRǡÁiHLlõUĹ²uQjYi§Z_c¨´ĹĖÙ·ŋIaBD­R¹ȥr¯GºßK¨jWkɱOqWĳ\\\\a­Q\\\\sg_ĆǛōëp»£lğÛgSŶN®À]ÓämĹãJaz¥V}Le¤Lýo¹IsŋÅÇ^bz³tmEÁ´a¹cčecÇNĊãÁ\\\\č¯dNj]jZµkÓdaćå]ğĳ@ ©O{¤ĸm¢E·®«|@Xwg]Aģ±¯XǁÑǳªcwQÚŝñsÕ³ÛV_ý¥\\\\ů¥©¾÷w©WÕÊĩhÿÖÁRo¸V¬âDb¨hûxÊ×ǌ~Zâg|XÁnßYoº§ZÅŘv[ĭÖʃuďxcVbnUSfB¯³_TzºÎO©çMÑ~M³]µ^püµÄY~y@X~¤Z³[Èōl@®Å¼£QK·Di¡ByÿQ_´D¥hŗy^ĭÁZ]cIzýah¹MĪğPs{ò²Vw¹t³ŜË[Ñ}X\\\\gsF£sPAgěp×ëfYHāďÖqēŭOÏëdLü\\\\it^c®RÊº¶¢H°mrY£B¹čIoľu¶uI]vģSQ{UŻÅ}QÂ|Ì°ƅ¤ĩŪU ęĄÌZÒ\\\\v²PĔ»ƢNHĂyAmƂwVm`]ÈbH`Ì¢²ILvĜH®¤Dlt_¢JJÄämèÔDëþgºƫaʎÌrêYi~ Îİ¤NpÀA¾Ĕ¼bð÷®üszMzÖĖQdȨýv§Tè|ªHÃ¾a¸|Ð ƒwKĢx¦ivr^ÿ ¸l öæfƟĴ·PJv}n\\\\h¹¶v·À|\\\\ƁĚN´ĜçèÁz]ġ¤²¨QÒŨTIlªťØ}¼˗ƦvÄùØEÂ«FïËIqōTvāÜŏíÛßÛVj³âwGăÂíNOPìyV³ŉĖýZso§HÑiYw[ß\\\\X¦¥c]ÔƩÜ·«jÐqvÁ¦m^ċ±R¦΋ƈťĚgÀ»IïĨʗƮ°ƝĻþÍAƉſ±tÍEÕÞāNUÍ¡\\\\ſčåÒʻĘm ƭÌŹöʥëQ¤µ­ÇcƕªoIýIÉ_mkl³ăƓ¦j¡YzŇi}Msßõīʋ }ÁVm_[n}eı­Uĥ¼ªI{Î§DÓƻėojqYhĹT©oūĶ£]ďxĩǑMĝq`B´ƃ˺Чç~²ņj@¥@đ´ί}ĥtPńÇ¾V¬ufÓÉCtÓ̻¹£G³]ƖƾŎĪŪĘ̖¨ʈĢƂlɘ۪üºňUðǜȢƢż̌ȦǼĤŊɲĖÂ­Kq´ï¦ºĒǲņɾªǀÞĈĂD½ĄĎÌŗĞrôñnN¼â¾ʄľԆ|Ǆ֦ज़ȗǉ̘̭ɺƅêgV̍ʆĠ·ÌĊv|ýĖÕWĊǎÞ´õ¼cÒÒBĢ͢UĜð͒s¨ňƃLĉÕÝ@ɛƯ÷¿Ľ­ĹeȏĳëCȚDŲyê×Ŗyò¯ļcÂßYtÁƤyAã˾J@ǝrý@¤rz¸oP¹ɐÚyáHĀ[JwcVeȴÏ»ÈĖ}ƒŰŐèȭǢόĀƪÈŶë;Ñ̆ȤМľĮEŔĹŊũ~ËUă{ĻƹɁύȩþĽvĽƓÉ@ēĽɲßǐƫʾǗĒpäWÐxnsÀ^ƆwW©¦cÅ¡Ji§vúF¶¨c~c¼īeXǚ\\\\đ¾JwÀďksãAfÕ¦L}waoZD½Ml«]eÒÅaÉ²áo½FõÛ]ĻÒ¡wYR£¢rvÓ®y®LFLzĈôe]gx}|KK}xklL]c¦£fRtív¦PĤoH{tK\"]],\n        \"encodeOffsets\": [[[108619, 36299]], [[108589, 36341]]]\n      },\n      \"properties\": {\n        \"cp\": [103.823557, 36.058039],\n        \"name\": \"甘肃\",\n        \"childNum\": 2\n      }\n    }, {\n      \"id\": \"630000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [[\"@@InJm\"], [\"@@CÆ½OŃĦsΰ~Ē³¦@@Ņi±è}ШƄ˹A³r_ĞǒNĪĐw¤^ŬĵªpĺSZgrpiƼĘÔ¨C|ÍJ©Ħ»®VĲ~f\\\\m `UnÂ~ʌĬàöNt~ňjy¢ZiƔ¥Ąk´nl`JÊJþ©pdƖ®È£¶ìRʦźõƮËnʼėæÑƀĎ[¢VÎĂMÖÝÎF²sƊƀÎBļýƞ¯ʘƭðħ¼Jh¿ŦęΌƇ¥²Q]Č¥nuÂÏri¸¬ƪÛ^Ó¦d¥[Wàx\\\\ZjÒ¨GtpþYŊĕ´zUOëPîMĄÁxH´áiÜUàîÜŐĂÛSuŎrJðÌ¬EFÁú×uÃÎkrĒ{V}İ«O_ÌËĬ©ÓŧSRÑ±§Ģ£^ÂyèçěM³Ƃę{[¸¿uºµ[gt£¸OƤĿéYõ·kĀq]juw¥DĩƍõÇPéÄ½G©ã¤GuȧþRcÕĕNyyût­øï»a½ē¿BMoį£Íj}éZËqbʍƬh¹ìÿÓAçãnIÃ¡I`ks£CG­ěUy×Cy@¶ʡÊBnāzGơMē¼±O÷õJËĚăVĪũƆ£¯{ËL½ÌzżVR|ĠTbuvJvµhĻĖHAëáa­OÇðñęNwœľ·LmI±íĠĩPÉ×®ÿscB³±JKßĊ«`ađ»·QAmOVţéÿ¤¹SQt]]Çx±¯A@ĉĳ¢Óļ©l¶ÅÛrŕspãRk~¦ª]Į­´FRåd­ČsCqđéFn¿ÅƃmÉx{W©ºƝºįkÕƂƑ¸wWūÐ©ÈF£\\\\tÈ¥ÄRÈýÌJ lGr^×äùyÞ³fjc¨£ÂZ|ǓMĝÏ@ëÜőRĝ÷¡{aïȷPu°ËXÙ{©TmĠ}Y³­ÞIňµç½©C¡į÷¯B»|St»]vųs»}MÓ ÿʪƟǭA¡fs»PY¼c¡»¦cċ­¥£~msĉPSi^o©AecPeǵkgyUi¿h}aHĉ^|á´¡HØûÅ«ĉ®]m¡qĉ¶³ÈyôōLÁstB®wn±ă¥HSòė£Së@×œÊăxÇN©©T±ª£Ĳ¡fb®Þbb_Ą¥xu¥B{łĝ³«`dƐt¤ťiñÍUuºí`£^tƃĲc·ÛLO½sç¥Ts{ă\\\\_»kÏ±q©čiìĉ|ÍI¥ć¥]ª§D{ŝŖÉR_sÿc³ĪōƿÎ§p[ĉc¯bKmR¥{³Ze^wx¹dƽÅ½ôIg §Mĕ ƹĴ¿ǣÜÍ]Ý]snåA{eƭ`ǻŊĿ\\\\ĳŬűYÂÿ¬jĖqßb¸L«¸©@ěĀ©ê¶ìÀEH|´bRľÓ¶rÀQþvl®ÕETzÜdb hw¤{LRdcb¯ÙVgƜßzÃôì®^jUèXÎ|UäÌ»rK\\\\ªN¼pZCüVY¤ɃRi^rPŇTÖ}|br°qňbĚ°ªiƶGQ¾²x¦PmlŜ[Ĥ¡ΞsĦÔÏâ\\\\ªÚŒU\\\\f¢N²§x|¤§xĔsZPòʛ²SÐqF`ªVÞŜĶƨVZÌL`¢dŐIqr\\\\oäõFÎ·¤»Ŷ×h¹]ClÙ\\\\¦ďÌį¬řtTӺƙgQÇÓHţĒ´ÃbEÄlbʔC|CŮkƮ[ʼ¬ň´KŮÈΰÌĪ¶ƶlðļATUvdTGº̼ÔsÊDÔveOg\"]],\n        \"encodeOffsets\": [[[105308, 37219]], [[95370, 40081]]]\n      },\n      \"properties\": {\n        \"cp\": [101.778916, 36.623178],\n        \"name\": \"青海\",\n        \"childNum\": 2\n      }\n    }, {\n      \"id\": \"640000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [[\"@@KëÀęĞ«Oęȿȕı]ŉ¡åįÕÔ«ǴõƪĚQÐZhv K°öqÀÑS[ÃÖHƖčËnL]ûcÙß@ĝ¾}w»»oģF¹»kÌÏ·{zP§B­¢íyÅt@@á]Yv_ssģ¼ißĻL¾ġsKD£¡N_X¸}B~HaiÅf{«x»ge_bsKF¯¡IxmELcÿZ¤­ĢÝsuBLùtYdmVtNmtOPhRw~bd¾qÐ\\\\âÙH\\\\bImlNZ»loqlVmGā§~QCw¤{A\\\\PKNY¯bFkC¥sks_Ã\\\\ă«¢ħkJi¯rrAhĹûç£CUĕĊ_ÔBixÅÙĄnªÑaM~ħpOu¥sîeQ¥¤^dkKwlL~{L~hw^ófćKyE­K­zuÔ¡qQ¤xZÑ¢^ļöÜ¾Ep±âbÊÑÆ^fk¬NC¾YpxbK~¥eÖäBlt¿Đx½I[ĒǙWf»Ĭ}d§dµùEuj¨IÆ¢¥dXªƅx¿]mtÏwßRĶX¢͎vÆzƂZò®ǢÌʆCrâºMÞzÆMÒÊÓŊZÄ¾r°Î®Ȉmª²ĈUªĚîøºĮ¦ÌĘk^FłĬhĚiĀĖ¾iİbjÕ\"], [\"@@mfwěwMrŢªv@G\"]],\n        \"encodeOffsets\": [[[109366, 40242]], [[108600, 36303]]]\n      },\n      \"properties\": {\n        \"cp\": [106.278179, 38.46637],\n        \"name\": \"宁夏\",\n        \"childNum\": 2\n      }\n    }, {\n      \"id\": \"650000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\"@@QØĔ²X¨~ǘBºjʐßØvKƔX¨vĊOÃ·¢i@~cĝe_«E}QxgɪëÏÃ@sÅyXoŖ{ô«ŸuXêÎf`C¹ÂÿÐGĮÕĞXŪōŸMźÈƺQèĽôe|¿ƸJR¤ĘEjcUóº¯Ĩ_ŘÁMª÷Ð¥OéÈ¿ÖğǤǷÂFÒzÉx[]­Ĥĝœ¦EP}ûƥé¿İƷTėƫœŕƅƱB»Đ±ēO¦E}`cȺrĦáŖuÒª«ĲπdƺÏØZƴwʄ¤ĖGĐǂZĶèH¶}ÚZצʥĪï|ÇĦMŔ»İĝǈì¥Βba­¯¥ǕǚkĆŵĦɑĺƯxūД̵nơʃĽá½M»òmqóŘĝčË¾ăCćāƿÝɽ©ǱŅ¹đ¥³ðLrÁ®ɱĕģŉǻ̋ȥơŻǛȡVï¹Ň۩ûkɗġƁ§ʇė̕ĩũƽō^ƕUv£ƁQïƵkŏ½ΉÃŭÇ³LŇʻ«ƭ\\\\lŭD{ʓDkaFÃÄa³ŤđÔGRÈƚhSӹŚsİ«ĐË[¥ÚDkº^Øg¼ŵ¸£EÍöůŉT¡c_ËKYƧUśĵÝU_©rETÏʜ±OñtYwē¨{£¨uM³x½şL©Ùá[ÓÐĥ Νtģ¢\\\\śnkOw¥±T»ƷFɯàĩÞáB¹ÆÑUwŕĽw[mG½Èå~Æ÷QyěCFmĭZīŵVÁƿQƛûXS²b½KÏ½ĉS©ŷXĕ{ĕK·¥Ɨcqq©f¿]ßDõU³h­gËÇïģÉɋwk¯í}I·œbmÉřīJɥĻˁ×xoɹīlc¤³Xù]ǅA¿w͉ì¥wÇN·ÂËnƾƍdÇ§đ®ƝvUm©³G\\\\}µĿQyŹlăµEwǇQ½yƋBe¶ŋÀůo¥AÉw@{Gpm¿AĳŽKLh³`ñcËtW±»ÕSëüÿďDu\\\\wwwù³VLŕOMËGh£õP¡erÏd{ġWÁč|yšg^ğyÁzÙs`s|ÉåªÇ}m¢Ń¨`x¥ù^}Ì¥H«YªƅAÐ¹n~ź¯f¤áÀzgÇDIÔ´AňĀÒ¶ûEYospõD[{ù°]uJqU|Soċxţ[õÔĥkŋÞŭZËºóYËüċrw ÞkrťË¿XGÉbřaDü·Ē÷AÃª[ÄäIÂ®BÕĐÞ_¢āĠpÛÄȉĖġDKwbmÄNôfƫVÉviǳHQµâFù­Âœ³¦{YGd¢ĚÜO {Ö¦ÞÍÀP^bƾl[vt×ĈÍEË¨¡Đ~´î¸ùÎhuè`¸HÕŔVºwĠââWò@{ÙNÝ´ə²ȕn{¿¥{l÷eé^eďXj©î\\\\ªÑòÜìc\\\\üqÕ[Č¡xoÂċªbØ­ø|¶ȴZdÆÂońéG\\\\¼C°ÌÆn´nxÊOĨŪƴĸ¢¸òTxÊǪMīĞÖŲÃɎOvʦƢ~FRěò¿ġ~åŊúN¸qĘ[Ĕ¶ÂćnÒPĒÜvúĀÊbÖ{Äî¸~Ŕünp¤ÂH¾ĄYÒ©ÊfºmÔĘcDoĬMŬS¤s²ʘÚžȂVŦ èW°ªB|ĲXŔþÈJĦÆæFĚêYĂªĂ]øªŖNÞüAfɨJ¯ÎrDDĤ`mz\\\\§~D¬{vJÂ«lµĂb¤pŌŰNĄ¨ĊXW|ų ¿¾ɄĦƐMTòP÷fØĶK¢ȝ˔Sô¹òEð­`Ɩ½ǒÂň×äı§ĤƝ§C~¡hlåǺŦŞkâ~}FøàĲaĞfƠ¥Ŕd®U¸źXv¢aƆúŪtŠųƠjdƺƺÅìnrh\\\\ĺ¯äɝĦ]èpĄ¦´LƞĬ´ƤǬ˼Ēɸ¤rºǼ²¨zÌPðŀbþ¹ļD¢¹\\\\ĜÑŚ¶ZƄ³àjĨoâȴLÊȮĐ­ĚăÀêZǚŐ¤qȂ\\\\L¢ŌİfÆs|zºeªÙæ§΢{Ā´ƐÚ¬¨Ĵà²łhʺKÞºÖTiƢ¾ªì°`öøu®Ê¾ãØ\"],\n        \"encodeOffsets\": [[88824, 50096]]\n      },\n      \"properties\": {\n        \"cp\": [87.617733, 43.792818],\n        \"name\": \"新疆\",\n        \"childNum\": 1\n      }\n    }, {\n      \"id\": \"110000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\"@@ĽOÁûtŷmiÍt_H»Ĩ±d`¹­{bwYr³S]§§o¹qGtm_SŧoaFLgQN_dV@Zom_ć\\\\ßcÂ±x¯oœRcfe£o§ËgToÛJíĔóu|wP¤XnO¢ÉŦ¯rNÄā¤zâŖÈRpŢZÚ{GrFt¦Òx§ø¹RóäV¤XdżâºWbwŚ¨Ud®bêņ¾jnŎGŃŶnzÚSeîĜZczî¾i]ÍQaúÍÔiþĩȨWĢü|Ėu[qb[swP@ÅğP¿{\\\\¥A¨ÏÑ¨j¯X\\\\¯MKpA³[Hīu}}\"],\n        \"encodeOffsets\": [[120023, 41045]]\n      },\n      \"properties\": {\n        \"cp\": [116.405285, 39.904989],\n        \"name\": \"北京\",\n        \"childNum\": 1\n      }\n    }, {\n      \"id\": \"120000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\"@@ŬgX§Ü«E¶FÌ¬O_ïlÁgz±AXeµÄĵ{¶]gitgIj·¥îakS¨ÐƎk}ĕ{gBqGf{¿aU^fIư³õ{YıëNĿk©ïËZŏR§òoY×Ógcĥs¡bġ«@dekąI[nlPqCnp{ō³°`{PNdƗqSÄĻNNâyj]äÒD ĬH°Æ]~¡HO¾X}ÐxgpgWrDGpù^LrzWxZ^¨´T\\\\|~@IzbĤjeĊªz£®ĔvěLmV¾Ô_ÈNW~zbĬvG²ZmDM~~\"],\n        \"encodeOffsets\": [[120237, 41215]]\n      },\n      \"properties\": {\n        \"cp\": [117.190182, 39.125596],\n        \"name\": \"天津\",\n        \"childNum\": 1\n      }\n    }, {\n      \"id\": \"310000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [[\"@@ɧư¬EpƸÁxc\"], [\"@@©ª\"], [\"@@MA\"], [\"@@QpİE§ÉC¾\"], [\"@@bŝÕÕEȣÚƥêImɇǦèÜĠÚÃƌÃ͎ó\"], [\"@@ǜûȬɋŭ×^sYɍDŋŽąñCG²«ªč@h_p¯A{oloY¬j@Ĳ`gQÚhr|ǀ^MĲvtbe´R¯Ô¬¨Yô¤r]ìƬį\"]],\n        \"encodeOffsets\": [[[124702, 32062]], [[124547, 32200]], [[124808, 31991]], [[124726, 32110]], [[124903, 32376]], [[124438, 32149]]]\n      },\n      \"properties\": {\n        \"cp\": [121.472644, 31.231706],\n        \"name\": \"上海\",\n        \"childNum\": 6\n      }\n    }, {\n      \"id\": \"500000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [[\"@@vjG~nGŘŬĶȂƀƾ¹¸ØÎezĆT¸}êÐqHðqĖä¥^CÆIj²p\\\\_ æüY|[YxƊæu°xb®Űb@~¢NQt°¶Sæ Ê~rǉĔëĚ¢~uf`faĔJåĊnÖ]jƎćÊ@£¾a®£Ű{ŶĕFègLk{Y|¡ĜWƔtƬJÑxq±ĢN´òKLÈÃ¼D|s`ŋć]Ã`đMûƱ½~Y°ħ`ƏíW½eI½{aOIrÏ¡ĕŇapµÜƅġ^ÖÛbÙŽŏml½SêqDu[RãË»ÿw`»y¸_ĺę}÷`M¯ċfCVµqŉ÷Zgg`d½pDOÎCn^uf²ènh¼WtƏxRGg¦pVFI±G^Ic´ecGĹÞ½sëĬhxW}KÓe­XsbkF¦LØgTkïƵNï¶}Gyw\\\\oñ¡nmĈzj@Óc£»Wă¹Ój_m»¹·~MvÛaq»­ê\\\\ÂoVnÓØÍ²«bq¿efE Ĝ^Q~ Évýş¤²ĮpEİ}zcĺL½¿gÅ¡ýE¡ya£³t\\\\¨\\\\vú»¼§·Ñr_oÒý¥u_n»_At©ÞÅ±ā§IVeëY}{VPÀFA¨ąB}q@|Ou\\\\FmQFÝMwå}]|FmÏCawu_p¯sfÙgYDHl`{QEfNysB¦zG¸rHeN\\\\CvEsÐùÜ_·ÖĉsaQ¯}_UxÃđqNH¬Äd^ÝŰR¬ã°wećJE·vÝ·HgéFXjÉê`|ypxkAwWĐpb¥eOsmzwqChóUQl¥F^lafanòsrEvfQdÁUVfÎvÜ^eftET¬ôA\\\\¢sJnQTjPØxøK|nBzĞ»LYFDxÓvr[ehľvN¢o¾NiÂxGpâ¬zbfZo~hGi]öF||NbtOMn eA±tPTLjpYQ|SHYĀxinzDJÌg¢và¥Pg_ÇzIIII£®S¬ØsÎ¼£N\"], [\"@@ifjN@s\"]],\n        \"encodeOffsets\": [[[109628, 30765]], [[111725, 31320]]]\n      },\n      \"properties\": {\n        \"cp\": [106.504962, 29.533155],\n        \"name\": \"重庆\",\n        \"childNum\": 2\n      }\n    }, {\n      \"id\": \"810000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [[\"@@AlBk\"], [\"@@mn\"], [\"@@EpFo\"], [\"@@ea¢pl¸Eõ¹hj[]ÔCÎ@lj¡uBX´AI¹[yDU]W`çwZkmcMpÅv}IoJlcafŃK°ä¬XJmÐ đhI®æÔtSHnEÒrÈc\"], [\"@@rMUwAS®e\"]],\n        \"encodeOffsets\": [[[117111, 23002]], [[117072, 22876]], [[117045, 22887]], [[116975, 23082]], [[116882, 22747]]]\n      },\n      \"properties\": {\n        \"cp\": [114.173355, 22.320048],\n        \"name\": \"香港\",\n        \"childNum\": 5\n      }\n    }, {\n      \"id\": \"820000\",\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\"@@kÊd°å§s\"],\n        \"encodeOffsets\": [[116279, 22639]]\n      },\n      \"properties\": {\n        \"cp\": [113.54909, 22.198951],\n        \"name\": \"澳门\",\n        \"childNum\": 1\n      }\n    }],\n    \"UTF8Encoding\": true\n  });\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _echarts = require(\"./lib/echarts\");\n\n(function () {\n  for (var key in _echarts) {\n    if (_echarts == null || !_echarts.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _echarts[key];\n  }\n})();\n\nvar _export = require(\"./lib/export\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\nrequire(\"./lib/component/dataset\");\n\nrequire(\"./lib/chart/line\");\n\nrequire(\"./lib/chart/bar\");\n\nrequire(\"./lib/chart/pie\");\n\nrequire(\"./lib/chart/scatter\");\n\nrequire(\"./lib/chart/radar\");\n\nrequire(\"./lib/chart/map\");\n\nrequire(\"./lib/chart/tree\");\n\nrequire(\"./lib/chart/treemap\");\n\nrequire(\"./lib/chart/graph\");\n\nrequire(\"./lib/chart/gauge\");\n\nrequire(\"./lib/chart/funnel\");\n\nrequire(\"./lib/chart/parallel\");\n\nrequire(\"./lib/chart/sankey\");\n\nrequire(\"./lib/chart/boxplot\");\n\nrequire(\"./lib/chart/candlestick\");\n\nrequire(\"./lib/chart/effectScatter\");\n\nrequire(\"./lib/chart/lines\");\n\nrequire(\"./lib/chart/heatmap\");\n\nrequire(\"./lib/chart/pictorialBar\");\n\nrequire(\"./lib/chart/themeRiver\");\n\nrequire(\"./lib/chart/sunburst\");\n\nrequire(\"./lib/chart/custom\");\n\nrequire(\"./lib/component/graphic\");\n\nrequire(\"./lib/component/grid\");\n\nrequire(\"./lib/component/legendScroll\");\n\nrequire(\"./lib/component/tooltip\");\n\nrequire(\"./lib/component/axisPointer\");\n\nrequire(\"./lib/component/polar\");\n\nrequire(\"./lib/component/geo\");\n\nrequire(\"./lib/component/parallel\");\n\nrequire(\"./lib/component/singleAxis\");\n\nrequire(\"./lib/component/brush\");\n\nrequire(\"./lib/component/calendar\");\n\nrequire(\"./lib/component/title\");\n\nrequire(\"./lib/component/dataZoom\");\n\nrequire(\"./lib/component/visualMap\");\n\nrequire(\"./lib/component/markPoint\");\n\nrequire(\"./lib/component/markLine\");\n\nrequire(\"./lib/component/markArea\");\n\nrequire(\"./lib/component/timeline\");\n\nrequire(\"./lib/component/toolbox\");\n\nrequire(\"zrender/lib/vml/vml\");\n\nrequire(\"zrender/lib/svg/svg\");","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = SeriesModel.extend({\n  type: 'series.scatter',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  getProgressive: function getProgressive() {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      // PENDING\n      return this.option.large ? 5e3 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function getProgressiveThreshold() {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      // PENDING\n      return this.option.large ? 1e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10,\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    // label: {\n    // show: false\n    // distance: 5,\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\n    //           'inside'|'left'|'right'|'top'|'bottom'\n    // 默认使用全局文本样式，详见TEXTSTYLE\n    // },\n    itemStyle: {\n      opacity: 0.8 // color: 各异\n      // progressive: null\n\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\nvar pointsLayout = require(\"../../layout/points\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.extendChartView({\n  type: 'scatter',\n  render: function render(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data);\n    this._finished = true;\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function incrementalRender(taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function updateTransform(seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _updateSymbolDraw: function _updateSymbolDraw(data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function remove(ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function dispose() {}\n});","var graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\n\n\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null\n  },\n  symbolProxy: null,\n  buildPath: function buildPath(path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      return;\n    }\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  },\n  afterBrush: function afterBrush(ctx) {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\n\n    if (!canBoost) {\n      return;\n    }\n\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    this.restoreTransform(ctx);\n  },\n  findDataIndex: function findDataIndex(x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n\nlargeSymbolProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = new LargeSymbolPath({\n    rectHover: true,\n    cursor: 'default'\n  });\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data);\n\n  this.group.add(symbolEl);\n  this._incremental = null;\n};\n\nlargeSymbolProto.updateLayout = function (data) {\n  if (this._incremental) {\n    return;\n  }\n\n  var points = data.getLayout('symbolPoints');\n  this.group.eachChild(function (child) {\n    if (child.startIndex != null) {\n      var len = (child.endIndex - child.startIndex) * 2;\n      var byteOffset = child.startIndex * 4 * 2;\n      points = new Float32Array(points.buffer, byteOffset, len);\n    }\n\n    child.setShape('points', points);\n  });\n};\n\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n  // PENDING Incremental data?\n\n\n  if (data.count() > 2e6) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n\nlargeSymbolProto.incrementalUpdate = function (taskParams, data) {\n  var symbolEl;\n\n  if (this._incremental) {\n    symbolEl = new LargeSymbolPath();\n\n    this._incremental.addDisplayable(symbolEl, true);\n  } else {\n    symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default',\n      startIndex: taskParams.start,\n      endIndex: taskParams.end\n    });\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, !!this._incremental);\n};\n\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental) {\n  var hostModel = data.hostModel; // TODO\n  // if (data.hasItemVisual.symbolSize) {\n  //     // TODO typed array?\n  //     symbolEl.setShape('sizes', data.mapArray(\n  //         function (idx) {\n  //             var size = data.getItemVisual(idx, 'symbolSize');\n  //             return (size instanceof Array) ? size : [size, size];\n  //         }\n  //     ));\n  // }\n  // else {\n\n  var size = data.getVisual('symbolSize');\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\n  // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n  symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  }\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    symbolEl.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      symbolEl.dataIndex = null;\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  }\n};\n\nlargeSymbolProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeSymbolProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;","require(\"../coord/radar/Radar\");\n\nrequire(\"../coord/radar/RadarModel\");\n\nrequire(\"./radar/RadarView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar IndicatorAxis = require(\"./IndicatorAxis\");\n\nvar IntervalScale = require(\"../../scale/Interval\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _axisHelper = require(\"../axisHelper\");\n\nvar getScaleExtent = _axisHelper.getScaleExtent;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO clockwise\n\n\nfunction Radar(radarModel, ecModel, api) {\n  this._model = radarModel;\n  /**\n   * Radar dimensions\n   * @type {Array.<string>}\n   */\n\n  this.dimensions = [];\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n    var dim = 'indicator_' + idx;\n    var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n    indicatorAxis.model = indicatorModel;\n    indicatorModel.axis = indicatorAxis;\n    this.dimensions.push(dim);\n    return indicatorAxis;\n  }, this);\n  this.resize(radarModel, api);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cx;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cy;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.startAngle;\n}\n\nRadar.prototype.getIndicatorAxes = function () {\n  return this._indicatorAxes;\n};\n\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n};\n\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  var angle = indicatorAxis.angle;\n  var x = this.cx + coord * Math.cos(angle);\n  var y = this.cy - coord * Math.sin(angle);\n  return [x, y];\n};\n\nRadar.prototype.pointToData = function (pt) {\n  var dx = pt[0] - this.cx;\n  var dy = pt[1] - this.cy;\n  var radius = Math.sqrt(dx * dx + dy * dy);\n  dx /= radius;\n  dy /= radius;\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\n  // FIXME index can calculated directly\n\n  var minRadianDiff = Infinity;\n  var closestAxis;\n  var closestAxisIdx = -1;\n\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\n    var indicatorAxis = this._indicatorAxes[i];\n    var diff = Math.abs(radian - indicatorAxis.angle);\n\n    if (diff < minRadianDiff) {\n      closestAxis = indicatorAxis;\n      closestAxisIdx = i;\n      minRadianDiff = diff;\n    }\n  }\n\n  return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n};\n\nRadar.prototype.resize = function (radarModel, api) {\n  var center = radarModel.get('center');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n  this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n    indicatorAxis.setExtent(0, this.r);\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n    indicatorAxis.angle = angle;\n  }, this);\n};\n\nRadar.prototype.update = function (ecModel, api) {\n  var indicatorAxes = this._indicatorAxes;\n  var radarModel = this._model;\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n      return;\n    }\n\n    var data = radarSeries.getData();\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.unionExtentFromData(data, data.mapDimension(indicatorAxis.dim));\n    });\n  }, this);\n  var splitNumber = radarModel.get('splitNumber');\n\n  function increaseInterval(interval) {\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n    var f = interval / exp10;\n\n    if (f === 2) {\n      f = 5;\n    } else {\n      // f is 2 or 5\n      f *= 2;\n    }\n\n    return f * exp10;\n  } // Force all the axis fixing the maxSplitNumber.\n\n\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    var axisModel = indicatorAxis.model;\n    var scale = indicatorAxis.scale;\n    var fixedMin = axisModel.getMin();\n    var fixedMax = axisModel.getMax();\n    var interval = scale.getInterval();\n\n    if (fixedMin != null && fixedMax != null) {\n      // User set min, max, divide to get new interval\n      scale.setExtent(+fixedMin, +fixedMax);\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\n    } else if (fixedMin != null) {\n      var max; // User set min, expand extent on the other side\n\n      do {\n        max = fixedMin + interval * splitNumber;\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\n        // FIXME\n\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n    } else if (fixedMax != null) {\n      var min; // User set min, expand extent on the other side\n\n      do {\n        min = fixedMax - interval * splitNumber;\n        scale.setExtent(min, +fixedMax);\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n    } else {\n      var nicedSplitNumber = scale.getTicks().length - 1;\n\n      if (nicedSplitNumber > splitNumber) {\n        interval = increaseInterval(interval);\n      } // PENDING\n\n\n      var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n      var halfSplitNumber = Math.round(splitNumber / 2);\n      scale.setExtent(numberUtil.round(center - halfSplitNumber * interval), numberUtil.round(center + (splitNumber - halfSplitNumber) * interval));\n      scale.setInterval(interval);\n    }\n  });\n};\n/**\n * Radar dimensions is based on the data\n * @type {Array}\n */\n\n\nRadar.dimensions = [];\n\nRadar.create = function (ecModel, api) {\n  var radarList = [];\n  ecModel.eachComponent('radar', function (radarModel) {\n    var radar = new Radar(radarModel, ecModel, api);\n    radarList.push(radar);\n    radarModel.coordinateSystem = radar;\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\n    if (radarSeries.get('coordinateSystem') === 'radar') {\n      // Inject coordinate system\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n    }\n  });\n  return radarList;\n};\n\nCoordinateSystem.register('radar', Radar);\nvar _default = Radar;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction IndicatorAxis(dim, scale, radiusExtent) {\n  Axis.call(this, dim, scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'value';\n  this.angle = 0;\n  /**\n   * Indicator name\n   * @type {string}\n   */\n\n  this.name = '';\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.model;\n}\n\nzrUtil.inherits(IndicatorAxis, Axis);\nvar _default = IndicatorAxis;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"../axisDefault\");\n\nvar Model = require(\"../../model/Model\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function optionUpdated() {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisLabel: axisLabel,\n        // Competitable with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar _default = echarts.extendComponentView({\n  type: 'radar',\n  render: function render(radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  },\n  _buildAxes: function _buildAxes(radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  },\n  _buildSplitLineAndArea: function _buildSplitLineAndArea(radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i].coord\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i].coord,\n              r: ticksRadius[i + 1].coord\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord.coord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {}\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColors[idx % splitAreaColors.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColors[idx % splitLineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  }\n});\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function init(option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListSimply(this, {\n      generateCoord: 'indicator_',\n      generateCoordCount: Infinity\n    });\n  },\n  formatTooltip: function formatTooltip(dataIndex) {\n    var data = this.getData();\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      var val = data.get(data.mapDimension(axis.dim), dataIndex);\n      return encodeHTML(axis.name + ' : ' + val);\n    }).join('<br />');\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    label: {\n      position: 'top'\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function render(seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle');\n      var hoverAreaStyleModel = itemModel.getModel('emphasis.areaStyle');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: data.get(data.dimensions[symbolPath.__dimIdx], idx),\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      function onEmphasis() {\n        polygon.attr('ignore', hoverPolygonIgnore);\n      }\n\n      function onNormal() {\n        polygon.attr('ignore', polygonIgnore);\n      }\n\n      itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n      itemGroup.on('emphasis', onEmphasis).on('mouseover', onEmphasis).on('normal', onNormal).on('mouseout', onNormal);\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function remove() {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function dispose() {}\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    function pointsConverter(val, idx) {\n      points[idx] = points[idx] || [];\n      points[idx][i] = coordSys.dataToPoint(val, i);\n    }\n\n    var axes = coordSys.getIndicatorAxes();\n\n    for (var i = 0; i < axes.length; i++) {\n      data.each(data.mapDimension(axes[i].dim), pointsConverter);\n    }\n\n    data.each(function (idx) {\n      // Close polygon\n      points[idx][0] && points[idx].push(points[idx][0].slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Backward compat for radar chart in 2\n\n\nfunction _default(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./tree/TreeSeries\");\n\nrequire(\"./tree/TreeView\");\n\nrequire(\"./tree/treeAction\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar treeLayout = require(\"./tree/treeLayout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerVisual(visualSymbol('tree', 'circle'));\necharts.registerLayout(treeLayout);","var SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Create data struct and define tree view's series model\n */\n\nvar _default = SeriesModel.extend({\n  type: 'series.tree',\n  layoutInfo: null,\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n  layoutMode: 'box',\n\n  /**\n   * Init a tree data structure from data in option series\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function getInitialData(option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var treeOption = {};\n    treeOption.leaves = leaves;\n    var tree = Tree.createTree(root, this, treeOption);\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex); // add item.collapsed != null, because users can collapse node original in the series.data.\n\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  },\n\n  /**\n   * Make the configuration 'orient' backward compatibly, with 'horizontal = LR', 'vertical = TB'.\n   * @returns {string} orient\n   */\n  getOrient: function getOrient() {\n    var orient = this.get('orient');\n\n    if (orient === 'horizontal') {\n      orient = 'LR';\n    } else if (orient === 'vertical') {\n      orient = 'TB';\n    }\n\n    return orient;\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   */\n  formatTooltip: function formatTooltip(dataIndex) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    // The orient of orthoginal layout, can be setted to 'LR', 'TB', 'RL', 'BT'.\n    // and the backward compatibility configuration 'horizontal = LR', 'vertical = TB'.\n    orient: 'LR',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      color: '#ccc',\n      width: 1.5,\n      curveness: 0.5\n    },\n    itemStyle: {\n      color: 'lightsteelblue',\n      borderColor: '#c23531',\n      borderWidth: 1.5\n    },\n    label: {\n      show: true,\n      color: '#555'\n    },\n    leaves: {\n      label: {\n        show: true\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 1000\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  This file used to draw tree view\n */\n\n\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function init(ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    this.group.add(this._mainGroup);\n  },\n  render: function render(seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.getOrient(),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // update  node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n      }\n    }).execute();\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  dispose: function dispose() {},\n  remove: function remove() {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n\n  if (seriesScope.layout === 'radial') {\n    var x1 = sourceLayout.rawX;\n    var y1 = sourceLayout.rawY;\n    var x2 = targetLayout.rawX;\n    var y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    var x1 = sourceLayout.x;\n    var y1 = sourceLayout.y;\n    var x2 = targetLayout.x;\n    var y2 = targetLayout.y;\n\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      cpx1: cpx1,\n      cpy1: cpy1,\n      cpx2: cpx2,\n      cpy2: cpy2\n    };\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});","var _traversalHelper = require(\"./traversalHelper\");\n\nvar eachAfter = _traversalHelper.eachAfter;\nvar eachBefore = _traversalHelper.eachBefore;\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar init = _layoutHelper.init;\nvar firstWalk = _layoutHelper.firstWalk;\nvar secondWalk = _layoutHelper.secondWalk;\nvar sep = _layoutHelper.separation;\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar getViewRect = _layoutHelper.getViewRect;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nfunction commonLayout(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n\n  if (realRoot) {\n    init(virtualRoot);\n    eachAfter(realRoot, firstWalk, separation);\n    virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n    eachBefore(realRoot, secondWalk);\n    var left = realRoot;\n    var right = realRoot;\n    var bottom = realRoot;\n    eachBefore(realRoot, function (node) {\n      var x = node.getLayout().x;\n\n      if (x < left.getLayout().x) {\n        left = node;\n      }\n\n      if (x > right.getLayout().x) {\n        right = node;\n      }\n\n      if (node.depth > bottom.depth) {\n        bottom = node;\n      }\n    });\n    var delta = left === right ? 1 : separation(left, right) / 2;\n    var tx = delta - left.getLayout().x;\n    var kx = 0;\n    var ky = 0;\n    var coorX = 0;\n    var coorY = 0;\n\n    if (layout === 'radial') {\n      kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n      ky = height / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX = (node.getLayout().x + tx) * kx;\n        coorY = (node.depth - 1) * ky;\n        var finalCoor = radialCoordinate(coorX, coorY);\n        node.setLayout({\n          x: finalCoor.x,\n          y: finalCoor.y,\n          rawX: coorX,\n          rawY: coorY\n        }, true);\n      });\n    } else {\n      var orient = seriesModel.getOrient();\n\n      if (orient === 'RL' || orient === 'LR') {\n        ky = height / (right.getLayout().x + delta + tx);\n        kx = width / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorY = (node.getLayout().x + tx) * ky;\n          coorX = orient === 'LR' ? (node.depth - 1) * kx : width - (node.depth - 1) * kx;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      } else if (orient === 'TB' || orient === 'BT') {\n        kx = width / (right.getLayout().x + delta + tx);\n        ky = height / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorX = (node.getLayout().x + tx) * kx;\n          coorY = orient === 'TB' ? (node.depth - 1) * ky : height - (node.depth - 1) * ky;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;","var echarts = require(\"../echarts\");\n\nrequire(\"./treemap/TreemapSeries\");\n\nrequire(\"./treemap/TreemapView\");\n\nrequire(\"./treemap/treemapAction\");\n\nvar treemapVisual = require(\"./treemap/treemapVisual\");\n\nvar treemapLayout = require(\"./treemap/treemapLayout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerVisual(treemapVisual);\necharts.registerLayout(treemapLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _default = SeriesModel.extend({\n  type: 'series.treemap',\n  layoutMode: 'box',\n  dependencies: ['grid', 'polar'],\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  defaultOption: {\n    // Disable progressive rendering\n    progressive: 0,\n    hoverLayerThreshold: Infinity,\n    // center: ['50%', '50%'],          // not supported in ec3.\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    right: null,\n    bottom: null,\n    width: '80%',\n    height: '80%',\n    sort: true,\n    // Can be null or false or true\n    // (order by desc default, asc not supported yet (strange effect))\n    clipWindow: 'origin',\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    // golden ratio\n    leafDepth: null,\n    // Nodes on depth from root are regarded as leaves.\n    // Count from zero (zero represents only view root).\n    drillDownIcon: '▶',\n    // Use html character temporarily because it is complicated\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    // Be effective when using zoomToNode. Specify the proportion of the\n    // target node area in the view area.\n    roam: true,\n    // true, false, 'scale' or 'zoom', 'move'.\n    nodeClick: 'zoomToNode',\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\n    // If leafDepth is set and clicking a node which has children but\n    // be on left depth, the behaviour would be changing root. Otherwise\n    // use behavious defined above.\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      // Width of empty node.\n      itemStyle: {\n        color: 'rgba(0,0,0,0.7)',\n        //'#5793f3',\n        borderColor: 'rgba(255,255,255,0.7)',\n        borderWidth: 1,\n        shadowColor: 'rgba(150,150,150,1)',\n        shadowBlur: 3,\n        shadowOffsetX: 0,\n        shadowOffsetY: 0,\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      emphasis: {\n        textStyle: {}\n      }\n    },\n    label: {\n      show: true,\n      // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n      distance: 0,\n      padding: 5,\n      position: 'inside',\n      // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true // align\n      // verticalAlign\n\n    },\n    upperLabel: {\n      // Label when node is parent.\n      show: false,\n      position: [0, '50%'],\n      height: 20,\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true,\n      // align: null,\n      verticalAlign: 'middle'\n    },\n    itemStyle: {\n      color: null,\n      // Can be 'none' if not necessary.\n      colorAlpha: null,\n      // Can be 'none' if not necessary.\n      colorSaturation: null,\n      // Can be 'none' if not necessary.\n      borderWidth: 0,\n      gapWidth: 0,\n      borderColor: '#fff',\n      borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n      // border color is evaluated by color of current node and\n      // borderColorSaturation.\n\n    },\n    emphasis: {\n      upperLabel: {\n        show: true,\n        position: [0, '50%'],\n        color: '#fff',\n        ellipsis: true,\n        verticalAlign: 'middle'\n      }\n    },\n    visualDimension: 0,\n    // Can be 0, 1, 2, 3.\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // + treemapSeries.color should not be modified. Please only modified\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\n    colorSaturation: null,\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\n    colorMappingBy: 'index',\n    // 'value' or 'index' or 'id'.\n    visibleMin: 10,\n    // If area less than this threshold (unit: pixel^2), node will not\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // If area of a node less than this threshold (unit: pixel^2),\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n    // data: {\n    //      value: [],\n    //      children: [],\n    //      link: 'http://xxx.xxx.xxx',\n    //      target: 'blank' or 'self'\n    // }\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function getInitialData(option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || [];\n    levels = option.levels = setDefault(levels, ecModel);\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function optionUpdated() {\n    this.resetViewRoot();\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n  formatTooltip: function formatTooltip(dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\n    var name = data.getName(dataIndex);\n    return encodeHTML(name + ': ' + formattedValue);\n  },\n\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n  getDataParams: function getDataParams(dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n  setLayoutInfo: function setLayoutInfo(layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  },\n\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n  mapIdToIndex: function mapIdToIndex(id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  },\n  getViewRoot: function getViewRoot() {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function resetViewRoot(viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = ecModel.get('color');\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n\n    if (model.get('itemStyle.color') || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n  });\n\n  if (!hasColorDefine) {\n    var level0 = levels[0] || (levels[0] = {});\n    level0.color = globalColorList.slice();\n  }\n\n  return levels;\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar helper = require(\"../helper/treeHelper\");\n\nvar Breadcrumb = require(\"./Breadcrumb\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar animationUtil = require(\"../../util/animation\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label'];\nvar PATH_LABEL_EMPHASIS = ['emphasis', 'label'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel'];\nvar PATH_UPPERLABEL_EMPHASIS = ['emphasis', 'upperLabel'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function getItemStyleNormal(model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function init(o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function render(seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function _giveContainerGroup(layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function _doRender(containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function _doAnimation(containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0 // Others.\n\n            }\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function _resetController(api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function _clearController() {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function _onPan(dx, dy) {\n    if (this._state !== 'animating' && (Math.abs(dx) > DRAG_THRESHOLD || Math.abs(dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + dx,\n          y: rootLayout.y + dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function _onZoom(scale, mouseX, mouseY) {\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [scale, scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function _initEvents(containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function _renderBreadcrumb(seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function remove() {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function dispose() {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function _zoomToNode(targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function _rootToNode(targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function findTarget(x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle');\n  var itemStyleEmphasisModel = thisNode.getModel('emphasis.itemStyle'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nfunction Breadcrumb(containerGroup) {\n  /**\n   * @private\n   * @type {module:zrender/container/Group}\n   */\n  this.group = new graphic.Group();\n  containerGroup.add(this.group);\n}\n\nBreadcrumb.prototype = {\n  constructor: Breadcrumb,\n  render: function render(seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle'); // var emphasisStyleModel = model.getModel('emphasis.itemStyle');\n\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  },\n\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n  _prepare: function _prepare(targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = node.getModel().get('name');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderContent: function _renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get('breadcrumb.height');\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel',\n          text: text,\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        }),\n        z: 10,\n        onclick: zrUtil.curry(onSelect, itemNode)\n      });\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function remove() {\n    this.group.removeAll();\n  }\n};\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  el.eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    seriesIndex: seriesModel.componentIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    // Distinguish with click event on treemap node.\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nvar _default = Breadcrumb;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {number} [time=500] Time in ms\n * @param {string} [easing='linear']\n * @param {number} [delay=0]\n * @param {Function} [callback]\n *\n * @example\n *  // Animate position\n *  animation\n *      .createWrap()\n *      .add(el1, {position: [10, 10]})\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\n *      .done(function () { // done })\n *      .start('cubicOut');\n */\n\n\nfunction createWrap() {\n  var storage = [];\n  var elExistsMap = {};\n  var doneCallback;\n  return {\n    /**\n     * Caution: a el can only be added once, otherwise 'done'\n     * might not be called. This method checks this (by el.id),\n     * suppresses adding and returns false when existing el found.\n     *\n     * @param {modele:zrender/Element} el\n     * @param {Object} target\n     * @param {number} [time=500]\n     * @param {number} [delay=0]\n     * @param {string} [easing='linear']\n     * @return {boolean} Whether adding succeeded.\n     *\n     * @example\n     *     add(el, target, time, delay, easing);\n     *     add(el, target, time, easing);\n     *     add(el, target, time);\n     *     add(el, target);\n     */\n    add: function add(el, target, time, delay, easing) {\n      if (zrUtil.isString(delay)) {\n        easing = delay;\n        delay = 0;\n      }\n\n      if (elExistsMap[el.id]) {\n        return false;\n      }\n\n      elExistsMap[el.id] = 1;\n      storage.push({\n        el: el,\n        target: target,\n        time: time,\n        delay: delay,\n        easing: easing\n      });\n      return true;\n    },\n\n    /**\n     * Only execute when animation finished. Will not execute when any\n     * of 'stop' or 'stopAnimation' called.\n     *\n     * @param {Function} callback\n     */\n    done: function done(callback) {\n      doneCallback = callback;\n      return this;\n    },\n\n    /**\n     * Will stop exist animation firstly.\n     */\n    start: function start() {\n      var count = storage.length;\n\n      for (var i = 0, len = storage.length; i < len; i++) {\n        var item = storage[i];\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\n      }\n\n      return this;\n\n      function done() {\n        count--;\n\n        if (!count) {\n          storage.length = 0;\n          elExistsMap = {};\n          doneCallback && doneCallback();\n        }\n      }\n    }\n  };\n}\n\nexports.createWrap = createWrap;","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Treemap action\n */\n\n\nvar noop = function noop() {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar _default = {\n  seriesType: 'treemap',\n  reset: function reset(seriesModel, ecModel, api, payload) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"../helper/treeHelper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'height'];\n/**\n * @public\n */\n\nvar _default = {\n  seriesType: 'treemap',\n  reset: function reset(seriesModel, ecModel, api, payload) {\n    // Layout result in each node:\n    // {x, y, width, height, area, borderWidth}\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort = seriesOption.sort;\n\n      if (sort && sort !== 'asc' && sort !== 'desc') {\n        sort = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      var viewRootLayout = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  }\n};\n/**\n * Layout treemap with squarify algorithm.\n * @see https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf\n * @see https://github.com/mbostock/d3/blob/master/src/layout/treemap.js\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  var nodeModel = node.getModel();\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      var dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as defualt.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whold width and heigth by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root postion base on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./graph/GraphSeries\");\n\nrequire(\"./graph/GraphView\");\n\nrequire(\"./graph/graphAction\");\n\nvar categoryFilter = require(\"./graph/categoryFilter\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar categoryVisual = require(\"./graph/categoryVisual\");\n\nvar edgeVisual = require(\"./graph/edgeVisual\");\n\nvar simpleLayout = require(\"./graph/simpleLayout\");\n\nvar circularLayout = require(\"./graph/circularLayout\");\n\nvar forceLayout = require(\"./graph/forceLayout\");\n\nvar createView = require(\"./graph/createView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(visualSymbol('graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function init(option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function mergeOption(option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function mergeDefaultAndTheme(option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option, ['edgeLabel'], ['show']);\n  },\n  getInitialData: function getInitialData(option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      var emphasisEdgeLabelModel = self.getModel('emphasis.edgeLabel');\n      var emphasisFakeSeriesModel = new Model({\n        emphasis: {\n          label: emphasisEdgeLabelModel.option\n        }\n      }, emphasisEdgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : path && path[0] === 'emphasis' && path[1] === 'label' ? emphasisFakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function getGraph() {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function getEdgeData() {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function getCategoriesData() {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function formatTooltip(dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function _updateCategoriesData() {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function setZoom(zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function setCenter(center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function isAnimationEnabled() {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle'\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      curveness: 0,\n      opacity: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\n\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function Graph(directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function degree() {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function inDegree() {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function outDegree() {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function getModel(path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function createGraphDataProxyMixin(hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function getValue(dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function setVisual(key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function getVisual(key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function setLayout(layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function getLayout() {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function getGraphicEl() {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function getRawIndex() {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar adjustEdge = require(\"./adjustEdge\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function init(ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function render(seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = data.getItemModel(idx).get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function dispose() {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function focusNodeAdjacency(seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function unfocusNodeAdjacency(seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function _startForceLayoutIteration(forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function _updateController(seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (dx, dy) {\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: dx,\n        dy: dy\n      });\n    }).on('zoom', function (zoom, mouseX, mouseY) {\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function _updateNodeAndLinkScale() {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function _getNodeGlobalScale(seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function updateLayout(seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function remove(ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Line path for bezier and straight line draw\n */\n\n\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function buildPath(ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function pointAt(t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function tangentAt(t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","var curveTool = require(\"zrender/lib/core/curve\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.color'.split('.');\n    var opacityQuery = 'lineStyle.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = [];\n      each(coordSys.dimensions, function (coordDim) {\n        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\n      });\n\n      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n        var value = [];\n        var hasValue = false;\n\n        for (var i = 0; i < dimensions.length; i++) {\n          var val = data.get(dimensions[i], dataIndex);\n\n          if (!isNaN(val)) {\n            hasValue = true;\n          }\n\n          value.push(val);\n        }\n\n        if (hasValue) {\n          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(dataIndex, [NaN, NaN]);\n        }\n      }\n\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","var _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","var _forceHelper = require(\"./forceHelper\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = require(\"../../util/number\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;","var vec2 = require(\"zrender/lib/core/vector\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      // Use the position from first adjecent node with defined position\n      // Or use a random position\n      // From d3\n      // if (n.edges) {\n      //     var j = -1;\n      //     while (++j < n.edges.length) {\n      //         var e = n.edges[j];\n      //         var other = adjacentNode(n, e);\n      //         if (other.p) {\n      //             n.p = vec2.clone(other.p);\n      //             break;\n      //         }\n      //     }\n      // }\n      // if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function warmUp() {\n      friction = 0.5;\n    },\n    setFixed: function setFixed(idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function setUnfixed(idx) {\n      nodes[idx].fixed = false;\n    },\n    step: function step(cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;","var View = require(\"../../coord/View\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Where to create the simple view coordinate system\n\n\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./funnel/FunnelSeries\");\n\nrequire(\"./funnel/FunnelView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar funnelLayout = require(\"./funnel/funnelLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerVisual(dataColor('funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(dataFilter('funnel'));","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function init(option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _defaultLabelLine: function _defaultLabelLine(option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  // Overwrite\n  getDataParams: function getDataParams(dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var valueDim = data.mapDimension('value');\n    var sum = data.getSum(valueDim); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get(valueDim, dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      show: true,\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    labelLine: {\n      show: true,\n      length: 20,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      // color: 各异,\n      borderColor: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function render(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function remove() {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function dispose() {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueDim = data.mapDimension('value');\n  var valueArr = data.mapArray(valueDim, function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent(valueDim);\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function getLinePoints(idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get(valueDim, idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var itemModel = data.getItemModel(idx);\n      var height = itemModel.get('itemStyle.height');\n\n      if (height == null) {\n        height = itemHeight;\n      } else {\n        height = parsePercent(height, viewRect.height);\n\n        if (sort === 'ascending') {\n          height = -height;\n        }\n      }\n\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + height);\n      y += height + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"../component/parallel\");\n\nrequire(\"./parallel/ParallelSeries\");\n\nrequire(\"./parallel/ParallelView\");\n\nvar parallelVisual = require(\"./parallel/parallelVisual\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerVisual(parallelVisual);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar ParallelAxis = require(\"./ParallelAxis\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../../component/helper/sliderMove\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\n\n\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function _init(parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function update(ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function containPoint(point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function getModel() {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function _updateAxesFromSeries(parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, data.mapDimension(dim));\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function resize(parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function getRect() {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function _makeLayoutInfo() {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function _layoutAxes() {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function getAxis(dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function dataToPoint(value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {number} [start=0] the start dataIndex that travel from.\n   * @param {number} [end=data.count()] the next dataIndex of the last dataIndex will be travel.\n   */\n  eachActiveState: function eachActiveState(data, callback, start, end) {\n    start == null && (start = 0);\n    end == null && (end = data.count());\n    var axesMap = this._axesMap;\n    var dimensions = this.dimensions;\n    var dataDimensions = [];\n    var axisModels = [];\n    zrUtil.each(dimensions, function (axisDim) {\n      dataDimensions.push(data.mapDimension(axisDim));\n      axisModels.push(axesMap.get(axisDim).model);\n    });\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var dataIndex = start; dataIndex < end; dataIndex++) {\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n        var values = data.getValues(dataDimensions, dataIndex);\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var state = axisModels[j].getActiveState(values[j]);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback(activeState, dataIndex);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function hasAxisBrushed() {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function axisCoordToPoint(coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function getAxisLayout(dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function getSlidedAxisExpandWindow(point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor module:echarts/coord/parallel/ParallelAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n */\n\n\nvar ParallelAxis = function ParallelAxis(dim, scale, coordExtent, axisType, axisIndex) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.axisIndex = axisIndex;\n};\n\nParallelAxis.prototype = {\n  constructor: ParallelAxis,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/parallel/AxisModel}\n   */\n  model: null,\n\n  /**\n   * @override\n   */\n  isHorizontal: function isHorizontal() {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  }\n};\nzrUtil.inherits(ParallelAxis, Axis);\nvar _default = ParallelAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Component = require(\"../../model/Component\");\n\nrequire(\"./AxisModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = Component.extend({\n  type: 'parallel',\n  dependencies: ['parallelAxis'],\n\n  /**\n   * @type {module:echarts/coord/parallel/Parallel}\n   */\n  coordinateSystem: null,\n\n  /**\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * Coresponding to dimensions.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n  parallelAxisIndex: null,\n  layoutMode: 'box',\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // 'horizontal' or 'vertical'\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    // FIXME '10%' ?\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    // 'mousemove' or 'click'\n    parallelAxisDefault: null\n  },\n\n  /**\n   * @override\n   */\n  init: function init() {\n    Component.prototype.init.apply(this, arguments);\n    this.mergeOption({});\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption(newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  },\n\n  /**\n   * Whether series or axis is in this coordinate system.\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\n   * @param {module:echarts/model/Global} ecModel\n   */\n  contains: function contains(model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  },\n  setAxisExpand: function setAxisExpand(opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        this.option[name] = opt[name];\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _initDimensions: function _initDimensions() {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function getAreaSelectStyle() {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function setActiveIntervals(intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function getActiveState(value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null || isNaN(value)) {\n      return 'inactive';\n    } // Simple optimization\n\n\n    if (activeIntervals.length === 1) {\n      var interval = activeIntervals[0];\n\n      if (interval[0] <= value && value <= interval[1]) {\n        return 'active';\n      }\n    } else {\n      for (var i = 0, len = activeIntervals.length; i < len; i++) {\n        if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n          return 'active';\n        }\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","require(\"../coord/parallel/parallelCreator\");\n\nrequire(\"./axis/parallelAxisAction\");\n\nrequire(\"./axis/ParallelAxisView\");","var echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\n\n\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected' // update: 'updateVisual'\n\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar brushHelper = require(\"../helper/brushHelper\");\n\nvar graphic = require(\"../../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar AxisView = echarts.extendComponentView({\n  type: 'parallelAxis',\n\n  /**\n   * @override\n   */\n  init: function init(ecModel, api) {\n    AxisView.superApply(this, 'init', arguments);\n    /**\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  },\n\n  /**\n   * @override\n   */\n  render: function render(axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    var animationModel = payload && payload.animation === false ? null : axisModel;\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\n  },\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: function (axisModel, ecModel, api, payload) {\n  //     this._brushController && this._brushController\n  //         .updateCovers(getCoverInfoList(axisModel));\n  // },\n  _refreshBrushController: function _refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      position: builderOpt.position\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  },\n  _onBrush: function _onBrush(coverInfoList, opt) {\n    // Do not cache these object, because the mey be changed.\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    this._brushController.dispose();\n  }\n});\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nvar _default = AxisView;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.color',\n  getInitialData: function getInitialData(option, ecModel) {\n    var source = this.getSource();\n    setEncodeAndDimensions(source, this);\n    return createListFromArray(source, this);\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function getRawIndicesByActiveState(activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      show: false\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      width: 1,\n      opacity: 0.45,\n      type: 'solid'\n    },\n    emphasis: {\n      label: {\n        show: false\n      }\n    },\n    progressive: 500,\n    smooth: false,\n    // true | false | number\n    animationEasing: 'linear'\n  }\n});\n\nfunction setEncodeAndDimensions(source, seriesModel) {\n  // The mapping of parallelAxis dimension to data dimension can\n  // be specified in parallelAxis.option.dim. For example, if\n  // parallelAxis.option.dim is 'dim3', it mapping to the third\n  // dimension of data. But `data.encode` has higher priority.\n  // Moreover, parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  if (source.encodeDefine) {\n    return;\n  }\n\n  var parallelModel = seriesModel.ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n\n  if (!parallelModel) {\n    return;\n  }\n\n  var encodeDefine = source.encodeDefine = createHashMap();\n  each(parallelModel.dimensions, function (axisDim) {\n    var dataDimIndex = convertDimNameToNumber(axisDim);\n    encodeDefine.set(axisDim, dataDimIndex);\n  });\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar DEFAULT_SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function init() {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n    /**\n     * @type {boolean}\n     */\n\n    this._initialized;\n  },\n\n  /**\n   * @override\n   */\n  render: function render(seriesModel, ecModel, api, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n    data.diff(oldData).add(add).update(update).remove(remove).execute();\n\n    function add(newDataIndex) {\n      var line = addEl(data, dataGroup, newDataIndex, dimensions, coordSys);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    } // First create\n\n\n    if (!this._initialized) {\n      this._initialized = true;\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(seriesModel, ecModel, api) {\n    this._initialized = true;\n    this._data = null;\n\n    this._dataGroup.removeAll();\n  },\n  incrementalRender: function incrementalRender(taskParams, seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n\n    for (var dataIndex = taskParams.start; dataIndex < taskParams.end; dataIndex++) {\n      var line = addEl(data, this._dataGroup, dataIndex, dimensions, coordSys);\n      line.incremental = true;\n      updateElCommon(line, data, dataIndex, seriesScope);\n    }\n  },\n  dispose: function dispose() {},\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function remove() {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(data.mapDimension(dimName), dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n  return line;\n}\n\nfunction makeSeriesScope(seriesModel) {\n  var smooth = seriesModel.get('smooth', true);\n  smooth === true && (smooth = DEFAULT_SMOOTH);\n  return {\n    lineStyle: seriesModel.getModel('lineStyle').getLineStyle(),\n    smooth: smooth != null ? smooth : DEFAULT_SMOOTH\n  };\n}\n\nfunction updateElCommon(el, data, dataIndex, seriesScope) {\n  var lineStyle = seriesScope.lineStyle;\n\n  if (data.hasItemOption) {\n    var lineStyleModel = data.getItemModel(dataIndex).getModel('lineStyle');\n    lineStyle = lineStyleModel.getLineStyle();\n  }\n\n  el.useStyle(lineStyle);\n  var elStyle = el.style;\n  elStyle.fill = null; // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n\n  elStyle.stroke = data.getItemVisual(dataIndex, 'color'); // lineStyle.opacity have been set to itemVisual in parallelVisual.\n\n  elStyle.opacity = data.getItemVisual(dataIndex, 'opacity');\n  seriesScope.smooth && (el.shape.smooth = seriesScope.smooth);\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\nvar _default = {\n  seriesType: 'parallel',\n  reset: function reset(seriesModel, ecModel, api) {\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    data.setVisual('color', color);\n\n    function progress(params, data) {\n      coordSys.eachActiveState(data, function (activeState, dataIndex) {\n        var opacity = opacityMap[activeState];\n\n        if (activeState === 'normal' && data.hasItemOption) {\n          var itemOpacity = data.getItemModel(dataIndex).get(opacityAccessPath, true);\n          itemOpacity != null && (opacity = itemOpacity);\n        }\n\n        data.setItemVisual(dataIndex, 'opacity', opacity);\n      }, params.start, params.end);\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./sankey/SankeySeries\");\n\nrequire(\"./sankey/SankeyView\");\n\nrequire(\"./sankey/sankeyAction\");\n\nvar sankeyLayout = require(\"./sankey/sankeyLayout\");\n\nvar sankeyVisual = require(\"./sankey/sankeyVisual\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerLayout(sankeyLayout);\necharts.registerVisual(sankeyVisual);","var SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\n\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function getInitialData(option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n  setNodePosition: function setNodePosition(dataIndex, localPosition) {\n    var dataItem = this.option.data[dataIndex];\n    dataItem.localX = localPosition[0];\n    dataItem.localY = localPosition[1];\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function getGraph() {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function getEdgeData() {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function formatTooltip(dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // the position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // the dx of the node\n    nodeWidth: 20,\n    // the vertical distance between two nodes\n    nodeGap: 8,\n    // control if the node can move or not\n    draggable: true,\n    // the number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      show: true,\n      position: 'right',\n      color: '#000',\n      fontSize: 12\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: '#333'\n    },\n    lineStyle: {\n      color: '#314656',\n      opacity: 0.2,\n      curveness: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  The file used to draw sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\n\n\nvar SankeyShape = graphic.extendShape({\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    cpx2: 0,\n    cpy2: 0,\n    extent: 0\n  },\n  buildPath: function buildPath(ctx, shape) {\n    var halfExtent = shape.extent / 2;\n    ctx.moveTo(shape.x1, shape.y1 - halfExtent);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1 - halfExtent, shape.cpx2, shape.cpy2 - halfExtent, shape.x2, shape.y2 - halfExtent);\n    ctx.lineTo(shape.x2, shape.y2 + halfExtent);\n    ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + halfExtent, shape.cpx1, shape.cpy1 + halfExtent, shape.x1, shape.y1 + halfExtent);\n    ctx.closePath();\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'sankey',\n\n  /**\n   * @private\n   * @type {module:echarts/chart/sankey/SankeySeries}\n   */\n  _model: null,\n  render: function render(seriesModel, ecModel, api) {\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo; // view width\n\n    var width = layoutInfo.width; // view height\n\n    var height = layoutInfo.height;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    this._model = seriesModel;\n    group.removeAll();\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyShape();\n      curve.dataIndex = edge.dataIndex;\n      curve.seriesIndex = seriesModel.seriesIndex;\n      curve.dataType = 'edge';\n      var lineStyleModel = edge.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var node1Model = edge.node1.getModel();\n      var dragX1 = node1Model.get('localX');\n      var dragY1 = node1Model.get('localY');\n      var n2Layout = edge.node2.getLayout();\n      var node2Model = edge.node2.getModel();\n      var dragX2 = node2Model.get('localX');\n      var dragY2 = node2Model.get('localY');\n      var edgeLayout = edge.getLayout();\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      var x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + n1Layout.dx;\n      var y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + edgeLayout.sy + edgeLayout.dy / 2;\n      var x2 = dragX2 != null ? dragX2 * width : n2Layout.x;\n      var y2 = (dragY2 != null ? dragY2 * height : n2Layout.y) + edgeLayout.ty + edgeLayout.dy / 2;\n      var cpx1 = x1 * (1 - curvature) + x2 * curvature;\n      var cpy1 = y1;\n      var cpx2 = x1 * curvature + x2 * (1 - curvature);\n      var cpy2 = y2;\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          break;\n      }\n\n      graphic.setHoverStyle(curve, edge.getModel('emphasis.lineStyle').getItemStyle());\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n    }); // generate a rect for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var dragX = itemModel.get('localX');\n      var dragY = itemModel.get('localY');\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var rect = new graphic.Rect({\n        shape: {\n          x: dragX != null ? dragX * width : layout.x,\n          y: dragY != null ? dragY * height : layout.y,\n          width: layout.dx,\n          height: layout.dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle()\n      });\n      var hoverStyle = node.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id,\n        isRectText: true\n      });\n      rect.setStyle('fill', node.getVisual('color'));\n      graphic.setHoverStyle(rect, hoverStyle);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      rect.dataType = 'node';\n    });\n    var draggable = seriesModel.get('draggable');\n\n    if (draggable) {\n      nodeData.eachItemGraphicEl(function (el, dataIndex) {\n        el.drift = function (dx, dy) {\n          this.shape.x += dx;\n          this.shape.y += dy;\n          this.dirty();\n          api.dispatchAction({\n            type: 'dragNode',\n            seriesId: seriesModel.id,\n            dataIndex: nodeData.getRawIndex(dataIndex),\n            localX: this.shape.x / width,\n            localY: this.shape.y / height\n          });\n        };\n\n        el.draggable = true;\n        el.cursor = 'move';\n      });\n    }\n\n    if (!this._data && seriesModel.get('animation')) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  },\n  dispose: function dispose() {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerAction({\n  type: 'dragNode',\n  event: 'dragNode',\n  // here can only use 'update' now, other value is not support in echarts.\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sankey',\n    query: payload\n  }, function (seriesModel) {\n    seriesModel.setNodePosition(payload.dataIndex, [payload.localX, payload.localY]);\n  });\n});","var layout = require(\"../../util/layout\");\n\nvar nest = require(\"../../util/array/nest\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file The layout algorithm of sankey view\n * @author Deqing Li(annong035@gmail.com)\n */\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations) {\n  computeNodeBreadths(nodes, edges, nodeWidth, width);\n  computeNodeDepths(nodes, edges, height, nodeGap, iterations);\n  computeEdgeDepths(nodes);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var value = Math.max(value1, value2);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node.\n * \n * Here we use Kahn algorithm to detect cycle when we traverse\n * the node to computer the initial x position.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, edges, nodeWidth, width) {\n  // Used to mark whether the edge is deleted. if it is deleted,\n  // the value is 0, otherwise it is 1.\n  var remainEdges = []; // Storage each node's indegree.\n\n  var indegreeArr = []; //Used to storage the node with indegree is equal to 0.\n\n  var zeroIndegrees = [];\n  var nextNode = [];\n  var x = 0;\n  var kx = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    remainEdges[i] = 1;\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    indegreeArr[i] = nodes[i].inEdges.length;\n\n    if (indegreeArr[i] === 0) {\n      zeroIndegrees.push(nodes[i]);\n    }\n  }\n\n  while (zeroIndegrees.length) {\n    zrUtil.each(zeroIndegrees, function (node) {\n      node.setLayout({\n        x: x\n      }, true);\n      node.setLayout({\n        dx: nodeWidth\n      }, true);\n      zrUtil.each(node.outEdges, function (edge) {\n        var indexEdge = edges.indexOf(edge);\n        remainEdges[indexEdge] = 0;\n        var targetNode = edge.node2;\n        var nodeIndex = nodes.indexOf(targetNode);\n\n        if (--indegreeArr[nodeIndex] === 0) {\n          nextNode.push(targetNode);\n        }\n      });\n    });\n    ++x;\n    zeroIndegrees = nextNode;\n    nextNode = [];\n  }\n\n  for (var i = 0; i < remainEdges.length; i++) {}\n\n  moveSinksRight(nodes, x);\n  kx = (width - nodeWidth) / (x - 1);\n  scaleNodeBreadths(nodes, kx);\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} x  value (x-1) use to assign to node without outEdges\n *     as x-position\n */\n\n\nfunction moveSinksRight(nodes, x) {\n  zrUtil.each(nodes, function (node) {\n    if (!node.outEdges.length) {\n      node.setLayout({\n        x: x - 1\n      }, true);\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx) {\n  zrUtil.each(nodes, function (node) {\n    var nodeX = node.getLayout().x * kx;\n    node.setLayout({\n      x: nodeX\n    }, true);\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, nodeGap, iterations) {\n  var nodesByBreadth = nest().key(function (d) {\n    return d.getLayout().x;\n  }).sortKeys(ascending).entries(nodes).map(function (d) {\n    return d.values;\n  });\n  initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap);\n  resolveCollisions(nodesByBreadth, nodeGap, height);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n    relaxLeftToRight(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n  }\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap) {\n  var kyArray = [];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n    var ky = (height - (n - 1) * nodeGap) / sum;\n    kyArray.push(ky);\n  });\n  kyArray.sort(function (a, b) {\n    return a - b;\n  });\n  var ky0 = kyArray[0];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      node.setLayout({\n        y: i\n      }, true);\n      var nodeDy = node.getLayout().value * ky0;\n      node.setLayout({\n        dy: nodeDy\n      }, true);\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * ky0;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var i;\n    nodes.sort(ascendingDepth);\n\n    for (i = 0; i < n; i++) {\n      node = nodes[i];\n      dy = y0 - node.getLayout().y;\n\n      if (dy > 0) {\n        var nodeY = node.getLayout().y + dy;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n\n      y0 = node.getLayout().y + node.getLayout().dy + nodeGap;\n    } // If the bottommost node goes outside the bounds, push it back up\n\n\n    dy = y0 - nodeGap - height;\n\n    if (dy > 0) {\n      var nodeY = node.getLayout().y - dy;\n      node.setLayout({\n        y: nodeY\n      }, true);\n      y0 = node.getLayout().y;\n\n      for (i = n - 2; i >= 0; --i) {\n        node = nodes[i];\n        dy = node.getLayout().y + node.getLayout().dy + nodeGap - y0;\n\n        if (dy > 0) {\n          nodeY = node.getLayout().y - dy;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n\n        y0 = node.getLayout().y;\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget) / sum(node.outEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge) {\n  return center(edge.node2) * edge.getValue();\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource) / sum(node.inEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedSource(edge) {\n  return center(edge.node1) * edge.getValue();\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes) {\n  zrUtil.each(nodes, function (node) {\n    node.outEdges.sort(ascendingTargetDepth);\n    node.inEdges.sort(ascendingSourceDepth);\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nfunction ascendingTargetDepth(a, b) {\n  return a.node2.getLayout().y - b.node2.getLayout().y;\n}\n\nfunction ascendingSourceDepth(a, b) {\n  return a.node1.getLayout().y - b.node1.getLayout().y;\n}\n\nfunction sum(array, f) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +f.call(array, array[i], i);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction center(node) {\n  return node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction ascendingDepth(a, b) {\n  return a.getLayout().y - b.getLayout().y;\n}\n\nfunction ascending(a, b) {\n  return a - b;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nmodule.exports = _default;","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual encoding for sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\n\n\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n\n    if (nodes.length) {\n      var minValue = Infinity;\n      var maxValue = -Infinity;\n      zrUtil.each(nodes, function (node) {\n        var nodeValue = node.getLayout().value;\n\n        if (nodeValue < minValue) {\n          minValue = nodeValue;\n        }\n\n        if (nodeValue > maxValue) {\n          maxValue = nodeValue;\n        }\n      });\n      zrUtil.each(nodes, function (node) {\n        var mapping = new VisualMapping({\n          type: 'color',\n          mappingMethod: 'linear',\n          dataExtent: [minValue, maxValue],\n          visual: seriesModel.get('color')\n        });\n        var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n        node.setVisual('color', mapValueToColor); // If set itemStyle.normal.color\n\n        var itemModel = node.getModel();\n        var customColor = itemModel.get('itemStyle.color');\n\n        if (customColor != null) {\n          node.setVisual('color', customColor);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./boxplot/BoxplotSeries\");\n\nrequire(\"./boxplot/BoxplotView\");\n\nvar boxplotVisual = require(\"./boxplot/boxplotVisual\");\n\nvar boxplotLayout = require(\"./boxplot/boxplotLayout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerVisual(boxplotVisual);\necharts.registerLayout(boxplotLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BoxplotSeries = SeriesModel.extend({\n  type: 'series.boxplot',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n  // TODO\n  // box width represents group size, so dimension should have 'size'.\n\n  /**\n   * @see <https://en.wikipedia.org/wiki/Box_plot>\n   * The meanings of 'min' and 'max' depend on user,\n   * and echarts do not need to know it.\n   * @readOnly\n   */\n  defaultValueDimensions: [{\n    name: 'min',\n    defaultTooltip: true\n  }, {\n    name: 'Q1',\n    defaultTooltip: true\n  }, {\n    name: 'median',\n    defaultTooltip: true\n  }, {\n    name: 'Q3',\n    defaultTooltip: true\n  }, {\n    name: 'max',\n    defaultTooltip: true\n  }],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    boxWidth: [7, 50],\n    // [min, max] can be percent of band width.\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2,\n        shadowBlur: 5,\n        shadowOffsetX: 2,\n        shadowOffsetY: 2,\n        shadowColor: 'rgba(0,0,0,0.4)'\n      }\n    },\n    animationEasing: 'elasticOut',\n    animationDuration: 800\n  }\n});\nzrUtil.mixin(BoxplotSeries, seriesModelMixin, true);\nvar _default = BoxplotSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Update common properties\n\n\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  render: function render(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var oldData = this._data; // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    var constDim = seriesModel.get('layout') === 'horizontal' ? 1 : 0;\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var itemLayout = data.getItemLayout(newIdx);\n        var symbolEl = createNormalBox(itemLayout, data, newIdx, constDim, true);\n        data.setItemGraphicEl(newIdx, symbolEl);\n        group.add(symbolEl);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(symbolEl);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!symbolEl) {\n        symbolEl = createNormalBox(itemLayout, data, newIdx, constDim);\n      } else {\n        updateNormalBoxData(itemLayout, symbolEl, data, newIdx);\n      }\n\n      group.add(symbolEl);\n      data.setItemGraphicEl(newIdx, symbolEl);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  remove: function remove(ecModel) {\n    var group = this.group;\n    var data = this._data;\n    this._data = null;\n    data && data.eachItemGraphicEl(function (el) {\n      el && group.remove(el);\n    });\n  },\n  dispose: zrUtil.noop\n});\nvar BoxPath = Path.extend({\n  type: 'boxplotBoxPath',\n  shape: {},\n  buildPath: function buildPath(ctx, shape) {\n    var ends = shape.points;\n    var i = 0;\n    ctx.moveTo(ends[i][0], ends[i][1]);\n    i++;\n\n    for (; i < 4; i++) {\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n\n    ctx.closePath();\n\n    for (; i < ends.length; i++) {\n      ctx.moveTo(ends[i][0], ends[i][1]);\n      i++;\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, data, dataIndex, constDim, isInit) {\n  var ends = itemLayout.ends;\n  var el = new BoxPath({\n    shape: {\n      points: isInit ? transInit(ends, constDim, itemLayout) : ends\n    }\n  });\n  updateNormalBoxData(itemLayout, el, data, dataIndex, isInit);\n  return el;\n}\n\nfunction updateNormalBoxData(itemLayout, el, data, dataIndex, isInit) {\n  var seriesModel = data.hostModel;\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\n  updateMethod(el, {\n    shape: {\n      points: itemLayout.ends\n    }\n  }, seriesModel, dataIndex);\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var borderColor = data.getItemVisual(dataIndex, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  itemStyle.stroke = borderColor;\n  itemStyle.strokeNoScale = true;\n  el.useStyle(itemStyle);\n  el.z2 = 100;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar borderColorQuery = ['itemStyle', 'borderColor'];\n\nfunction _default(ecModel, api) {\n  var globalColors = ecModel.get('color');\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      // Use name 'color' but not 'borderColor' for legend usage and\n      // visual coding from other component like dataRange.\n      color: seriesModel.get(borderColorQuery) || defaulColor\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        data.setItemVisual(idx, {\n          color: itemModel.get(borderColorQuery, true)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar each = zrUtil.each;\n\nfunction _default(ecModel) {\n  var groupResult = groupSeriesByAxis(ecModel);\n  each(groupResult, function (groupItem) {\n    var seriesModels = groupItem.seriesModels;\n\n    if (!seriesModels.length) {\n      return;\n    }\n\n    calculateBase(groupItem);\n    each(seriesModels, function (seriesModel, idx) {\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\n    });\n  });\n}\n/**\n * Group series by axis.\n */\n\n\nfunction groupSeriesByAxis(ecModel) {\n  var result = [];\n  var axisList = [];\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\n    var baseAxis = seriesModel.getBaseAxis();\n    var idx = zrUtil.indexOf(axisList, baseAxis);\n\n    if (idx < 0) {\n      idx = axisList.length;\n      axisList[idx] = baseAxis;\n      result[idx] = {\n        axis: baseAxis,\n        seriesModels: []\n      };\n    }\n\n    result[idx].seriesModels.push(seriesModel);\n  });\n  return result;\n}\n/**\n * Calculate offset and box width for each series.\n */\n\n\nfunction calculateBase(groupItem) {\n  var extent;\n  var baseAxis = groupItem.axis;\n  var seriesModels = groupItem.seriesModels;\n  var seriesCount = seriesModels.length;\n  var boxWidthList = groupItem.boxWidthList = [];\n  var boxOffsetList = groupItem.boxOffsetList = [];\n  var boundList = [];\n  var bandWidth;\n\n  if (baseAxis.type === 'category') {\n    bandWidth = baseAxis.getBandWidth();\n  } else {\n    var maxDataCount = 0;\n    each(seriesModels, function (seriesModel) {\n      maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\n    });\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount;\n  }\n\n  each(seriesModels, function (seriesModel) {\n    var boxWidthBound = seriesModel.get('boxWidth');\n\n    if (!zrUtil.isArray(boxWidthBound)) {\n      boxWidthBound = [boxWidthBound, boxWidthBound];\n    }\n\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\n  });\n  var availableWidth = bandWidth * 0.8 - 2;\n  var boxGap = availableWidth / seriesCount * 0.3;\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\n  var base = boxWidth / 2 - availableWidth / 2;\n  each(seriesModels, function (seriesModel, idx) {\n    boxOffsetList.push(base);\n    base += boxGap + boxWidth;\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\n  });\n}\n/**\n * Calculate points location for each series.\n */\n\n\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\n  var coordSys = seriesModel.coordinateSystem;\n  var data = seriesModel.getData();\n  var halfWidth = boxWidth / 2;\n  var cDimIdx = seriesModel.get('layout') === 'horizontal' ? 0 : 1;\n  var vDimIdx = 1 - cDimIdx;\n  var coordDims = ['x', 'y'];\n  var cDim = data.mapDimension(coordDims[cDimIdx]);\n  var vDims = data.mapDimension(coordDims[vDimIdx], true);\n\n  if (cDim == null || vDims.length < 5) {\n    return;\n  }\n\n  for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n    var axisDimVal = data.get(cDim, dataIndex);\n    var median = getPoint(axisDimVal, vDims[2], dataIndex);\n    var end1 = getPoint(axisDimVal, vDims[0], dataIndex);\n    var end2 = getPoint(axisDimVal, vDims[1], dataIndex);\n    var end4 = getPoint(axisDimVal, vDims[3], dataIndex);\n    var end5 = getPoint(axisDimVal, vDims[4], dataIndex);\n    var ends = [];\n    addBodyEnd(ends, end2, 0);\n    addBodyEnd(ends, end4, 1);\n    ends.push(end1, end2, end5, end4);\n    layEndLine(ends, end1);\n    layEndLine(ends, end5);\n    layEndLine(ends, median);\n    data.setItemLayout(dataIndex, {\n      initBaseline: median[vDimIdx],\n      ends: ends\n    });\n  }\n\n  function getPoint(axisDimVal, dimIdx, dataIndex) {\n    var val = data.get(dimIdx, dataIndex);\n    var p = [];\n    p[cDimIdx] = axisDimVal;\n    p[vDimIdx] = val;\n    var point;\n\n    if (isNaN(axisDimVal) || isNaN(val)) {\n      point = [NaN, NaN];\n    } else {\n      point = coordSys.dataToPoint(p);\n      point[cDimIdx] += offset;\n    }\n\n    return point;\n  }\n\n  function addBodyEnd(ends, point, start) {\n    var point1 = point.slice();\n    var point2 = point.slice();\n    point1[cDimIdx] += halfWidth;\n    point2[cDimIdx] -= halfWidth;\n    start ? ends.push(point1, point2) : ends.push(point2, point1);\n  }\n\n  function layEndLine(ends, endCenter) {\n    var from = endCenter.slice();\n    var to = endCenter.slice();\n    from[cDimIdx] -= halfWidth;\n    to[cDimIdx] += halfWidth;\n    ends.push(from, to);\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./candlestick/CandlestickSeries\");\n\nrequire(\"./candlestick/CandlestickView\");\n\nvar preprocessor = require(\"./candlestick/preprocessor\");\n\nvar candlestickVisual = require(\"./candlestick/candlestickVisual\");\n\nvar candlestickLayout = require(\"./candlestick/candlestickLayout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerPreprocessor(preprocessor);\necharts.registerVisual(candlestickVisual);\necharts.registerLayout(candlestickLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar CandlestickSeries = SeriesModel.extend({\n  type: 'series.candlestick',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n\n  /**\n   * @readOnly\n   */\n  defaultValueDimensions: [{\n    name: 'open',\n    defaultTooltip: true\n  }, {\n    name: 'close',\n    defaultTooltip: true\n  }, {\n    name: 'lowest',\n    defaultTooltip: true\n  }, {\n    name: 'highest',\n    defaultTooltip: true\n  }],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    itemStyle: {\n      color: '#c23531',\n      // 阳线 positive\n      color0: '#314656',\n      // 阴线 negative     '#c23531', '#314656'\n      borderWidth: 1,\n      // FIXME\n      // ec2中使用的是lineStyle.color 和 lineStyle.color0\n      borderColor: '#c23531',\n      borderColor0: '#314656'\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2\n      }\n    },\n    barMaxWidth: null,\n    barMinWidth: null,\n    barWidth: null,\n    large: true,\n    largeThreshold: 600,\n    progressive: 5e3,\n    progressiveThreshold: 1e4,\n    progressiveChunkMode: 'mod',\n    animationUpdate: false,\n    animationEasing: 'linear',\n    animationDuration: 300\n  },\n\n  /**\n   * Get dimension for shadow in dataZoom\n   * @return {string} dimension name\n   */\n  getShadowDim: function getShadowDim() {\n    return 'open';\n  },\n  brushSelector: function brushSelector(dataIndex, data, selectors) {\n    var itemLayout = data.getItemLayout(dataIndex);\n    return itemLayout && selectors.rect(itemLayout.brushRect);\n  }\n});\nzrUtil.mixin(CandlestickSeries, seriesModelMixin, true);\nvar _default = CandlestickSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar SKIP_PROPS = ['color', 'color0', 'borderColor', 'borderColor0'];\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  render: function render(seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    this._isLargeDraw ? this._renderLarge(seriesModel) : this._renderNormal(seriesModel);\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function incrementalRender(params, seriesModel, ecModel, api) {\n    this._isLargeDraw ? this._incrementalRenderLarge(params, seriesModel) : this._incrementalRenderNormal(params, seriesModel);\n  },\n  _updateDrawMode: function _updateDrawMode(seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function _renderNormal(seriesModel) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var isSimpleBox = data.getLayout('isSimpleBox'); // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var el;\n        var itemLayout = data.getItemLayout(newIdx);\n        el = createNormalBox(itemLayout, newIdx, true);\n        graphic.initProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n        setBoxCommon(el, data, newIdx, isSimpleBox);\n        group.add(el);\n        data.setItemGraphicEl(newIdx, el);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!el) {\n        el = createNormalBox(itemLayout, newIdx);\n      } else {\n        graphic.updateProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n      }\n\n      setBoxCommon(el, data, newIdx, isSimpleBox);\n      group.add(el);\n      data.setItemGraphicEl(newIdx, el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function _renderLarge(seriesModel) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderNormal: function _incrementalRenderNormal(params, seriesModel) {\n    var data = seriesModel.getData();\n    var isSimpleBox = data.getLayout('isSimpleBox');\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var el;\n      var itemLayout = data.getItemLayout(dataIndex);\n      el = createNormalBox(itemLayout, dataIndex);\n      setBoxCommon(el, data, dataIndex, isSimpleBox);\n      el.incremental = true;\n      this.group.add(el);\n    }\n  },\n  _incrementalRenderLarge: function _incrementalRenderLarge(params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  remove: function remove(ecModel) {\n    this._clear();\n  },\n  _clear: function _clear() {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: zrUtil.noop\n});\nvar NormalBoxPath = Path.extend({\n  type: 'normalCandlestickBox',\n  shape: {},\n  buildPath: function buildPath(ctx, shape) {\n    var ends = shape.points;\n\n    if (this.__simpleBox) {\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[6][0], ends[6][1]);\n    } else {\n      ctx.moveTo(ends[0][0], ends[0][1]);\n      ctx.lineTo(ends[1][0], ends[1][1]);\n      ctx.lineTo(ends[2][0], ends[2][1]);\n      ctx.lineTo(ends[3][0], ends[3][1]);\n      ctx.closePath();\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[5][0], ends[5][1]);\n      ctx.moveTo(ends[6][0], ends[6][1]);\n      ctx.lineTo(ends[7][0], ends[7][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, dataIndex, isInit) {\n  var ends = itemLayout.ends;\n  return new NormalBoxPath({\n    shape: {\n      points: isInit ? transInit(ends, itemLayout) : ends\n    },\n    z2: 100\n  });\n}\n\nfunction setBoxCommon(el, data, dataIndex, isSimpleBox) {\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var color = data.getItemVisual(dataIndex, 'color');\n  var borderColor = data.getItemVisual(dataIndex, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.strokeNoScale = true;\n  el.style.fill = color;\n  el.style.stroke = borderColor;\n  el.__simpleBox = isSimpleBox;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[1] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar LargeBoxPath = Path.extend({\n  type: 'largeCandlestickBox',\n  shape: {},\n  buildPath: function buildPath(ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n\n    for (var i = 0; i < points.length;) {\n      if (this.__sign === points[i++]) {\n        var x = points[i++];\n        ctx.moveTo(x, points[i++]);\n        ctx.lineTo(x, points[i++]);\n      } else {\n        i += 3;\n      }\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  var data = seriesModel.getData();\n  var largePoints = data.getLayout('largePoints');\n  var elP = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: 1\n  });\n  group.add(elP);\n  var elN = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: -1\n  });\n  group.add(elN);\n  setLargeStyle(1, elP, seriesModel, data);\n  setLargeStyle(-1, elN, seriesModel, data);\n\n  if (incremental) {\n    elP.incremental = true;\n    elN.incremental = true;\n  }\n}\n\nfunction setLargeStyle(sign, el, seriesModel, data) {\n  var suffix = sign > 0 ? 'P' : 'N';\n  var borderColor = data.getVisual('borderColor' + suffix) || data.getVisual('color' + suffix); // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = seriesModel.getModel(NORMAL_ITEM_STYLE_PATH).getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor; // No different\n  // el.style.lineWidth = .5;\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(option) {\n  if (!option || !zrUtil.isArray(option.series)) {\n    return;\n  } // Translate 'k' to 'candlestick'.\n\n\n  zrUtil.each(option.series, function (seriesItem) {\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n      seriesItem.type = 'candlestick';\n    }\n  });\n}\n\nmodule.exports = _default;","var createRenderPlanner = require(\"../helper/createRenderPlanner\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  // For legend.\n  performRawSeries: true,\n  reset: function reset(seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var isLargeRender = seriesModel.pipelineContext.large;\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      colorP: getColor(1, seriesModel),\n      colorN: getColor(-1, seriesModel),\n      borderColorP: getBorderColor(1, seriesModel),\n      borderColorN: getBorderColor(-1, seriesModel)\n    }); // Only visible series has each data be visual encoded\n\n    if (ecModel.isSeriesFiltered(seriesModel)) {\n      return;\n    }\n\n    return !isLargeRender && {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var itemModel = data.getItemModel(dataIndex);\n        var sign = data.getItemLayout(dataIndex).sign;\n        data.setItemVisual(dataIndex, {\n          color: getColor(sign, itemModel),\n          borderColor: getBorderColor(sign, itemModel)\n        });\n      }\n    }\n\n    function getColor(sign, model) {\n      return model.get(sign > 0 ? positiveColorQuery : negativeColorQuery);\n    }\n\n    function getBorderColor(sign, model) {\n      return model.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery);\n    }\n  }\n};\nmodule.exports = _default;","var _graphic = require(\"../../util/graphic\");\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\n\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar retrieve2 = _util.retrieve2;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  reset: function reset(seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var cDimIdx = 0;\n    var vDimIdx = 1;\n    var coordDims = ['x', 'y'];\n    var cDim = data.mapDimension(coordDims[cDimIdx]);\n    var vDims = data.mapDimension(coordDims[vDimIdx], true);\n    var openDim = vDims[0];\n    var closeDim = vDims[1];\n    var lowestDim = vDims[2];\n    var highestDim = vDims[3];\n    data.setLayout({\n      candleWidth: candleWidth,\n      // The value is experimented visually.\n      isSimpleBox: candleWidth <= 1.3\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    return {\n      progress: seriesModel.pipelineContext.large ? largeProgress : normalProgress\n    };\n\n    function normalProgress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = data.get(cDim, dataIndex);\n        var openVal = data.get(openDim, dataIndex);\n        var closeVal = data.get(closeDim, dataIndex);\n        var lowestVal = data.get(lowestDim, dataIndex);\n        var highestVal = data.get(highestDim, dataIndex);\n        var ocLow = Math.min(openVal, closeVal);\n        var ocHigh = Math.max(openVal, closeVal);\n        var ocLowPoint = getPoint(ocLow, axisDimVal);\n        var ocHighPoint = getPoint(ocHigh, axisDimVal);\n        var lowestPoint = getPoint(lowestVal, axisDimVal);\n        var highestPoint = getPoint(highestVal, axisDimVal);\n        var ends = [];\n        addBodyEnd(ends, ocHighPoint, 0);\n        addBodyEnd(ends, ocLowPoint, 1);\n        ends.push(subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint), subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint));\n        data.setItemLayout(dataIndex, {\n          sign: getSign(data, dataIndex, openVal, closeVal, closeDim),\n          initBaseline: openVal > closeVal ? ocHighPoint[vDimIdx] : ocLowPoint[vDimIdx],\n          // open point.\n          ends: ends,\n          brushRect: makeBrushRect(lowestVal, highestVal, axisDimVal)\n        });\n      }\n\n      function getPoint(val, axisDimVal) {\n        var p = [];\n        p[cDimIdx] = axisDimVal;\n        p[vDimIdx] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(ends, point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[cDimIdx] = subPixelOptimize(point1[cDimIdx] + candleWidth / 2, 1, false);\n        point2[cDimIdx] = subPixelOptimize(point2[cDimIdx] - candleWidth / 2, 1, true);\n        start ? ends.push(point1, point2) : ends.push(point2, point1);\n      }\n\n      function makeBrushRect(lowestVal, highestVal, axisDimVal) {\n        var pmin = getPoint(lowestVal, axisDimVal);\n        var pmax = getPoint(highestVal, axisDimVal);\n        pmin[cDimIdx] -= candleWidth / 2;\n        pmax[cDimIdx] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: vDimIdx ? candleWidth : pmax[0] - pmin[0],\n          height: vDimIdx ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[cDimIdx] = subPixelOptimize(point[cDimIdx], 1);\n        return point;\n      }\n    }\n\n    function largeProgress(params, data) {\n      // Structure: [sign, x, yhigh, ylow, sign, x, yhigh, ylow, ...]\n      var points = new LargeArr(params.count * 5);\n      var offset = 0;\n      var point;\n      var tmpIn = [];\n      var tmpOut = [];\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = data.get(cDim, dataIndex);\n        var openVal = data.get(openDim, dataIndex);\n        var closeVal = data.get(closeDim, dataIndex);\n        var lowestVal = data.get(lowestDim, dataIndex);\n        var highestVal = data.get(highestDim, dataIndex);\n\n        if (isNaN(axisDimVal) || isNaN(lowestVal) || isNaN(highestVal)) {\n          points[offset++] = NaN;\n          offset += 4;\n          continue;\n        }\n\n        points[offset++] = getSign(data, dataIndex, openVal, closeVal, closeDim);\n        tmpIn[cDimIdx] = axisDimVal;\n        tmpIn[vDimIdx] = lowestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[0] : NaN;\n        points[offset++] = point ? point[1] : NaN;\n        tmpIn[vDimIdx] = highestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[1] : NaN;\n      }\n\n      data.setLayout('largePoints', points);\n    }\n  }\n};\n\nfunction getSign(data, dataIndex, openVal, closeVal, closeDim) {\n  var sign;\n\n  if (openVal > closeVal) {\n    sign = -1;\n  } else if (openVal < closeVal) {\n    sign = 1;\n  } else {\n    sign = dataIndex > 0 // If close === open, compare with close of last record\n    ? data.get(closeDim, dataIndex - 1) <= closeVal ? 1 : -1 : // No record of previous, set to be positive\n    1;\n  }\n\n  return sign;\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./effectScatter/EffectScatterSeries\");\n\nrequire(\"./effectScatter/EffectScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerVisual(visualSymbol('effectScatter', 'circle'));\necharts.registerLayout(layoutPoints('effectScatter'));","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = SeriesModel.extend({\n  type: 'series.effectScatter',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    // When to show the effect, option: 'render'|'emphasis'\n    showEffectOn: 'render',\n    // Ripple effect config\n    rippleEffect: {\n      period: 4,\n      // Scale of ripple\n      scale: 2.5,\n      // Brush type can be fill or stroke\n      brushType: 'fill'\n    },\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10 // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    // large: false,\n    // Available when large is true\n    // largeThreshold: 2000,\n    // itemStyle: {\n    //     opacity: 1\n    // }\n\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar EffectSymbol = require(\"../helper/EffectSymbol\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar pointsLayout = require(\"../../layout/points\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendChartView({\n  type: 'effectScatter',\n  init: function init() {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  },\n  render: function render(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data);\n    this.group.add(effectSymbolDraw.group);\n  },\n  updateTransform: function updateTransform(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    this.group.dirty();\n    var res = pointsLayout().reset(seriesModel);\n\n    if (res.progress) {\n      res.progress({\n        start: 0,\n        end: data.count()\n      }, data);\n    }\n\n    this._symbolDraw.updateLayout(data);\n  },\n  _updateGroupTransform: function _updateGroupTransform(seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.getRoamTransform) {\n      this.group.transform = matrix.clone(coordSys.getRoamTransform());\n      this.group.decomposeTransform();\n    }\n  },\n  remove: function remove(ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api);\n  },\n  dispose: function dispose() {}\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar Group = _graphic.Group;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar SymbolClz = require(\"./Symbol\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Symbol with ripple effect\n * @module echarts/chart/helper/EffectSymbol\n */\n\n\nvar EFFECT_RIPPLE_NUMBER = 3;\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nfunction updateRipplePath(rippleGroup, effectCfg) {\n  rippleGroup.eachChild(function (ripplePath) {\n    ripplePath.attr({\n      z: effectCfg.z,\n      zlevel: effectCfg.zlevel,\n      style: {\n        stroke: effectCfg.brushType === 'stroke' ? effectCfg.color : null,\n        fill: effectCfg.brushType === 'fill' ? effectCfg.color : null\n      }\n    });\n  });\n}\n/**\n * @constructor\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction EffectSymbol(data, idx) {\n  Group.call(this);\n  var symbol = new SymbolClz(data, idx);\n  var rippleGroup = new Group();\n  this.add(symbol);\n  this.add(rippleGroup);\n\n  rippleGroup.beforeUpdate = function () {\n    this.attr(symbol.getScale());\n  };\n\n  this.updateData(data, idx);\n}\n\nvar effectSymbolProto = EffectSymbol.prototype;\n\neffectSymbolProto.stopEffectAnimation = function () {\n  this.childAt(1).removeAll();\n};\n\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\n  var symbolType = effectCfg.symbolType;\n  var color = effectCfg.color;\n  var rippleGroup = this.childAt(1);\n\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\n    // var ripplePath = createSymbol(\n    //     symbolType, -0.5, -0.5, 1, 1, color\n    // );\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4136.\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\n    ripplePath.attr({\n      style: {\n        strokeNoScale: true\n      },\n      z2: 99,\n      silent: true,\n      scale: [0.5, 0.5]\n    });\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\n\n    ripplePath.animate('', true).when(effectCfg.period, {\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\n    }).delay(delay).start();\n    ripplePath.animateStyle(true).when(effectCfg.period, {\n      opacity: 0\n    }).delay(delay).start();\n    rippleGroup.add(ripplePath);\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Update effect symbol\n */\n\n\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\n  var oldEffectCfg = this._effectCfg;\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\n\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\n\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\n    var propName = DIFFICULT_PROPS[i];\n\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\n      this.stopEffectAnimation();\n      this.startEffectAnimation(effectCfg);\n      return;\n    }\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Highlight symbol\n */\n\n\neffectSymbolProto.highlight = function () {\n  this.trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\neffectSymbolProto.downplay = function () {\n  this.trigger('normal');\n};\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\neffectSymbolProto.updateData = function (data, idx) {\n  var seriesModel = data.hostModel;\n  this.childAt(0).updateData(data, idx);\n  var rippleGroup = this.childAt(1);\n  var itemModel = data.getItemModel(idx);\n  var symbolType = data.getItemVisual(idx, 'symbol');\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  var color = data.getItemVisual(idx, 'color');\n  rippleGroup.attr('scale', symbolSize);\n  rippleGroup.traverse(function (ripplePath) {\n    ripplePath.attr({\n      fill: color\n    });\n  });\n  var symbolOffset = itemModel.getShallow('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = rippleGroup.position;\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  rippleGroup.rotation = (itemModel.getShallow('symbolRotate') || 0) * Math.PI / 180 || 0;\n  var effectCfg = {};\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\n  effectCfg.effectOffset = idx / data.count();\n  effectCfg.z = itemModel.getShallow('z') || 0;\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\n  effectCfg.symbolType = symbolType;\n  effectCfg.color = color;\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (effectCfg.showEffectOn === 'render') {\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\n    this._effectCfg = effectCfg;\n  } else {\n    // Not keep old effect config\n    this._effectCfg = null;\n    this.stopEffectAnimation();\n    var symbol = this.childAt(0);\n\n    var onEmphasis = function onEmphasis() {\n      symbol.highlight();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.startEffectAnimation(effectCfg);\n      }\n    };\n\n    var onNormal = function onNormal() {\n      symbol.downplay();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.stopEffectAnimation();\n      }\n    };\n\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\n  }\n\n  this._effectCfg = effectCfg;\n};\n\neffectSymbolProto.fadeOut = function (cb) {\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  cb && cb();\n};\n\nzrUtil.inherits(EffectSymbol, Group);\nvar _default = EffectSymbol;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./lines/LinesSeries\");\n\nrequire(\"./lines/LinesView\");\n\nvar linesLayout = require(\"./lines/linesLayout\");\n\nvar linesVisual = require(\"./lines/linesVisual\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerLayout(linesLayout);\necharts.registerVisual(linesVisual);","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar concatArray = _util.concatArray;\nvar mergeAll = _util.mergeAll;\nvar map = _util.map;\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar Uint32Arr = typeof Uint32Array === 'undefined' ? Array : Uint32Array;\nvar Float64Arr = typeof Float64Array === 'undefined' ? Array : Float64Array;\n\nfunction compatEc2(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    seriesOpt.data = map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeries = SeriesModel.extend({\n  type: 'series.lines',\n  dependencies: ['grid', 'polar'],\n  visualColorAccessPath: 'lineStyle.color',\n  init: function init(option) {\n    // The input data may be null/undefined.\n    option.data = option.data || []; // Not using preprocessor because mergeOption may not have series.type\n\n    compatEc2(option);\n\n    var result = this._processFlatCoordsArray(option.data);\n\n    this._flatCoords = result.flatCoords;\n    this._flatCoordsOffset = result.flatCoordsOffset;\n\n    if (result.flatCoords) {\n      option.data = new Float32Array(result.count);\n    }\n\n    LinesSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function mergeOption(option) {\n    // The input data may be null/undefined.\n    option.data = option.data || [];\n    compatEc2(option);\n\n    if (option.data) {\n      // Only update when have option data to merge.\n      var result = this._processFlatCoordsArray(option.data);\n\n      this._flatCoords = result.flatCoords;\n      this._flatCoordsOffset = result.flatCoordsOffset;\n\n      if (result.flatCoords) {\n        option.data = new Float32Array(result.count);\n      }\n    }\n\n    LinesSeries.superApply(this, 'mergeOption', arguments);\n  },\n  appendData: function appendData(params) {\n    var result = this._processFlatCoordsArray(params.data);\n\n    if (result.flatCoords) {\n      if (!this._flatCoords) {\n        this._flatCoords = result.flatCoords;\n        this._flatCoordsOffset = result.flatCoordsOffset;\n      } else {\n        this._flatCoords = concatArray(this._flatCoords, result.flatCoords);\n        this._flatCoordsOffset = concatArray(this._flatCoordsOffset, result.flatCoordsOffset);\n      }\n\n      params.data = new Float32Array(result.count);\n    }\n\n    this.getRawData().appendData(params.data);\n  },\n  _getCoordsFromItemModel: function _getCoordsFromItemModel(idx) {\n    var itemModel = this.getData().getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\n    return coords;\n  },\n  getLineCoordsCount: function getLineCoordsCount(idx) {\n    if (this._flatCoordsOffset) {\n      return this._flatCoordsOffset[idx * 2 + 1];\n    } else {\n      return this._getCoordsFromItemModel(idx).length;\n    }\n  },\n  getLineCoords: function getLineCoords(idx, out) {\n    if (this._flatCoordsOffset) {\n      var offset = this._flatCoordsOffset[idx * 2];\n      var len = this._flatCoordsOffset[idx * 2 + 1];\n\n      for (var i = 0; i < len; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = this._flatCoords[offset + i * 2];\n        out[i][1] = this._flatCoords[offset + i * 2 + 1];\n      }\n\n      return len;\n    } else {\n      var coords = this._getCoordsFromItemModel(idx);\n\n      for (var i = 0; i < coords.length; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = coords[i][0];\n        out[i][1] = coords[i][1];\n      }\n\n      return coords.length;\n    }\n  },\n  _processFlatCoordsArray: function _processFlatCoordsArray(data) {\n    var startOffset = 0;\n\n    if (this._flatCoords) {\n      startOffset = this._flatCoords.length;\n    } // Stored as a typed array. In format\n    // Points Count(2) | x | y | x | y | Points Count(3) | x |  y | x | y | x | y |\n\n\n    if (typeof data[0] === 'number') {\n      var len = data.length; // Store offset and len of each segment\n\n      var coordsOffsetAndLenStorage = new Uint32Arr(len);\n      var coordsStorage = new Float64Arr(len);\n      var coordsCursor = 0;\n      var offsetCursor = 0;\n      var dataCount = 0;\n\n      for (var i = 0; i < len;) {\n        dataCount++;\n        var count = data[i++]; // Offset\n\n        coordsOffsetAndLenStorage[offsetCursor++] = coordsCursor + startOffset; // Len\n\n        coordsOffsetAndLenStorage[offsetCursor++] = count;\n\n        for (var k = 0; k < count; k++) {\n          var x = data[i++];\n          var y = data[i++];\n          coordsStorage[coordsCursor++] = x;\n          coordsStorage[coordsCursor++] = y;\n\n          if (i > len) {}\n        }\n      }\n\n      return {\n        flatCoordsOffset: new Uint32Array(coordsOffsetAndLenStorage.buffer, 0, offsetCursor),\n        flatCoords: coordsStorage,\n        count: dataCount\n      };\n    }\n\n    return {\n      flatCoordsOffset: null,\n      flatCoords: null,\n      count: data.length\n    };\n  },\n  getInitialData: function getInitialData(option, ecModel) {\n    var lineData = new List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  formatTooltip: function formatTooltip(dataIndex) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var html = [];\n    fromName != null && html.push(fromName);\n    toName != null && html.push(toName);\n    return encodeHTML(html.join(' > '));\n  },\n  preventIncremental: function preventIncremental() {\n    return !!this.get('effect.show');\n  },\n  getProgressive: function getProgressive() {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      return this.option.large ? 1e4 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function getProgressiveThreshold() {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      return this.option.large ? 2e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      // Animation delay. support callback\n      // delay: 0,\n      // If move with constant speed px/sec\n      // period will be ignored if this property is > 0,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      // Length of trail, 0 - 1\n      trailLength: 0.2 // Same with lineStyle.color\n      // color\n\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // If lines are polyline\n    // polyline not support curveness, label, animation\n    polyline: false,\n    label: {\n      show: false,\n      position: 'end' // distance: 5,\n      // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    lineStyle: {\n      opacity: 0.5\n    }\n  }\n});\nvar _default = LinesSeries;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar EffectLine = require(\"../helper/EffectLine\");\n\nvar Line = require(\"../helper/Line\");\n\nvar Polyline = require(\"../helper/Polyline\");\n\nvar EffectPolyline = require(\"../helper/EffectPolyline\");\n\nvar LargeLineDraw = require(\"../helper/LargeLineDraw\");\n\nvar linesLayout = require(\"./linesLayout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function init() {},\n  render: function render(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (this._showEffect(seriesModel) && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    lineDraw.updateData(data);\n    this._lastZlevel = zlevel;\n    this._finished = true;\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    lineDraw.incrementalPrepareUpdate(data);\n\n    this._clearLayer(api);\n\n    this._finished = false;\n  },\n  incrementalRender: function incrementalRender(taskParams, seriesModel, ecModel) {\n    this._lineDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function updateTransform(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var pipelineContext = seriesModel.pipelineContext;\n\n    if (!this._finished || pipelineContext.large || pipelineContext.progressiveRender) {\n      // TODO Don't have to do update in large mode. Only do it when there are millions of data.\n      return {\n        update: true\n      };\n    } else {\n      // TODO Use same logic with ScatterView.\n      // Manually update layout\n      var res = linesLayout.reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._lineDraw.updateLayout();\n\n      this._clearLayer(api);\n    }\n  },\n  _updateLineDraw: function _updateLineDraw(data, seriesModel) {\n    var lineDraw = this._lineDraw;\n\n    var hasEffect = this._showEffect(seriesModel);\n\n    var isPolyline = !!seriesModel.get('polyline');\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!lineDraw || hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLargeDraw !== this._isLargeDraw) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLargeDraw ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(lineDraw.group);\n    return lineDraw;\n  },\n  _showEffect: function _showEffect(seriesModel) {\n    return !!seriesModel.get('effect.show');\n  },\n  _clearLayer: function _clearLayer(api) {\n    // Not use motion when dragging or zooming\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg && this._lastZlevel != null) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function remove(ecModel, api) {\n    this._lineDraw && this._lineDraw.remove();\n    this._lineDraw = null; // Clear motion when lineDraw is removed\n\n    this._clearLayer(api);\n  },\n  dispose: function dispose() {}\n});\n\nmodule.exports = _default;","var Polyline = require(\"./Polyline\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar EffectLine = require(\"./EffectLine\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:echarts/chart/helper/EffectLine}\n * @alias {module:echarts/chart/helper/Polyline}\n */\n\n\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nvar lineContain = require(\"zrender/lib/contain/line\");\n\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\n\n\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    curveness: 0,\n    segs: []\n  },\n  buildPath: function buildPath(path, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          path.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            path.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        path.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          path.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          path.lineTo(x1, y1);\n        }\n      }\n    }\n  },\n  findDataIndex: function findDataIndex(x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n\nlargeLineProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = new LargeLineShape({\n    rectHover: true,\n    cursor: 'default'\n  });\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data); // Add back\n\n\n  this.group.add(lineEl);\n  this._incremental = null;\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental();\n\n  if (data.count() > 5e5) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalUpdate = function (taskParams, data) {\n  var lineEl = new LargeLineShape();\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data, !!this._incremental);\n\n  if (!this._incremental) {\n    lineEl.rectHover = true;\n    lineEl.cursor = 'default';\n    lineEl.__startIndex = taskParams.start;\n    this.group.add(lineEl);\n  } else {\n    this._incremental.addDisplayable(lineEl, true);\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeLineProto._setCommon = function (lineEl, data, isIncremental) {\n  var hostModel = data.hostModel;\n  lineEl.setShape({\n    polyline: hostModel.get('polyline'),\n    curveness: hostModel.get('lineStyle.curveness')\n  });\n  lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n  lineEl.style.strokeNoScale = true;\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill');\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    lineEl.seriesIndex = hostModel.seriesIndex;\n    lineEl.on('mousemove', function (e) {\n      lineEl.dataIndex = null;\n      var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex > 0) {\n        // Provide dataIndex for tooltip\n        lineEl.dataIndex = dataIndex + lineEl.__startIndex;\n      }\n    });\n  }\n};\n\nlargeLineProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nvar opacityQuery = 'lineStyle.opacity'.split('.');\nvar _default = {\n  seriesType: 'lines',\n  reset: function reset(seriesModel, ecModel, api) {\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var data = seriesModel.getData();\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nmodule.exports = _default;","require(\"./heatmap/HeatmapSeries\");\n\nrequire(\"./heatmap/HeatmapView\");","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      generateCoord: 'value'\n    });\n  },\n  preventIncremental: function preventIncremental() {\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\n\n    if (coordSysCreator && coordSysCreator.dimensions) {\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\n    }\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar HeatmapLayer = require(\"./HeatmapLayer\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function render(seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    this._incrementalDisplayable = null;\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(seriesModel, api, 0, seriesModel.getData().count());\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(seriesModel, ecModel, api) {\n    this.group.removeAll();\n  },\n  incrementalRender: function incrementalRender(params, seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys) {\n      this._renderOnCartesianAndCalendar(seriesModel, api, params.start, params.end, true);\n    }\n  },\n  _renderOnCartesianAndCalendar: function _renderOnCartesianAndCalendar(seriesModel, api, start, end, incremental) {\n    var coordSys = seriesModel.coordinateSystem;\n    var width;\n    var height;\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      width = xAxis.getBandWidth();\n      height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle';\n    var hoverItemStyleQuery = 'emphasis.itemStyle';\n    var labelQuery = 'label';\n    var hoverLabelQuery = 'emphasis.label';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel(labelQuery);\n    var hoverLabelModel = seriesModel.getModel(hoverLabelQuery);\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [data.mapDimension('x'), data.mapDimension('y'), data.mapDimension('value')] : [data.mapDimension('time'), data.mapDimension('value')];\n\n    for (var idx = start; idx < end; idx++) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          continue;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          continue;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      rect.incremental = incremental; // PENDING\n\n      if (incremental) {\n        // Rect must use hover layer if it's incremental.\n        rect.useHoverLayer = true;\n      }\n\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    }\n  },\n  _renderOnGeo: function _renderOnGeo(geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform();\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var dims = [data.mapDimension('lng'), data.mapDimension('lat'), data.mapDimension('value')];\n    var points = data.mapArray(dims, function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  },\n  dispose: function dispose() {}\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file defines echarts Heatmap Chart\n * @author Ovilia (me@zhangwenli.com)\n * Inspired by https://github.com/mourner/simpleheat\n *\n * @module\n */\n\n\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function update(data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function _getBrush() {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function _getGradient(data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/PictorialBarSeries\");\n\nrequire(\"./bar/PictorialBarView\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nrequire(\"../component/gridSimple\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\n\n\necharts.registerLayout(zrUtil.curry(layout, 'pictorialBar'));\necharts.registerVisual(visualSymbol('pictorialBar', 'roundRect'));","var BaseBarSeries = require(\"./BaseBarSeries\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PictorialBarSeries = BaseBarSeries.extend({\n  type: 'series.pictorialBar',\n  dependencies: ['grid'],\n  defaultOption: {\n    symbol: 'circle',\n    // Customized bar shape\n    symbolSize: null,\n    // Can be ['100%', '100%'], null means auto.\n    symbolRotate: null,\n    symbolPosition: null,\n    // 'start' or 'end' or 'center', null means auto.\n    symbolOffset: null,\n    symbolMargin: null,\n    // start margin and end margin. Can be a number or a percent string.\n    // Auto margin by defualt.\n    symbolRepeat: false,\n    // false/null/undefined, means no repeat.\n    // Can be true, means auto calculate repeat times and cut by data.\n    // Can be a number, specifies repeat times, and do not cut by data.\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\n    symbolRepeatDirection: 'end',\n    // 'end' means from 'start' to 'end'.\n    symbolClip: false,\n    symbolBoundingData: null,\n    // Can be 60 or -40 or [-40, 60]\n    symbolPatternSize: 400,\n    // 400 * 400 px\n    barGap: '-100%',\n    // In most case, overlap is needed.\n    // z can be set in data item, which is z2 actually.\n    // Disable progressive\n    progressive: 0,\n    hoverAnimation: false // Open only when needed.\n\n  },\n  getInitialData: function getInitialData(option) {\n    // Disable stack.\n    option.stack = null;\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\n  }\n});\nvar _default = PictorialBarSeries;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar isNumeric = _number.isNumeric;\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth']; // index: +isHorizontal\n\nvar LAYOUT_ATTRS = [{\n  xy: 'x',\n  wh: 'width',\n  index: 0,\n  posDesc: ['left', 'right']\n}, {\n  xy: 'y',\n  wh: 'height',\n  index: 1,\n  posDesc: ['top', 'bottom']\n}];\nvar pathForLineWidth = new graphic.Circle();\nvar BarView = echarts.extendChartView({\n  type: 'pictorialBar',\n  render: function render(seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = !!baseAxis.isHorizontal();\n    var coordSysRect = cartesian.grid.getRect();\n    var opt = {\n      ecSize: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      seriesModel: seriesModel,\n      coordSys: cartesian,\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\n      isHorizontal: isHorizontal,\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\n      categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\n    };\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = getItemModel(data, dataIndex);\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\n      var bar = createBar(data, opt, symbolMeta);\n      data.setItemGraphicEl(dataIndex, bar);\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).update(function (newIndex, oldIndex) {\n      var bar = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(bar);\n        return;\n      }\n\n      var itemModel = getItemModel(data, newIndex);\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\n\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\n        group.remove(bar);\n        data.setItemGraphicEl(newIndex, null);\n        bar = null;\n      }\n\n      if (bar) {\n        updateBar(bar, opt, symbolMeta);\n      } else {\n        bar = createBar(data, opt, symbolMeta, true);\n      }\n\n      data.setItemGraphicEl(newIndex, bar);\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\n\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).remove(function (dataIndex) {\n      var bar = oldData.getItemGraphicEl(dataIndex);\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\n    }).execute();\n    this._data = data;\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  remove: function remove(ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (bar) {\n          removeBar(data, bar.dataIndex, ecModel, bar);\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n}); // Set or calculate default value about symbol, and calculate layout info.\n\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\n  var layout = data.getItemLayout(dataIndex);\n  var symbolRepeat = itemModel.get('symbolRepeat');\n  var symbolClip = itemModel.get('symbolClip');\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\n  var symbolRotate = itemModel.get('symbolRotate');\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\n  var symbolMeta = {\n    dataIndex: dataIndex,\n    layout: layout,\n    itemModel: itemModel,\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\n    color: data.getItemVisual(dataIndex, 'color'),\n    symbolClip: symbolClip,\n    symbolRepeat: symbolRepeat,\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\n    symbolPatternSize: symbolPatternSize,\n    rotation: rotation,\n    animationModel: isAnimationEnabled ? itemModel : null,\n    hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\n    z2: itemModel.getShallow('z', true) || 0\n  };\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\n  var symbolSize = symbolMeta.symbolSize;\n  var symbolOffset = itemModel.get('symbolOffset');\n\n  if (zrUtil.isArray(symbolOffset)) {\n    symbolOffset = [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])];\n  }\n\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\n  return symbolMeta;\n} // bar length can be negative.\n\n\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\n  var valueDim = opt.valueDim;\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\n  var boundingLength;\n\n  if (zrUtil.isArray(symbolBoundingData)) {\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\n    boundingLength = symbolBoundingExtent[pxSignIdx];\n  } else if (symbolBoundingData != null) {\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\n  } else if (symbolRepeat) {\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\n  } else {\n    boundingLength = layout[valueDim.wh];\n  }\n\n  output.boundingLength = boundingLength;\n\n  if (symbolRepeat) {\n    output.repeatCutLength = layout[valueDim.wh];\n  }\n\n  output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\n}\n\nfunction convertToCoordOnAxis(axis, value) {\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\n} // Support ['100%', '100%']\n\n\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, output) {\n  var valueDim = opt.valueDim;\n  var categoryDim = opt.categoryDim;\n  var categorySize = Math.abs(layout[categoryDim.wh]);\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\n\n  if (zrUtil.isArray(symbolSize)) {\n    symbolSize = symbolSize.slice();\n  } else {\n    if (symbolSize == null) {\n      symbolSize = '100%';\n    }\n\n    symbolSize = [symbolSize, symbolSize];\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\n  // to complicated to calculate real percent value if considering scaled lineWidth.\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\n  // which can be tolerated in pictorial chart.\n\n\n  symbolSize[categoryDim.index] = parsePercent(symbolSize[categoryDim.index], categorySize);\n  symbolSize[valueDim.index] = parsePercent(symbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\n  output.symbolSize = symbolSize; // If x or y is less than zero, show reversed shape.\n\n  var symbolScale = output.symbolScale = [symbolSize[0] / symbolPatternSize, symbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\n\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\n}\n\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\n  // In symbols are drawn with scale, so do not need to care about the case that width\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\n  // be calculated.\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n\n  if (valueLineWidth) {\n    pathForLineWidth.attr({\n      scale: symbolScale.slice(),\n      rotation: rotation\n    });\n    pathForLineWidth.updateTransform();\n    valueLineWidth /= pathForLineWidth.getLineScale();\n    valueLineWidth *= symbolScale[opt.valueDim.index];\n  }\n\n  output.valueLineWidth = valueLineWidth;\n}\n\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output) {\n  var categoryDim = opt.categoryDim;\n  var valueDim = opt.valueDim;\n  var pxSign = output.pxSign;\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\n  // want symbols to rotate on its center, which should not be translated\n  // when rotating.\n\n  if (symbolRepeat) {\n    var absBoundingLength = Math.abs(boundingLength);\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\n    var hasEndGap = false;\n\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\n      hasEndGap = true;\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\n    }\n\n    symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\n    var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\n    // to ensure that all of the symbols will not be overflow the given area.\n\n    var endFix = hasEndGap ? 0 : symbolMargin * 2; // Both final repeatTimes and final symbolMargin area calculated based on\n    // boundingLength.\n\n    var repeatSpecified = isNumeric(symbolRepeat);\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\n    // entirely in the given layout area.\n\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\n    symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\n    uLenWithMargin = unitLength + symbolMargin * 2;\n    endFix = hasEndGap ? 0 : symbolMargin * 2; // Update repeatTimes when not all symbol will be shown.\n\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\n    }\n\n    pathLen = repeatTimes * uLenWithMargin - endFix;\n    output.repeatTimes = repeatTimes;\n    output.symbolMargin = symbolMargin;\n  }\n\n  var sizeFix = pxSign * (pathLen / 2);\n  var pathPosition = output.pathPosition = [];\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\n\n  if (symbolOffset) {\n    pathPosition[0] += symbolOffset[0];\n    pathPosition[1] += symbolOffset[1];\n  }\n\n  var bundlePosition = output.bundlePosition = [];\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\n  var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\n  var clipShape = output.clipShape = {}; // Consider that symbol may be overflow layout rect.\n\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\n  clipShape[valueDim.xy] = 0;\n  clipShape[valueDim.wh] = layout[valueDim.wh];\n}\n\nfunction createPath(symbolMeta) {\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\n  var path = createSymbol( // Consider texture img, make a big size.\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize, symbolMeta.color);\n  path.attr({\n    culling: true\n  });\n  path.type !== 'image' && path.setStyle({\n    strokeNoScale: true\n  });\n  return path;\n}\n\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var symbolSize = symbolMeta.symbolSize;\n  var valueLineWidth = symbolMeta.valueLineWidth;\n  var pathPosition = symbolMeta.pathPosition;\n  var valueDim = opt.valueDim;\n  var repeatTimes = symbolMeta.repeatTimes || 0;\n  var index = 0;\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\n  eachPath(bar, function (path) {\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n\n    if (index < repeatTimes) {\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\n    } else {\n      updateAttr(path, null, {\n        scale: [0, 0]\n      }, symbolMeta, isUpdate, function () {\n        bundle.remove(path);\n      });\n    }\n\n    updateHoverAnimation(path, symbolMeta);\n    index++;\n  });\n\n  for (; index < repeatTimes; index++) {\n    var path = createPath(symbolMeta);\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n    bundle.add(path);\n    var target = makeTarget(index);\n    updateAttr(path, {\n      position: target.position,\n      scale: [0, 0]\n    }, {\n      scale: target.scale,\n      rotation: target.rotation\n    }, symbolMeta, isUpdate); // FIXME\n    // If all emphasis/normal through action.\n\n    path.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n    updateHoverAnimation(path, symbolMeta);\n  }\n\n  function makeTarget(index) {\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\n    // Otherwise: i = index;\n\n    var pxSign = symbolMeta.pxSign;\n    var i = index;\n\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\n      i = repeatTimes - 1 - index;\n    }\n\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\n    return {\n      position: position,\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    };\n  }\n\n  function onMouseOver() {\n    eachPath(bar, function (path) {\n      path.trigger('emphasis');\n    });\n  }\n\n  function onMouseOut() {\n    eachPath(bar, function (path) {\n      path.trigger('normal');\n    });\n  }\n}\n\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var mainPath = bar.__pictorialMainPath;\n\n  if (!mainPath) {\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\n    bundle.add(mainPath);\n    updateAttr(mainPath, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: [0, 0],\n      rotation: symbolMeta.rotation\n    }, {\n      scale: symbolMeta.symbolScale.slice()\n    }, symbolMeta, isUpdate);\n    mainPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n  } else {\n    updateAttr(mainPath, null, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    }, symbolMeta, isUpdate);\n  }\n\n  updateHoverAnimation(mainPath, symbolMeta);\n\n  function onMouseOver() {\n    this.trigger('emphasis');\n  }\n\n  function onMouseOut() {\n    this.trigger('normal');\n  }\n} // bar rect is used for label.\n\n\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\n  var barRect = bar.__pictorialBarRect;\n\n  if (!barRect) {\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\n      z2: 2,\n      shape: rectShape,\n      silent: true,\n      style: {\n        stroke: 'transparent',\n        fill: 'transparent',\n        lineWidth: 0\n      }\n    });\n    bar.add(barRect);\n  } else {\n    updateAttr(barRect, null, {\n      shape: rectShape\n    }, symbolMeta, isUpdate);\n  }\n}\n\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\n  // If not clip, symbol will be remove and rebuilt.\n  if (symbolMeta.symbolClip) {\n    var clipPath = bar.__pictorialClipPath;\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\n    var valueDim = opt.valueDim;\n    var animationModel = symbolMeta.animationModel;\n    var dataIndex = symbolMeta.dataIndex;\n\n    if (clipPath) {\n      graphic.updateProps(clipPath, {\n        shape: clipShape\n      }, animationModel, dataIndex);\n    } else {\n      clipShape[valueDim.wh] = 0;\n      clipPath = new graphic.Rect({\n        shape: clipShape\n      });\n\n      bar.__pictorialBundle.setClipPath(clipPath);\n\n      bar.__pictorialClipPath = clipPath;\n      var target = {};\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\n        shape: target\n      }, animationModel, dataIndex);\n    }\n  }\n}\n\nfunction getItemModel(data, dataIndex) {\n  var itemModel = data.getItemModel(dataIndex);\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\n  itemModel.isAnimationEnabled = isAnimationEnabled;\n  return itemModel;\n}\n\nfunction getAnimationDelayParams(path) {\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\n  return {\n    index: path.__pictorialAnimationIndex,\n    count: path.__pictorialRepeatTimes\n  };\n}\n\nfunction isAnimationEnabled() {\n  // `animation` prop can be set on itemModel in pictorial bar chart.\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\n}\n\nfunction updateHoverAnimation(path, symbolMeta) {\n  path.off('emphasis').off('normal');\n  var scale = symbolMeta.symbolScale.slice();\n  symbolMeta.hoverAnimation && path.on('emphasis', function () {\n    this.animateTo({\n      scale: [scale[0] * 1.1, scale[1] * 1.1]\n    }, 400, 'elasticOut');\n  }).on('normal', function () {\n    this.animateTo({\n      scale: scale.slice()\n    }, 400, 'elasticOut');\n  });\n}\n\nfunction createBar(data, opt, symbolMeta, isUpdate) {\n  // bar is the main element for each data.\n  var bar = new graphic.Group(); // bundle is used for location and clip.\n\n  var bundle = new graphic.Group();\n  bar.add(bundle);\n  bar.__pictorialBundle = bundle;\n  bundle.attr('position', symbolMeta.bundlePosition.slice());\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\n  bar.__pictorialSymbolMeta = symbolMeta;\n  return bar;\n}\n\nfunction updateBar(bar, opt, symbolMeta) {\n  var animationModel = symbolMeta.animationModel;\n  var dataIndex = symbolMeta.dataIndex;\n  var bundle = bar.__pictorialBundle;\n  graphic.updateProps(bundle, {\n    position: symbolMeta.bundlePosition.slice()\n  }, animationModel, dataIndex);\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, true);\n  createOrUpdateClip(bar, opt, symbolMeta, true);\n}\n\nfunction removeBar(data, dataIndex, animationModel, bar) {\n  // Not show text when animating\n  var labelRect = bar.__pictorialBarRect;\n  labelRect && (labelRect.style.text = null);\n  var pathes = [];\n  eachPath(bar, function (path) {\n    pathes.push(path);\n  });\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\n\n  bar.__pictorialClipPath && (animationModel = null);\n  zrUtil.each(pathes, function (path) {\n    graphic.updateProps(path, {\n      scale: [0, 0]\n    }, animationModel, dataIndex, function () {\n      bar.parent && bar.parent.remove(bar);\n    });\n  });\n  data.setItemGraphicEl(dataIndex, null);\n}\n\nfunction getShapeStr(data, symbolMeta) {\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\n}\n\nfunction eachPath(bar, cb, context) {\n  // Do not use Group#eachChild, because it do not support remove.\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\n    el !== bar.__pictorialBarRect && cb.call(context, el);\n  });\n}\n\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\n\n  if (symbolMeta.symbolClip && !isUpdate) {\n    animationAttrs && el.attr(animationAttrs);\n  } else {\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\n  }\n}\n\nfunction updateCommon(bar, opt, symbolMeta) {\n  var color = symbolMeta.color;\n  var dataIndex = symbolMeta.dataIndex;\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  eachPath(bar, function (path) {\n    // PENDING setColor should be before setStyle!!!\n    path.setColor(color);\n    path.setStyle(zrUtil.defaults({\n      fill: color,\n      opacity: symbolMeta.opacity\n    }, normalStyle));\n    graphic.setHoverStyle(path, hoverStyle);\n    cursorStyle && (path.cursor = cursorStyle);\n    path.z2 = symbolMeta.z2;\n  });\n  var barRectHoverStyle = {};\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\n  var barRect = bar.__pictorialBarRect;\n  setLabel(barRect.style, barRectHoverStyle, itemModel, color, opt.seriesModel, dataIndex, barPositionOutside);\n  graphic.setHoverStyle(barRect, barRectHoverStyle);\n}\n\nfunction toIntTimes(times) {\n  var roundedTimes = Math.round(times); // Escapse accurate error\n\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\n}\n\nvar _default = BarView;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"../component/singleAxis\");\n\nrequire(\"./themeRiver/ThemeRiverSeries\");\n\nrequire(\"./themeRiver/ThemeRiverView\");\n\nvar themeRiverLayout = require(\"./themeRiver/themeRiverLayout\");\n\nvar themeRiverVisual = require(\"./themeRiver/themeRiverVisual\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerLayout(themeRiverLayout);\necharts.registerVisual(themeRiverVisual);\necharts.registerProcessor(dataFilter('themeRiver'));","var Single = require(\"./Single\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinate system creator.\n */\n\n/**\n * Create single coordinate system and inject it into seriesModel.\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Array.<module:echarts/coord/single/Single>}\n */\n\n\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = ecModel.queryComponents({\n        mainType: 'singleAxis',\n        index: seriesModel.get('singleAxisIndex'),\n        id: seriesModel.get('singleAxisId')\n      })[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nCoordinateSystem.register('single', {\n  create: create,\n  dimensions: Single.prototype.dimensions\n});","var SingleAxis = require(\"./SingleAxis\");\n\nvar axisHelper = require(\"../axisHelper\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinates system.\n */\n\n/**\n * Create a single coordinates system.\n *\n * @param {module:echarts/coord/single/AxisModel} axisModel\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction Single(axisModel, ecModel, api) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.dimension = 'single';\n  /**\n   * Add it just for draw tooltip.\n   *\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = ['single'];\n  /**\n   * @private\n   * @type {module:echarts/coord/single/SingleAxis}.\n   */\n\n  this._axis = null;\n  /**\n   * @private\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n\n  this._init(axisModel, ecModel, api);\n  /**\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n\n\n  this.model = axisModel;\n}\n\nSingle.prototype = {\n  type: 'singleAxis',\n  axisPointerEnabled: true,\n  constructor: Single,\n\n  /**\n   * Initialize single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @private\n   */\n  _init: function _init(axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function update(ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data = seriesModel.getData();\n        each(data.mapDimension(this.dimension, true), function (dim) {\n          this._axis.scale.unionExtentFromData(data, dim);\n        }, this);\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  },\n\n  /**\n   * Resize the single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  resize: function resize(axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function getRect() {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _adjustAxis: function _adjustAxis() {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.reverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  },\n\n  /**\n   * @param  {module:echarts/coord/single/SingleAxis} axis\n   * @param  {number} coordBase\n   */\n  _updateAxisTransform: function _updateAxisTransform(axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  },\n\n  /**\n   * Get axis.\n   *\n   * @return {module:echarts/coord/single/SingleAxis}\n   */\n  getAxis: function getAxis() {\n    return this._axis;\n  },\n\n  /**\n   * Get axis, add it just for draw tooltip.\n   *\n   * @return {[type]} [description]\n   */\n  getBaseAxis: function getBaseAxis() {\n    return this._axis;\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function getAxes() {\n    return [this._axis];\n  },\n\n  /**\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function getTooltipAxes() {\n    return {\n      baseAxes: [this.getAxis()]\n    };\n  },\n\n  /**\n   * If contain point.\n   *\n   * @param  {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function containPoint(point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function pointToData(point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  },\n\n  /**\n   * Convert the series data to concrete point.\n   *\n   * @param  {number|Array.<number>} val\n   * @return {Array.<number>}\n   */\n  dataToPoint: function dataToPoint(val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  }\n};\nvar _default = Single;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor  module:echarts/coord/single/SingleAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\n\n\nvar SingleAxis = function SingleAxis(dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   * - 'category'\n   * - 'value'\n   * - 'time'\n   * - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   *  @type {string}\n   */\n\n  this.position = position || 'bottom';\n  /**\n   * Axis orient\n   *  - 'horizontal'\n   *  - 'vertical'\n   * @type {[type]}\n   */\n\n  this.orient = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\n   * Axis model\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n  model: null,\n\n  /**\n   * Judge the orient of the axis.\n   * @return {boolean}\n   */\n  isHorizontal: function isHorizontal() {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function pointToData(point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\n   * Convert the local coord(processed by dataToCoord())\n   * to global coord(concrete pixel coord).\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toGlobalCoord: null,\n\n  /**\n   * Convert the global coord to local coord.\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"./AxisView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttr = 'splitLine';\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function render(axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(axisBuilder.getGroup());\n\n    if (axisModel.get(selfBuilderAttr + '.show')) {\n      this['_' + selfBuilderAttr](axisModel);\n    }\n\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  _splitLine: function _splitLine(axisModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line(graphic.subPixelOptimizeLine({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      })));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar AxisModel = ComponentModel.extend({\n  type: 'singleAxis',\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/single/SingleAxis}\n   */\n  axis: null,\n\n  /**\n   * @type {module:echarts/coord/single/Single}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function getCoordSysModel() {\n    return this;\n  }\n});\nvar defaultOption = {\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  type: 'value',\n  position: 'bottom',\n  orient: 'horizontal',\n  axisLine: {\n    show: true,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    }\n  },\n  // Single coordinate system and single axis is the,\n  // which is used as the parent tooltip model.\n  // same model, so we set default tooltip show as true.\n  tooltip: {\n    show: true\n  },\n  axisTick: {\n    show: true,\n    length: 6,\n    lineStyle: {\n      width: 2\n    }\n  },\n  axisLabel: {\n    show: true,\n    interval: 'auto'\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      type: 'dashed',\n      opacity: 0.2\n    }\n  }\n};\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function makeElOption(elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function getHandleTransform(value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function updateHandleTransform(transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function line(axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function shadow(axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar nest = require(\"../../util/array/nest\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  Define the themeRiver view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\n\n\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function init(option) {\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function fixData(data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var dataByName = nest().key(function (dataItem) {\n      return dataItem[2];\n    }).entries(data); // data group in each layer\n\n    var layData = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        dataList: d.values\n      };\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function getInitialData(option, ecModel) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\n\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    var dimensionsInfo = createDimensions(data, {\n      coordDimensions: ['single'],\n      dimensionsDefine: [{\n        name: 'time',\n        type: getDimensionTypeByAxis(axisType)\n      }, {\n        name: 'value',\n        type: 'float'\n      }, {\n        name: 'name',\n        type: 'ordinal'\n      }],\n      encodeDefine: {\n        single: 0,\n        value: 1,\n        itemName: 2\n      }\n    });\n    var list = new List(dimensionsInfo, this);\n    list.initData(data);\n    return list;\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function getLayerSeries() {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    } // data group by name\n\n\n    var dataByName = nest().key(function (index) {\n      return data.get('name', index);\n    }).entries(indexArr);\n    var layerSeries = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        indices: d.values\n      };\n    });\n    var timeDim = data.mapDimension('single');\n\n    for (var j = 0; j < layerSeries.length; ++j) {\n      layerSeries[j].indices.sort(comparer);\n    }\n\n    function comparer(index1, index2) {\n      return data.get(timeDim, index1) - data.get(timeDim, index2);\n    }\n\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n   *\n   * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function getAxisTooltipData(dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function formatTooltip(dataIndex) {\n    var data = this.getData();\n    var htmlName = data.getName(dataIndex);\n    var htmlValue = data.get(data.mapDimension('value'), dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      margin: 4,\n      show: true,\n      position: 'left',\n      color: '#000',\n      fontSize: 11\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _poly = require(\"../line/poly\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  The file used to draw themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\n\n\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function init() {\n    this._layers = [];\n  },\n  render: function render(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function dispose() {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  Using layout algorithm transform the raw data to layout information.\n * @author Deqing Li(annong035@gmail.com)\n */\n\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\n * The layout information about themeriver\n *\n * @param {module:echarts/data/List} data  data in the series\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\n * @param {number} height  value used to compute every series height\n */\n\n\nfunction themeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var timeDim = data.mapDimension('single');\n  var valueDim = data.mapDimension('value');\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get(timeDim, idx));\n      pt[1] = data.get(valueDim, idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\n * Compute the baseLine of the rawdata\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\n *\n * @param  {Array.<Array>} data  the points in each layer\n * @return {Object}\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n  var temp;\n  var base = {};\n\n  for (var i = 0; i < pointNum; ++i) {\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  base.y0 = y0;\n  base.max = max;\n  return base;\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual encoding for themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var rawData = seriesModel.getRawData();\n    var colorList = seriesModel.get('color');\n    var idxMap = createHashMap();\n    data.each(function (idx) {\n      idxMap.set(data.getRawIndex(idx), idx);\n    });\n    rawData.each(function (rawIndex) {\n      var name = rawData.getName(rawIndex);\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\n      rawData.setItemVisual(rawIndex, 'color', color);\n      var idx = idxMap.get(rawIndex);\n\n      if (idx != null) {\n        data.setItemVisual(idx, 'color', color);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./sunburst/SunburstSeries\");\n\nrequire(\"./sunburst/SunburstView\");\n\nrequire(\"./sunburst/sunburstAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar sunburstLayout = require(\"./sunburst/sunburstLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerVisual(zrUtil.curry(dataColor, 'sunburst'));\necharts.registerLayout(zrUtil.curry(sunburstLayout, 'sunburst'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'sunburst'));","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _default = SeriesModel.extend({\n  type: 'series.sunburst',\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  getInitialData: function getInitialData(option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || []; // levels = option.levels = setDefault(levels, ecModel);\n\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function optionUpdated() {\n    this.resetViewRoot();\n  },\n\n  /*\n   * @override\n   */\n  getDataParams: function getDataParams(dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // Policy of highlighting pieces when hover on one\n    // Valid values: 'none' (for not downplay others), 'descendant',\n    // 'ancestor', 'self'\n    highlightPolicy: 'descendant',\n    // 'rootToNode', 'link', or false\n    nodeClick: 'rootToNode',\n    renderLabelForZeroData: false,\n    label: {\n      // could be: 'radial', 'tangential', or 'none'\n      rotate: 'radial',\n      show: true,\n      opacity: 1,\n      // 'left' is for inner side of inside, and 'right' is for outter\n      // side for inside\n      align: 'center',\n      position: 'inside',\n      distance: 5,\n      silent: true,\n      emphasis: {}\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: 'white',\n      opacity: 1,\n      emphasis: {},\n      highlight: {\n        opacity: 1\n      },\n      downplay: {\n        opacity: 0.9\n      }\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationDuration: 1000,\n    animationDurationUpdate: 500,\n    animationEasing: 'cubicOut',\n    data: [],\n    levels: [],\n\n    /**\n     * Sort order.\n     *\n     * Valid values: 'desc', 'asc', null, or callback function.\n     * 'desc' and 'asc' for descend and ascendant order;\n     * null for not sorting;\n     * example of callback function:\n     * function(nodeA, nodeB) {\n     *     return nodeA.getValue() - nodeB.getValue();\n     * }\n     */\n    sort: 'desc'\n  },\n  getViewRoot: function getViewRoot() {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function resetViewRoot(viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar SunburstPiece = require(\"./SunburstPiece\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\nvar SunburstView = ChartView.extend({\n  type: 'sunburst',\n  init: function init() {},\n  render: function render(seriesModel, ecModel, api, payload) {\n    var that = this;\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var data = seriesModel.getData();\n    var virtualRoot = data.tree.root;\n    var newRoot = seriesModel.getViewRoot();\n    var group = this.group;\n    var renderLabelForZeroData = seriesModel.get('renderLabelForZeroData');\n    var newChildren = [];\n    newRoot.eachNode(function (node) {\n      newChildren.push(node);\n    });\n    var oldChildren = this._oldChildren || [];\n    dualTravel(newChildren, oldChildren);\n    renderRollUp(virtualRoot, newRoot);\n\n    if (payload && payload.highlight && payload.highlight.piece) {\n      var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n      payload.highlight.piece.onEmphasis(highlightPolicy);\n    } else if (payload && payload.unhighlight) {\n      var piece = this.virtualPiece;\n\n      if (!piece && virtualRoot.children.length) {\n        piece = virtualRoot.children[0].piece;\n      }\n\n      if (piece) {\n        piece.onNormal();\n      }\n    }\n\n    this._initEvents();\n\n    this._oldChildren = newChildren;\n\n    function dualTravel(newChildren, oldChildren) {\n      if (newChildren.length === 0 && oldChildren.length === 0) {\n        return;\n      }\n\n      new DataDiffer(oldChildren, newChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n\n      function getKey(node) {\n        return node.getId();\n      }\n\n      function processNode(newId, oldId) {\n        var newNode = newId == null ? null : newChildren[newId];\n        var oldNode = oldId == null ? null : oldChildren[oldId];\n        doRenderNode(newNode, oldNode);\n      }\n    }\n\n    function doRenderNode(newNode, oldNode) {\n      if (!renderLabelForZeroData && newNode && !newNode.getValue()) {\n        // Not render data with value 0\n        newNode = null;\n      }\n\n      if (newNode !== virtualRoot && oldNode !== virtualRoot) {\n        if (oldNode && oldNode.piece) {\n          if (newNode) {\n            // Update\n            oldNode.piece.updateData(false, newNode, 'normal', seriesModel, ecModel); // For tooltip\n\n            data.setItemGraphicEl(newNode.dataIndex, oldNode.piece);\n          } else {\n            // Remove\n            removeNode(oldNode);\n          }\n        } else if (newNode) {\n          // Add\n          var piece = new SunburstPiece(newNode, seriesModel, ecModel);\n          group.add(piece); // For tooltip\n\n          data.setItemGraphicEl(newNode.dataIndex, piece);\n        }\n      }\n    }\n\n    function removeNode(node) {\n      if (!node) {\n        return;\n      }\n\n      if (node.piece) {\n        group.remove(node.piece);\n        node.piece = null;\n      }\n    }\n\n    function renderRollUp(virtualRoot, viewRoot) {\n      if (viewRoot.depth > 0) {\n        // Render\n        if (that.virtualPiece) {\n          // Update\n          that.virtualPiece.updateData(false, virtualRoot, 'normal', seriesModel, ecModel);\n        } else {\n          // Add\n          that.virtualPiece = new SunburstPiece(virtualRoot, seriesModel, ecModel);\n          group.add(that.virtualPiece);\n        }\n\n        if (viewRoot.piece._onclickEvent) {\n          viewRoot.piece.off('click', viewRoot.piece._onclickEvent);\n        }\n\n        var event = function event(e) {\n          that._rootToNode(viewRoot.parentNode);\n        };\n\n        viewRoot.piece._onclickEvent = event;\n        that.virtualPiece.on('click', event);\n      } else if (that.virtualPiece) {\n        // Remove\n        group.remove(that.virtualPiece);\n        that.virtualPiece = null;\n      }\n    }\n  },\n  dispose: function dispose() {},\n\n  /**\n   * @private\n   */\n  _initEvents: function _initEvents() {\n    var that = this;\n\n    var event = function event(e) {\n      var targetFound = false;\n      var viewRoot = that.seriesModel.getViewRoot();\n      viewRoot.eachNode(function (node) {\n        if (!targetFound && node.piece && node.piece.childAt(0) === e.target) {\n          var nodeClick = node.getModel().get('nodeClick');\n\n          if (nodeClick === 'rootToNode') {\n            that._rootToNode(node);\n          } else if (nodeClick === 'link') {\n            var itemModel = node.getModel();\n            var link = itemModel.get('link');\n\n            if (link) {\n              var linkTarget = itemModel.get('target', true) || '_blank';\n              window.open(link, linkTarget);\n            }\n          }\n\n          targetFound = true;\n        }\n      });\n    };\n\n    if (this.group._onclickEvent) {\n      this.group.off('click', this.group._onclickEvent);\n    }\n\n    this.group.on('click', event);\n    this.group._onclickEvent = event;\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function _rootToNode(node) {\n    if (node !== this.seriesModel.getViewRoot()) {\n      this.api.dispatchAction({\n        type: ROOT_TO_NODE_ACTION,\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        targetNode: node\n      });\n    }\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function containPoint(point, seriesModel) {\n    var treeRoot = seriesModel.getData();\n    var itemLayout = treeRoot.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = SunburstView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar NodeHighlightPolicy = {\n  NONE: 'none',\n  // not downplay others\n  DESCENDANT: 'descendant',\n  ANCESTOR: 'ancestor',\n  SELF: 'self'\n};\nvar DEFAULT_SECTOR_Z = 2;\nvar DEFAULT_TEXT_Z = 4;\n/**\n * Sunburstce of Sunburst including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction SunburstPiece(node, seriesModel, ecModel) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: DEFAULT_SECTOR_Z\n  });\n  sector.seriesIndex = seriesModel.seriesIndex;\n  var text = new graphic.Text({\n    z2: DEFAULT_TEXT_Z,\n    silent: node.getModel('label').get('silent')\n  });\n  this.add(sector);\n  this.add(text);\n  this.updateData(true, node, 'normal', seriesModel, ecModel); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar SunburstPieceProto = SunburstPiece.prototype;\n\nSunburstPieceProto.updateData = function (firstCreate, node, state, seriesModel, ecModel) {\n  this.node = node;\n  node.piece = this;\n  seriesModel = seriesModel || this._seriesModel;\n  ecModel = ecModel || this._ecModel;\n  var sector = this.childAt(0);\n  sector.dataIndex = node.dataIndex;\n  var itemModel = node.getModel();\n  var layout = node.getLayout();\n\n  if (!layout) {\n    console.log(node.getLayout());\n  }\n\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n  var visualColor = getNodeColor(node, seriesModel, ecModel);\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle();\n  var style;\n\n  if (state === 'normal') {\n    style = normalStyle;\n  } else {\n    var stateStyle = itemModel.getModel(state + '.itemStyle').getItemStyle();\n    style = zrUtil.merge(stateStyle, normalStyle);\n  }\n\n  style = zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: style.fill || visualColor\n  }, style);\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    sector.shape.r = layout.r0;\n    graphic.updateProps(sector, {\n      shape: {\n        r: layout.r\n      }\n    }, seriesModel, node.dataIndex);\n    sector.useStyle(style);\n  } else if (typeof style.fill === 'object' && style.fill.type || typeof sector.style.fill === 'object' && sector.style.fill.type) {\n    // Disable animation for gradient since no interpolation method\n    // is supported for gradient\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel);\n    sector.useStyle(style);\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape,\n      style: style\n    }, seriesModel);\n  }\n\n  this._updateLabel(seriesModel, visualColor, state);\n\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle);\n\n  if (firstCreate) {\n    var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n\n    this._initEvents(sector, node, seriesModel, highlightPolicy);\n  }\n\n  this._seriesModel = seriesModel || this._seriesModel;\n  this._ecModel = ecModel || this._ecModel;\n};\n\nSunburstPieceProto.onEmphasis = function (highlightPolicy) {\n  var that = this;\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      if (that.node === n) {\n        n.piece.updateData(false, n, 'emphasis');\n      } else if (isNodeHighlighted(n, that.node, highlightPolicy)) {\n        n.piece.childAt(0).trigger('highlight');\n      } else if (highlightPolicy !== NodeHighlightPolicy.NONE) {\n        n.piece.childAt(0).trigger('downplay');\n      }\n    }\n  });\n};\n\nSunburstPieceProto.onNormal = function () {\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      n.piece.updateData(false, n, 'normal');\n    }\n  });\n};\n\nSunburstPieceProto.onHighlight = function () {\n  this.updateData(false, this.node, 'highlight');\n};\n\nSunburstPieceProto.onDownplay = function () {\n  this.updateData(false, this.node, 'downplay');\n};\n\nSunburstPieceProto._updateLabel = function (seriesModel, visualColor, state) {\n  var itemModel = this.node.getModel();\n  var normalModel = itemModel.getModel('label');\n  var labelModel = state === 'normal' || state === 'emphasis' ? normalModel : itemModel.getModel(state + '.label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var text = zrUtil.retrieve(seriesModel.getFormattedLabel(this.node.dataIndex, 'normal', null, null, 'label'), this.node.name);\n\n  if (getLabelAttr('show') === false) {\n    text = '';\n  }\n\n  var layout = this.node.getLayout();\n  var labelMinAngle = labelModel.get('minAngle');\n\n  if (labelMinAngle == null) {\n    labelMinAngle = normalModel.get('minAngle');\n  }\n\n  labelMinAngle = labelMinAngle / 180 * Math.PI;\n  var angle = layout.endAngle - layout.startAngle;\n\n  if (labelMinAngle != null && Math.abs(angle) < labelMinAngle) {\n    // Not displaying text when angle is too small\n    text = '';\n  }\n\n  var label = this.childAt(1);\n  graphic.setLabelStyle(label.style, label.hoverStyle || {}, normalModel, labelHoverModel, {\n    defaultText: labelModel.getShallow('show') ? text : null,\n    autoColor: visualColor,\n    useInsideStyle: true\n  });\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var r;\n  var labelPosition = getLabelAttr('position');\n  var labelPadding = getLabelAttr('distance') || 0;\n  var textAlign = getLabelAttr('align');\n\n  if (labelPosition === 'outside') {\n    r = layout.r + labelPadding;\n    textAlign = midAngle > Math.PI / 2 ? 'right' : 'left';\n  } else {\n    if (!textAlign || textAlign === 'center') {\n      r = (layout.r + layout.r0) / 2;\n      textAlign = 'center';\n    } else if (textAlign === 'left') {\n      r = layout.r0 + labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'right';\n      }\n    } else if (textAlign === 'right') {\n      r = layout.r - labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'left';\n      }\n    }\n  }\n\n  label.attr('style', {\n    text: text,\n    textAlign: textAlign,\n    textVerticalAlign: getLabelAttr('verticalAlign') || 'middle',\n    opacity: getLabelAttr('opacity')\n  });\n  var textX = r * dx + layout.cx;\n  var textY = r * dy + layout.cy;\n  label.attr('position', [textX, textY]);\n  var rotateType = getLabelAttr('rotate');\n  var rotate = 0;\n\n  if (rotateType === 'radial') {\n    rotate = -midAngle;\n\n    if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (rotateType === 'tangential') {\n    rotate = Math.PI / 2 - midAngle;\n\n    if (rotate > Math.PI / 2) {\n      rotate -= Math.PI;\n    } else if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (typeof rotateType === 'number') {\n    rotate = rotateType * Math.PI / 180;\n  }\n\n  label.attr('rotation', rotate);\n\n  function getLabelAttr(name) {\n    var stateAttr = labelModel.get(name);\n\n    if (stateAttr == null) {\n      return normalModel.get(name);\n    } else {\n      return stateAttr;\n    }\n  }\n};\n\nSunburstPieceProto._initEvents = function (sector, node, seriesModel, highlightPolicy) {\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  var that = this;\n\n  var onEmphasis = function onEmphasis() {\n    that.onEmphasis(highlightPolicy);\n  };\n\n  var onNormal = function onNormal() {\n    that.onNormal();\n  };\n\n  var onDownplay = function onDownplay() {\n    that.onDownplay();\n  };\n\n  var onHighlight = function onHighlight() {\n    that.onHighlight();\n  };\n\n  if (seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal).on('downplay', onDownplay).on('highlight', onHighlight);\n  }\n};\n\nzrUtil.inherits(SunburstPiece, graphic.Group);\nvar _default = SunburstPiece;\n/**\n * Get node color\n *\n * @param {TreeNode} node the node to get color\n * @param {module:echarts/model/Series} seriesModel series\n * @param {module:echarts/model/Global} ecModel echarts defaults\n */\n\nfunction getNodeColor(node, seriesModel, ecModel) {\n  // Color from visualMap\n  var visualColor = node.getVisual('color');\n  var visualMetaList = node.getVisual('visualMeta');\n\n  if (!visualMetaList || visualMetaList.length === 0) {\n    // Use first-generation color if has no visualMap\n    visualColor = null;\n  } // Self color or level color\n\n\n  var color = node.getModel('itemStyle').get('color');\n\n  if (color) {\n    return color;\n  } else if (visualColor) {\n    // Color mapping\n    return visualColor;\n  } else if (node.depth === 0) {\n    // Virtual root node\n    return ecModel.option.color[0];\n  } else {\n    // First-generation color\n    var length = ecModel.option.color.length;\n    color = ecModel.option.color[getRootId(node) % length];\n  }\n\n  return color;\n}\n/**\n * Get index of root in sorted order\n *\n * @param {TreeNode} node current node\n * @return {number} index in root\n */\n\n\nfunction getRootId(node) {\n  var ancestor = node;\n\n  while (ancestor.depth > 1) {\n    ancestor = ancestor.parentNode;\n  }\n\n  var virtualRoot = node.getAncestors()[0];\n  return zrUtil.indexOf(virtualRoot.children, ancestor);\n}\n\nfunction isNodeHighlighted(node, activeNode, policy) {\n  if (policy === NodeHighlightPolicy.NONE) {\n    return false;\n  } else if (policy === NodeHighlightPolicy.SELF) {\n    return node === activeNode;\n  } else if (policy === NodeHighlightPolicy.ANCESTOR) {\n    return node === activeNode || node.isAncestorOf(activeNode);\n  } else {\n    return node === activeNode || node.isDescendantOf(activeNode);\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Sunburst action\n */\n\n\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\necharts.registerAction({\n  type: ROOT_TO_NODE_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [ROOT_TO_NODE_ACTION], model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\nvar HIGHLIGHT_ACTION = 'sunburstHighlight';\necharts.registerAction({\n  type: HIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleHighlight);\n\n  function handleHighlight(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [HIGHLIGHT_ACTION], model);\n\n    if (targetInfo) {\n      payload.highlight = targetInfo.node;\n    }\n  }\n});\nvar UNHIGHLIGHT_ACTION = 'sunburstUnhighlight';\necharts.registerAction({\n  type: UNHIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleUnhighlight);\n\n  function handleUnhighlight(model, index) {\n    payload.unhighlight = true;\n  }\n});","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var virtualRoot = seriesModel.getData().tree.root;\n    var treeRoot = seriesModel.getViewRoot();\n    var rootDepth = treeRoot.depth;\n    var sort = seriesModel.get('sort');\n\n    if (sort != null) {\n      initChildren(treeRoot, sort);\n    }\n\n    var validDataCount = 0;\n    zrUtil.each(treeRoot.children, function (child) {\n      !isNaN(child.getValue()) && validDataCount++;\n    });\n    var sum = treeRoot.getValue(); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var renderRollupNode = treeRoot.depth > 0;\n    var levels = treeRoot.height - (renderRollupNode ? -1 : 1);\n    var rPerLevel = (r - r0) / (levels || 1);\n    var clockwise = seriesModel.get('clockwise');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var dir = clockwise ? 1 : -1;\n    /**\n     * Render a tree\n     * @return increased angle\n     */\n\n    var renderNode = function renderNode(node, startAngle) {\n      if (!node) {\n        return;\n      }\n\n      var endAngle = startAngle; // Render self\n\n      if (node !== virtualRoot) {\n        // Tree node is virtual, so it doesn't need to be drawn\n        var value = node.getValue();\n        var angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n\n        if (angle < minAngle) {\n          angle = minAngle;\n          restAngle -= minAngle;\n        } else {\n          valueSumLargerThanMinAngle += value;\n        }\n\n        endAngle = startAngle + dir * angle;\n        var depth = node.depth - rootDepth - (renderRollupNode ? -1 : 1);\n        var rStart = r0 + rPerLevel * depth;\n        var rEnd = r0 + rPerLevel * (depth + 1);\n        var itemModel = node.getModel();\n\n        if (itemModel.get('r0') != null) {\n          rStart = parsePercent(itemModel.get('r0'), size / 2);\n        }\n\n        if (itemModel.get('r') != null) {\n          rEnd = parsePercent(itemModel.get('r'), size / 2);\n        }\n\n        node.setLayout({\n          angle: angle,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: rStart,\n          r: rEnd\n        });\n      } // Render children\n\n\n      if (node.children && node.children.length) {\n        // currentAngle = startAngle;\n        var siblingAngle = 0;\n        zrUtil.each(node.children, function (node) {\n          siblingAngle += renderNode(node, startAngle + siblingAngle);\n        });\n      }\n\n      return endAngle - startAngle;\n    }; // Virtual root node for roll up\n\n\n    if (renderRollupNode) {\n      var rStart = r0;\n      var rEnd = r0 + rPerLevel;\n      var angle = Math.PI * 2;\n      virtualRoot.setLayout({\n        angle: angle,\n        startAngle: startAngle,\n        endAngle: startAngle + angle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: rStart,\n        r: rEnd\n      });\n    }\n\n    renderNode(treeRoot, startAngle);\n  });\n}\n/**\n * Init node children by order and update visual\n *\n * @param {TreeNode} node  root node\n * @param {boolean}  isAsc if is in ascendant order\n */\n\n\nfunction initChildren(node, isAsc) {\n  var children = node.children || [];\n  node.children = sort(children, isAsc); // Init children recursively\n\n  if (children.length) {\n    zrUtil.each(node.children, function (child) {\n      initChildren(child, isAsc);\n    });\n  }\n}\n/**\n * Sort children nodes\n *\n * @param {TreeNode[]}               children children of node to be sorted\n * @param {string | function | null} sort sort method\n *                                   See SunburstSeries.js for details.\n */\n\n\nfunction sort(children, sortOrder) {\n  if (typeof sortOrder === 'function') {\n    return children.sort(sortOrder);\n  } else {\n    var isAsc = sortOrder === 'asc';\n    return children.sort(function (a, b) {\n      var diff = (a.getValue() - b.getValue()) * (isAsc ? 1 : -1);\n      return diff === 0 ? (a.dataIndex - b.dataIndex) * (isAsc ? -1 : 1) : diff;\n    });\n  }\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar _labelHelper = require(\"./helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\nvar createListFromArray = require(\"./helper/createListFromArray\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar getLayoutOnAxis = _barGrid.getLayoutOnAxis;\n\nvar DataDiffer = require(\"../data/DataDiffer\");\n\nvar prepareCartesian2d = require(\"../coord/cartesian/prepareCustom\");\n\nvar prepareGeo = require(\"../coord/geo/prepareCustom\");\n\nvar prepareSingleAxis = require(\"../coord/single/prepareCustom\");\n\nvar preparePolar = require(\"../coord/polar/prepareCustom\");\n\nvar prepareCalendar = require(\"../coord/calendar/prepareCustom\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar ITEM_STYLE_NORMAL_PATH = ['itemStyle'];\nvar ITEM_STYLE_EMPHASIS_PATH = ['emphasis', 'itemStyle'];\nvar LABEL_NORMAL = ['label'];\nvar LABEL_EMPHASIS = ['emphasis', 'label']; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird udpate animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n}; // ------\n// Model\n// ------\n\necharts.extendSeriesModel({\n  type: 'series.custom',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    // Can be set as 'none'\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // label: {}\n    // itemStyle: {}\n\n  },\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  }\n}); // -----\n// View\n// -----\n\necharts.extendChartView({\n  type: 'custom',\n\n  /**\n   * @private\n   * @type {module:echarts/data/List}\n   */\n  _data: null,\n\n  /**\n   * @override\n   */\n  render: function render(customSeries, ecModel, api) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n    this.group.removeAll();\n    data.diff(oldData).add(function (newIdx) {\n      createOrUpdate(null, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      createOrUpdate(el, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(customSeries, ecModel, api) {\n    this.group.removeAll();\n    this._data = null;\n  },\n  incrementalRender: function incrementalRender(params, customSeries, ecModel, api) {\n    var data = customSeries.getData();\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n\n    function setIncrementalAndHoverLayer(el) {\n      if (!el.isGroup) {\n        el.incremental = true;\n        el.useHoverLayer = true;\n      }\n    }\n\n    for (var idx = params.start; idx < params.end; idx++) {\n      var el = createOrUpdate(null, idx, renderItem(idx), customSeries, this.group, data);\n      el.traverse(setIncrementalAndHoverLayer);\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: zrUtil.noop\n});\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el;\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape;\n    el = graphicUtil.makePath(shape.pathData, null, {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width || 0,\n      height: shape.height || 0\n    }, 'center');\n    el.__customPathData = elOption.pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    el.__customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({});\n    el.__customText = elOption.style.text;\n  } else {\n    var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n    el = new Clz();\n  }\n\n  el.__customGraphicType = graphicType;\n  el.name = elOption.name;\n  return el;\n}\n\nfunction updateEl(el, dataIndex, elOption, animatableModel, data, isInit) {\n  var targetProps = {};\n  var elOptionStyle = elOption.style || {};\n  elOption.shape && (targetProps.shape = zrUtil.clone(elOption.shape));\n  elOption.position && (targetProps.position = elOption.position.slice());\n  elOption.scale && (targetProps.scale = elOption.scale.slice());\n  elOption.origin && (targetProps.origin = elOption.origin.slice());\n  elOption.rotation && (targetProps.rotation = elOption.rotation);\n\n  if (el.type === 'image' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    });\n  }\n\n  if (el.type === 'text' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    }); // Compatible with previous: both support\n    // textFill and fill, textStroke and stroke in 'text' element.\n\n    !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n    !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n  }\n\n  if (el.type !== 'group') {\n    el.useStyle(elOptionStyle); // Init animation.\n\n    if (isInit) {\n      el.style.opacity = 0;\n      var targetOpacity = elOptionStyle.opacity;\n      targetOpacity == null && (targetOpacity = 1);\n      graphicUtil.initProps(el, {\n        style: {\n          opacity: targetOpacity\n        }\n      }, animatableModel, dataIndex);\n    }\n  }\n\n  if (isInit) {\n    el.attr(targetProps);\n  } else {\n    graphicUtil.updateProps(el, targetProps, animatableModel, dataIndex);\n  } // z2 must not be null/undefined, otherwise sort error may occur.\n\n\n  el.attr({\n    z2: elOption.z2 || 0,\n    silent: elOption.silent\n  });\n  elOption.styleEmphasis !== false && graphicUtil.setHoverStyle(el, elOption.styleEmphasis);\n}\n\nfunction prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\n  if (elOptionStyle[prop] != null && !isInit) {\n    targetStyle[prop] = elOptionStyle[prop];\n    elOptionStyle[prop] = oldElStyle[prop];\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms() : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = zrUtil.defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currDirty = true;\n  var currItemModel;\n  var currLabelNormalModel;\n  var currLabelEmphasisModel;\n  var currVisualColor;\n  return function (dataIndexInside) {\n    currDataIndexInside = dataIndexInside;\n    currDirty = true;\n    return renderItem && renderItem(zrUtil.defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside)\n    }, userParams), userAPI) || {};\n  }; // Do not update cache until api called.\n\n  function updateCache(dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (currDirty) {\n      currItemModel = data.getItemModel(dataIndexInside);\n      currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\n      currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\n      currVisualColor = data.getItemVisual(dataIndexInside, 'color');\n      currDirty = false;\n    }\n  }\n  /**\n   * @public\n   * @param {number|string} dim\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   * @return {number|string} value\n   */\n\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.get(data.getDimension(dim || 0), dataIndexInside);\n  }\n  /**\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function style(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\n    currVisualColor != null && (itemStyle.fill = currVisualColor);\n    var opacity = data.getItemVisual(dataIndexInside, 'opacity');\n    opacity != null && (itemStyle.opacity = opacity);\n    graphicUtil.setTextStyle(itemStyle, currLabelNormalModel, null, {\n      autoColor: currVisualColor,\n      isRectText: true\n    });\n    itemStyle.text = currLabelNormalModel.getShallow('show') ? zrUtil.retrieve2(customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function styleEmphasis(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\n    graphicUtil.setTextStyle(itemStyle, currLabelEmphasisModel, null, {\n      isRectText: true\n    }, true);\n    itemStyle.text = currLabelEmphasisModel.getShallow('show') ? zrUtil.retrieve3(customSeries.getFormattedLabel(dataIndexInside, 'emphasis'), customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {string} visualType\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getItemVisual(dataIndexInside, visualType);\n  }\n  /**\n   * @public\n   * @param {number} opt.count Positive interger.\n   * @param {number} [opt.barWidth]\n   * @param {number} [opt.barMaxWidth]\n   * @param {number} [opt.barGap]\n   * @param {number} [opt.barCategoryGap]\n   * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.getBaseAxis) {\n      var baseAxis = coordSys.getBaseAxis();\n      return getLayoutOnAxis(zrUtil.defaults({\n        axis: baseAxis\n      }, opt), api);\n    }\n  }\n  /**\n   * @public\n   * @return {Array.<number>}\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {string} [opt.fontStyle]\n   * @param {number} [opt.fontWeight]\n   * @param {number} [opt.fontSize]\n   * @param {string} [opt.fontFamily]\n   * @return {string} font string\n   */\n\n\n  function font(opt) {\n    return graphicUtil.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = dataDimIndex;\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data);\n  el && data.setItemGraphicEl(dataIndex, el);\n  return el;\n}\n\nfunction doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  var elOptionType = elOption.type;\n\n  if (el && elOptionType !== el.__customGraphicType && (elOptionType !== 'path' || elOption.pathData !== el.__customPathData) && (elOptionType !== 'image' || elOption.style.image !== el.__customImagePath) && (elOptionType !== 'text' || elOption.style.text !== el.__customText)) {\n    group.remove(el);\n    el = null;\n  } // `elOption.type` is undefined when `renderItem` returns nothing.\n\n\n  if (elOptionType == null) {\n    return;\n  }\n\n  var isInit = !el;\n  !el && (el = createEl(elOption));\n  updateEl(el, dataIndex, elOption, animatableModel, data, isInit);\n\n  if (elOptionType === 'group') {\n    var oldChildren = el.children() || [];\n    var newChildren = elOption.children || [];\n\n    if (elOption.diffChildrenByName) {\n      // lower performance.\n      diffGroupChildren({\n        oldChildren: oldChildren,\n        newChildren: newChildren,\n        dataIndex: dataIndex,\n        animatableModel: animatableModel,\n        group: el,\n        data: data\n      });\n    } else {\n      // better performance.\n      var index = 0;\n\n      for (; index < newChildren.length; index++) {\n        doCreateOrUpdate(el.childAt(index), dataIndex, newChildren[index], animatableModel, el, data);\n      }\n\n      for (; index < oldChildren.length; index++) {\n        oldChildren[index] && el.remove(oldChildren[index]);\n      }\n    }\n  }\n\n  group.add(el);\n  return el;\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdate(child, context.dataIndex, childOption, context.animatableModel, context.group, context.data);\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  child && context.group.remove(child);\n}","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function coord(data) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function coord(data) {\n        // do not provide \"out\" and noRoam param,\n        // Compatible with this usage:\n        // echarts.util.map(item.points, api.coord)\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function coord(val) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(val);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var axis = this['get' + dim + 'Axis']();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var method = 'dataTo' + dim;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: zrUtil.bind(function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      }),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  var rangeInfo = coordSys.getRangeInfo();\n  return {\n    coordSys: {\n      type: 'calendar',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      cellWidth: coordSys.getCellWidth(),\n      cellHeight: coordSys.getCellHeight(),\n      rangeInfo: {\n        start: rangeInfo.start,\n        end: rangeInfo.end,\n        weeks: rangeInfo.weeks,\n        dayCount: rangeInfo.allDay\n      }\n    },\n    api: {\n      coord: function coord(data, clamp) {\n        return coordSys.dataToPoint(data, clamp);\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar layoutUtil = require(\"../util/layout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// -------------\n// Preprocessor\n// -------------\n\n\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption(option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function optionUpdated(newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function _flatten(optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function useElOptionsToUpdate() {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function init(ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function render(graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel, api);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _updateElements: function _updateElements(graphicModel, api) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n\n      if (elOption.type === 'text') {\n        var elOptionStyle = elOption.style; // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidth = elOption.width;\n        el.__ecGraphicHeight = elOption.height;\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function _relocate(graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap; // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: api.getWidth(),\n        height: api.getHeight()\n      } : {\n        // Like 'position:absolut' in css, default 0.\n        width: parentEl.__ecGraphicWidth || 0,\n        height: parentEl.__ecGraphicHeight || 0\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function _clear() {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}","require(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");","require(\"./legend\");\n\nrequire(\"./legend/ScrollableLegendModel\");\n\nrequire(\"./legend/ScrollableLegendView\");\n\nrequire(\"./legend/scrollableLegendAction\");","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\n\n\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function setScrollDataIndex(scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function init(option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption(option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function getOrient() {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\n\n\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function init() {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function resetInner() {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function renderInner(itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function layoutInner(legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function _pageGo(to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function _updatePageInfoView(legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function _getPageInfo(legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\n\n\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barPolar = require(\"../layout/barPolar\");\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./angleAxis\");\n\nrequire(\"./radiusAxis\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/PolarAxisPointer\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\n\n\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var lastStackCoords = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var center = seriesModel.get('center') || ['50%', '50%'];\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var valueAxisStart = valueAxis.getExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n      // Only ordinal axis can be stacked.\n\n      if (stacked) {\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle; // radial sector\n\n      if (valueAxis.dim === 'radius') {\n        var radiusSpan = valueAxis.dataToRadius(value) - valueAxisStart;\n        var angle = baseAxis.dataToAngle(baseValue);\n\n        if (Math.abs(radiusSpan) < barMinHeight) {\n          radiusSpan = (radiusSpan < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        r0 = baseCoord;\n        r = baseCoord + radiusSpan;\n        startAngle = angle - columnOffset;\n        endAngle = startAngle - columnWidth;\n        stacked && (lastStackCoords[stackId][baseValue][sign] = r);\n      } // tangential sector\n      else {\n          // angleAxis must be clamped.\n          var angleSpan = valueAxis.dataToAngle(value, true) - valueAxisStart;\n          var radius = baseAxis.dataToRadius(baseValue);\n\n          if (Math.abs(angleSpan) < barMinAngle) {\n            angleSpan = (angleSpan < 0 ? -1 : 1) * barMinAngle;\n          }\n\n          r0 = radius + columnOffset;\n          r = r0 + columnWidth;\n          startAngle = baseCoord;\n          endAngle = baseCoord + angleSpan; // if the previous stack is at the end of the ring,\n          // add a round to differentiate it from origin\n          // var extent = angleAxis.getExtent();\n          // var stackCoord = angle;\n          // if (stackCoord === extent[0] && value > 0) {\n          //     stackCoord = extent[1];\n          // }\n          // else if (stackCoord === extent[1] && value < 0) {\n          //     stackCoord = extent[0];\n          // }\n\n          stacked && (lastStackCoords[stackId][baseValue][sign] = endAngle);\n        }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        // Consider that positive angle is anti-clockwise,\n        // while positive radian of sector is clockwise\n        startAngle: -startAngle * Math.PI / 180,\n        endAngle: -endAngle * Math.PI / 180\n      });\n    }\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;","var RadiusAxis = require(\"./RadiusAxis\");\n\nvar AngleAxis = require(\"./AngleAxis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\n\n\nvar Polar = function Polar(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function containPoint(point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function containData(data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function getAxis(dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function getAxes() {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function getAxesByScale(scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function getAngleAxis() {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function getRadiusAxis() {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function getOtherAxis(axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function getBaseAxis() {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function getTooltipAxes(dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function dataToPoint(data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function pointToData(point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function pointToCoord(point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function coordToPoint(coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function pointToData(point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function pointToData(point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nrequire(\"./AxisModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function findAxisModel(axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function getCoordSysModel() {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/AngleAxisView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar AxisView = require(\"./AxisView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n} // Remove the last tick which will overlap the first tick\n\n\nfunction fixAngleOverlap(list) {\n  var firstItem = list[0];\n  var lastItem = list[list.length - 1];\n\n  if (firstItem && lastItem && Math.abs(Math.abs(firstItem.coord - lastItem.coord) - 360) < 1e-4) {\n    list.pop();\n  }\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function render(angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n    var labels = zrUtil.map(angleAxis.getViewLabels(), function (labelItem) {\n      var labelItem = zrUtil.clone(labelItem);\n      labelItem.coord = angleAxis.dataToCoord(labelItem.tickValue);\n      return labelItem;\n    });\n    fixAngleOverlap(labels);\n    fixAngleOverlap(ticksAngles);\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent, labels);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function _axisLine(angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\n    var circle = new graphic.Circle({\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: radiusExtent[getRadiusIdx(polar)]\n      },\n      style: lineStyleModel.getLineStyle(),\n      z2: 1,\n      silent: true\n    });\n    circle.style.fill = null;\n    this.group.add(circle);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function _axisTick(angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngleItem) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngleItem.coord)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function _axisLabel(angleAxisModel, polar, ticksAngles, radiusExtent, labels) {\n    var rawCategoryData = angleAxisModel.getCategories(true);\n    var commonLabelModel = angleAxisModel.getModel('axisLabel');\n    var labelMargin = commonLabelModel.get('margin'); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    zrUtil.each(labels, function (labelItem, idx) {\n      var labelModel = commonLabelModel;\n      var tickValue = labelItem.tickValue;\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelItem.coord]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n        labelModel = new Model(rawCategoryData[tickValue].textStyle, commonLabelModel, commonLabelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: true\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labelItem.formattedLabel,\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function _splitLine(angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i].coord)\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function _splitArea(angleAxisModel, polar, ticksAngles, radiusExtent) {\n    if (!ticksAngles.length) {\n      return;\n    }\n\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0].coord * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i].coord * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i].coord * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/RadiusAxisView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function render(radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function _splitLine(radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i].coord\n        },\n        silent: true\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function _splitArea(radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    if (!ticksCoords.length) {\n      return;\n    }\n\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0].coord;\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i].coord,\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i].coord;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;","var formatUtil = require(\"../../util/format\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar AxisView = require(\"../axis/AxisView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function makeElOption(elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function line(axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function shadow(axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar Model = require(\"../../model/Model\");\n\nvar selectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"./geoCreator\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\n   * @type {module:echarts/coord/geo/Geo}\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function init(option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n  },\n  optionUpdated: function optionUpdated() {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      show: false,\n      color: '#000'\n    },\n    itemStyle: {\n      // color: 各异,\n      borderWidth: 0.5,\n      borderColor: '#444',\n      color: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function getRegionModel(name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function getFormattedLabel(name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label.' + status + '.formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function setZoom(zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function setCenter(center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;","var MapDraw = require(\"../helper/MapDraw\");\n\nvar echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendComponentView({\n  type: 'geo',\n  init: function init(ecModel, api) {\n    var mapDraw = new MapDraw(api, true);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n  },\n  render: function render(geoModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    this.group.silent = geoModel.get('silent');\n  },\n  dispose: function dispose() {\n    this._mapDraw && this._mapDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./brush/preprocessor\");\n\nrequire(\"./brush/visualEncoding\");\n\nrequire(\"./brush/BrushModel\");\n\nrequire(\"./brush/BrushView\");\n\nrequire(\"./brush/brushAction\");\n\nrequire(\"./toolbox/feature/Brush\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Brush component entry\n */\n\n\necharts.registerPreprocessor(preprocessor);","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\n\nfunction _default(option, isNew) {\n  var brushComponents = option && option.brush;\n\n  if (!zrUtil.isArray(brushComponents)) {\n    brushComponents = brushComponents ? [brushComponents] : [];\n  }\n\n  if (!brushComponents.length) {\n    return;\n  }\n\n  var brushComponentSpecifiedBtns = [];\n  zrUtil.each(brushComponents, function (brushOpt) {\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\n\n    if (tbs instanceof Array) {\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\n    }\n  });\n  var toolbox = option && option.toolbox;\n\n  if (zrUtil.isArray(toolbox)) {\n    toolbox = toolbox[0];\n  }\n\n  if (!toolbox) {\n    toolbox = {\n      feature: {}\n    };\n    option.toolbox = [toolbox];\n  }\n\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\n  removeDuplicate(brushTypes);\n\n  if (isNew && !brushTypes.length) {\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\n  }\n}\n\nfunction removeDuplicate(arr) {\n  var map = {};\n  zrUtil.each(arr, function (val) {\n    map[val] = 1;\n  });\n  arr.length = 0;\n  zrUtil.each(map, function (flag, val) {\n    arr.push(val);\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n});\n/**\n * Register the visual encoding if this modules required.\n */\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function rect(area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function polygon(area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}","var polygonContain = require(\"zrender/lib/contain/polygon\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\n\n\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function point(itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function rect(itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function point(itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function rect(itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || lineIntersectPolygon(x, y, x + width, y, points) || lineIntersectPolygon(x, y, x, y + height, points) || lineIntersectPolygon(x + width, y, x + width, y + height, points) || lineIntersectPolygon(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function point(itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function rect(itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nfunction lineIntersectPolygon(lx, ly, l2x, l2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineIntersect(lx, ly, l2x, l2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n} // Code from <http://blog.csdn.net/rickliuxiao/article/details/6259322> with some fix.\n// See <https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection>\n\n\nfunction lineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  var delta = determinant(a2x - a1x, b1x - b2x, a2y - a1y, b1y - b2y);\n\n  if (nearZero(delta)) {\n    // parallel\n    return false;\n  }\n\n  var namenda = determinant(b1x - a1x, b1x - b2x, b1y - a1y, b1y - b2y) / delta;\n\n  if (namenda < 0 || namenda > 1) {\n    return false;\n  }\n\n  var miu = determinant(a2x - a1x, b1x - a1x, a2y - a1y, b1y - a1y) / delta;\n\n  if (miu < 0 || miu > 1) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nfunction determinant(v1, v2, v3, v4) {\n  return v1 * v4 - v2 * v3;\n}\n\nvar _default = selector;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar Model = require(\"../../model/Model\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  areas: [],\n\n  /**\n   * Current activated brush type.\n   * If null, brush is inactived.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {string}\n   */\n  brushType: null,\n\n  /**\n   * Current brush opt.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {Object}\n   */\n  brushOption: {},\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  coordInfoList: [],\n  optionUpdated: function optionUpdated(newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    var inBrush = thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n\n    if (!inBrush.hasOwnProperty('liftZ')) {\n      // Bigger than the highlight z lift, otherwise it will\n      // be effected by the highlight z when brush.\n      inBrush.liftZ = 5;\n    }\n  },\n\n  /**\n   * If ranges is null/undefined, range state remain.\n   *\n   * @param {Array.<Object>} [ranges]\n   */\n  setAreas: function setAreas(areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\n   * see module:echarts/component/helper/BrushController\n   * @param {Object} brushOption\n   */\n  setBrushOption: function setBrushOption(brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../helper/BrushController\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendComponentView({\n  type: 'brush',\n  init: function init(ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/brush/BrushModel}\n     */\n\n    this.model;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  },\n\n  /**\n   * @override\n   */\n  render: function render(brushModel) {\n    this.model = brushModel;\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateTransform: updateController,\n\n  /**\n   * @override\n   */\n  updateView: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateLayout: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: updateController,\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    this._brushController.dispose();\n  },\n\n  /**\n   * @private\n   */\n  _onBrush: function _onBrush(areas, opt) {\n    var modelId = this.model.id;\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  }\n});\n\nfunction updateController(brushModel, ecModel, api, payload) {\n  // Do not update controller when drawing.\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * payload: {\n *      brushIndex: number, or,\n *      brushId: string, or,\n *      brushName: string,\n *      globalRanges: Array\n * }\n */\n\n\necharts.registerAction({\n  type: 'brush',\n  event: 'brush'\n  /*, update: 'updateView' */\n\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush',\n    query: payload\n  }, function (brushModel) {\n    brushModel.setAreas(payload.areas);\n  });\n});\n/**\n * payload: {\n *      brushComponents: [\n *          {\n *              brushId,\n *              brushIndex,\n *              brushName,\n *              series: [\n *                  {\n *                      seriesId,\n *                      seriesIndex,\n *                      seriesName,\n *                      rawIndices: [21, 34, ...]\n *                  },\n *                  ...\n *              ]\n *          },\n *          ...\n *      ]\n * }\n */\n\necharts.registerAction({\n  type: 'brushSelect',\n  event: 'brushSelected',\n  update: 'none'\n}, function () {});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar lang = require(\"../../../lang\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype; // proto.updateLayout = function (featureModel, ecModel, api) {\n\nproto.render = proto.updateView = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;","require(\"../coord/calendar/Calendar\");\n\nrequire(\"../coord/calendar/CalendarModel\");\n\nrequire(\"./calendar/CalendarView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (24*60*60*1000)\n\n\nvar PROXIMATE_ONE_DAY = 86400000;\n/**\n * Calendar\n *\n * @constructor\n *\n * @param {Object} calendarModel calendarModel\n * @param {Object} ecModel       ecModel\n * @param {Object} api           api\n */\n\nfunction Calendar(calendarModel, ecModel, api) {\n  this._model = calendarModel;\n}\n\nCalendar.prototype = {\n  constructor: Calendar,\n  type: 'calendar',\n  dimensions: ['time', 'value'],\n  // Required in createListFromData\n  getDimensionsInfo: function getDimensionsInfo() {\n    return [{\n      name: 'time',\n      type: 'time'\n    }, 'value'];\n  },\n  getRangeInfo: function getRangeInfo() {\n    return this._rangeInfo;\n  },\n  getModel: function getModel() {\n    return this._model;\n  },\n  getRect: function getRect() {\n    return this._rect;\n  },\n  getCellWidth: function getCellWidth() {\n    return this._sw;\n  },\n  getCellHeight: function getCellHeight() {\n    return this._sh;\n  },\n  getOrient: function getOrient() {\n    return this._orient;\n  },\n\n  /**\n   * getFirstDayOfWeek\n   *\n   * @example\n   *     0 : start at Sunday\n   *     1 : start at Monday\n   *\n   * @return {number}\n   */\n  getFirstDayOfWeek: function getFirstDayOfWeek() {\n    return this._firstDayOfWeek;\n  },\n\n  /**\n   * get date info\n   *\n   * @param  {string|number} date date\n   * @return {Object}\n   * {\n   *      y: string, local full year, eg., '1940',\n   *      m: string, local month, from '01' ot '12',\n   *      d: string, local date, from '01' to '31' (if exists),\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\n   *      time: timestamp,\n   *      formatedDate: string, yyyy-MM-dd,\n   *      date: original date object.\n   * }\n   */\n  getDateInfo: function getDateInfo(date) {\n    date = numberUtil.parseDate(date);\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    var day = date.getDay();\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\n    return {\n      y: y,\n      m: m,\n      d: d,\n      day: day,\n      time: date.getTime(),\n      formatedDate: y + '-' + m + '-' + d,\n      date: date\n    };\n  },\n  getNextNDay: function getNextNDay(date, n) {\n    n = n || 0;\n\n    if (n === 0) {\n      return this.getDateInfo(date);\n    }\n\n    date = new Date(this.getDateInfo(date).time);\n    date.setDate(date.getDate() + n);\n    return this.getDateInfo(date);\n  },\n  update: function update(ecModel, api) {\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\n    this._orient = this._model.get('orient');\n    this._lineWidth = this._model.getModel('itemStyle').getItemStyle().lineWidth || 0;\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\n    var weeks = this._rangeInfo.weeks || 1;\n    var whNames = ['width', 'height'];\n\n    var cellSize = this._model.get('cellSize').slice();\n\n    var layoutParams = this._model.getBoxLayoutParams();\n\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\n    zrUtil.each([0, 1], function (idx) {\n      if (cellSizeSpecified(cellSize, idx)) {\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\n      }\n    });\n    var whGlobal = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\n    zrUtil.each([0, 1], function (idx) {\n      if (!cellSizeSpecified(cellSize, idx)) {\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\n      }\n    });\n\n    function cellSizeSpecified(cellSize, idx) {\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\n    }\n\n    this._sw = cellSize[0];\n    this._sh = cellSize[1];\n  },\n\n  /**\n   * Convert a time data(time, value) item to (x, y) point.\n   *\n   * @override\n   * @param  {Array|number} data data\n   * @param  {boolean} [clamp=true] out of range\n   * @return {Array} point\n   */\n  dataToPoint: function dataToPoint(data, clamp) {\n    zrUtil.isArray(data) && (data = data[0]);\n    clamp == null && (clamp = true);\n    var dayInfo = this.getDateInfo(data);\n    var range = this._rangeInfo;\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\n\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time < range.end.time + PROXIMATE_ONE_DAY)) {\n      return [NaN, NaN];\n    }\n\n    var week = dayInfo.day;\n\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\n\n    if (this._orient === 'vertical') {\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\n    }\n\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\n  },\n\n  /**\n   * Convert a (x, y) point to time data\n   *\n   * @override\n   * @param  {string} point point\n   * @return {string}       data\n   */\n  pointToData: function pointToData(point) {\n    var date = this.pointToDate(point);\n    return date && date.time;\n  },\n\n  /**\n   * Convert a time date item to (x, y) four point.\n   *\n   * @param  {Array} data  date[0] is date\n   * @param  {boolean} [clamp=true]  out of range\n   * @return {Object}       point\n   */\n  dataToRect: function dataToRect(data, clamp) {\n    var point = this.dataToPoint(data, clamp);\n    return {\n      contentShape: {\n        x: point[0] - (this._sw - this._lineWidth) / 2,\n        y: point[1] - (this._sh - this._lineWidth) / 2,\n        width: this._sw - this._lineWidth,\n        height: this._sh - this._lineWidth\n      },\n      center: point,\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\n    };\n  },\n\n  /**\n   * Convert a (x, y) point to time date\n   *\n   * @param  {Array} point point\n   * @return {Object}       date\n   */\n  pointToDate: function pointToDate(point) {\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\n    var range = this._rangeInfo.range;\n\n    if (this._orient === 'vertical') {\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\n    }\n\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * initRange\n   *\n   * @private\n   * @return {Array} [start, end]\n   */\n  _initRangeOption: function _initRangeOption() {\n    var range = this._model.get('range');\n\n    var rg = range;\n\n    if (zrUtil.isArray(rg) && rg.length === 1) {\n      rg = rg[0];\n    }\n\n    if (/^\\d{4}$/.test(rg)) {\n      range = [rg + '-01-01', rg + '-12-31'];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\n      var start = this.getDateInfo(rg);\n      var firstDay = start.date;\n      firstDay.setMonth(firstDay.getMonth() + 1);\n      var end = this.getNextNDay(firstDay, -1);\n      range = [start.formatedDate, end.formatedDate];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\n      range = [rg, rg];\n    }\n\n    var tmp = this._getRangeInfo(range);\n\n    if (tmp.start.time > tmp.end.time) {\n      range.reverse();\n    }\n\n    return range;\n  },\n\n  /**\n   * range info\n   *\n   * @private\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\n   *  If range[0] > range[1], they will not be reversed.\n   * @return {Object}       obj\n   */\n  _getRangeInfo: function _getRangeInfo(range) {\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\n    var reversed;\n\n    if (range[0].time > range[1].time) {\n      reversed = true;\n      range.reverse();\n    }\n\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case:\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\n    // ```\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\n    // var second = new Date(1478412000000);\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\n    // ```\n    // will get wrong result because of DST. So we should fix it.\n\n    var date = new Date(range[0].time);\n    var startDateNum = date.getDate();\n    var endDateNum = range[1].date.getDate();\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\n\n    if (date.getDate() !== endDateNum) {\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\n\n      while (date.getDate() !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\n        allDay -= sign;\n        date.setDate(startDateNum + allDay - 1);\n      }\n    }\n\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\n    reversed && range.reverse();\n    return {\n      range: [range[0].formatedDate, range[1].formatedDate],\n      start: range[0],\n      end: range[1],\n      allDay: allDay,\n      weeks: weeks,\n      // From 0.\n      nthWeek: nthWeek,\n      fweek: range[0].day,\n      lweek: range[1].day\n    };\n  },\n\n  /**\n   * get date by nthWeeks and week day in range\n   *\n   * @private\n   * @param  {number} nthWeek the week\n   * @param  {number} day   the week day\n   * @param  {Array} range [d1, d2]\n   * @return {Object}\n   */\n  _getDateByWeeksAndDay: function _getDateByWeeksAndDay(nthWeek, day, range) {\n    var rangeInfo = this._getRangeInfo(range);\n\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\n      return false;\n    }\n\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\n    var date = new Date(rangeInfo.start.time);\n    date.setDate(rangeInfo.start.d + nthDay);\n    return this.getDateInfo(date);\n  }\n};\nCalendar.dimensions = Calendar.prototype.dimensions;\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\n\nCalendar.create = function (ecModel, api) {\n  var calendarList = [];\n  ecModel.eachComponent('calendar', function (calendarModel) {\n    var calendar = new Calendar(calendarModel, ecModel, api);\n    calendarList.push(calendar);\n    calendarModel.coordinateSystem = calendar;\n  });\n  ecModel.eachSeries(function (calendarSeries) {\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\n      // Inject coordinate system\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\n    }\n  });\n  return calendarList;\n};\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var calendarModel = finder.calendarModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nCoordinateSystem.register('calendar', Calendar);\nvar _default = Calendar;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar sizeCalculable = _layout.sizeCalculable;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar CalendarModel = ComponentModel.extend({\n  type: 'calendar',\n\n  /**\n   * @type {module:echarts/coord/calendar/Calendar}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    left: 80,\n    top: 60,\n    cellSize: 20,\n    // horizontal vertical\n    orient: 'horizontal',\n    // month separate line style\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: '#000',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // rect style  temporarily unused emphasis\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1,\n      borderColor: '#ccc'\n    },\n    // week text style\n    dayLabel: {\n      show: true,\n      // a week first day\n      firstDay: 0,\n      // start end\n      position: 'start',\n      margin: '50%',\n      // 50% of cellSize\n      nameMap: 'en',\n      color: '#000'\n    },\n    // month text style\n    monthLabel: {\n      show: true,\n      // start end\n      position: 'start',\n      margin: 5,\n      // center or left\n      align: 'center',\n      // cn en []\n      nameMap: 'en',\n      formatter: null,\n      color: '#000'\n    },\n    // year text style\n    yearLabel: {\n      show: true,\n      // top bottom left right\n      position: null,\n      margin: 30,\n      formatter: null,\n      color: '#ccc',\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      fontSize: 20\n    }\n  },\n\n  /**\n   * @override\n   */\n  init: function init(option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    CalendarModel.superApply(this, 'init', arguments);\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption(option, extraOpt) {\n    CalendarModel.superApply(this, 'mergeOption', arguments);\n    mergeAndNormalizeLayoutParams(this.option, option);\n  }\n});\n\nfunction mergeAndNormalizeLayoutParams(target, raw) {\n  // Normalize cellSize\n  var cellSize = target.cellSize;\n\n  if (!zrUtil.isArray(cellSize)) {\n    cellSize = target.cellSize = [cellSize, cellSize];\n  } else if (cellSize.length === 1) {\n    cellSize[1] = cellSize[0];\n  }\n\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\n    // If user have set `width` or both `left` and `right`, cellSize\n    // will be automatically set to 'auto', otherwise the default\n    // setting of cellSize will make `width` setting not work.\n    if (sizeCalculable(raw, hvIdx)) {\n      cellSize[hvIdx] = 'auto';\n    }\n\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\n  });\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = CalendarModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar MONTH_TEXT = {\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n};\nvar WEEK_TEXT = {\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  CN: ['日', '一', '二', '三', '四', '五', '六']\n};\n\nvar _default = echarts.extendComponentView({\n  type: 'calendar',\n\n  /**\n   * top/left line points\n   *  @private\n   */\n  _tlpoints: null,\n\n  /**\n   * bottom/right line points\n   *  @private\n   */\n  _blpoints: null,\n\n  /**\n   * first day of month\n   *  @private\n   */\n  _firstDayOfMonth: null,\n\n  /**\n   * first day point of month\n   *  @private\n   */\n  _firstDayPoints: null,\n  render: function render(calendarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var coordSys = calendarModel.coordinateSystem; // range info\n\n    var rangeData = coordSys.getRangeInfo();\n    var orient = coordSys.getOrient();\n\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\n\n\n    this._renderLines(calendarModel, rangeData, orient, group);\n\n    this._renderYearText(calendarModel, rangeData, orient, group);\n\n    this._renderMonthText(calendarModel, orient, group);\n\n    this._renderWeekText(calendarModel, rangeData, orient, group);\n  },\n  // render day rect\n  _renderDayRect: function _renderDayRect(calendarModel, rangeData, group) {\n    var coordSys = calendarModel.coordinateSystem;\n    var itemRectStyleModel = calendarModel.getModel('itemStyle').getItemStyle();\n    var sw = coordSys.getCellWidth();\n    var sh = coordSys.getCellHeight();\n\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\n      var point = coordSys.dataToRect([i], false).tl; // every rect\n\n      var rect = new graphic.Rect({\n        shape: {\n          x: point[0],\n          y: point[1],\n          width: sw,\n          height: sh\n        },\n        cursor: 'default',\n        style: itemRectStyleModel\n      });\n      group.add(rect);\n    }\n  },\n  // render separate line\n  _renderLines: function _renderLines(calendarModel, rangeData, orient, group) {\n    var self = this;\n    var coordSys = calendarModel.coordinateSystem;\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\n    var show = calendarModel.get('splitLine.show');\n    var lineWidth = lineStyleModel.lineWidth;\n    this._tlpoints = [];\n    this._blpoints = [];\n    this._firstDayOfMonth = [];\n    this._firstDayPoints = [];\n    var firstDay = rangeData.start;\n\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\n      addPoints(firstDay.formatedDate);\n\n      if (i === 0) {\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\n      }\n\n      var date = firstDay.date;\n      date.setMonth(date.getMonth() + 1);\n      firstDay = coordSys.getDateInfo(date);\n    }\n\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\n\n    function addPoints(date) {\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\n\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\n\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\n\n      self._tlpoints.push(points[0]);\n\n      self._blpoints.push(points[points.length - 1]);\n\n      show && self._drawSplitline(points, lineStyleModel, group);\n    } // render top/left line\n\n\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\n\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\n  },\n  // get points at both ends\n  _getEdgesPoints: function _getEdgesPoints(points, lineWidth, orient) {\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\n\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\n    return rs;\n  },\n  // render split line\n  _drawSplitline: function _drawSplitline(points, lineStyleModel, group) {\n    var poyline = new graphic.Polyline({\n      z2: 20,\n      shape: {\n        points: points\n      },\n      style: lineStyleModel\n    });\n    group.add(poyline);\n  },\n  // render month line of one week points\n  _getLinePointsOfOneWeek: function _getLinePointsOfOneWeek(calendarModel, date, orient) {\n    var coordSys = calendarModel.coordinateSystem;\n    date = coordSys.getDateInfo(date);\n    var points = [];\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(date.time, i);\n      var point = coordSys.dataToRect([tmpD.time], false);\n      points[2 * tmpD.day] = point.tl;\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\n    }\n\n    return points;\n  },\n  _formatterLabel: function _formatterLabel(formatter, params) {\n    if (typeof formatter === 'string' && formatter) {\n      return formatUtil.formatTplSimple(formatter, params);\n    }\n\n    if (typeof formatter === 'function') {\n      return formatter(params);\n    }\n\n    return params.nameMap;\n  },\n  _yearTextPositionControl: function _yearTextPositionControl(textEl, point, orient, position, margin) {\n    point = point.slice();\n    var aligns = ['center', 'bottom'];\n\n    if (position === 'bottom') {\n      point[1] += margin;\n      aligns = ['center', 'top'];\n    } else if (position === 'left') {\n      point[0] -= margin;\n    } else if (position === 'right') {\n      point[0] += margin;\n      aligns = ['center', 'top'];\n    } else {\n      // top\n      point[1] -= margin;\n    }\n\n    var rotate = 0;\n\n    if (position === 'left' || position === 'right') {\n      rotate = Math.PI / 2;\n    }\n\n    return {\n      rotation: rotate,\n      position: point,\n      style: {\n        textAlign: aligns[0],\n        textVerticalAlign: aligns[1]\n      }\n    };\n  },\n  // render year\n  _renderYearText: function _renderYearText(calendarModel, rangeData, orient, group) {\n    var yearLabel = calendarModel.getModel('yearLabel');\n\n    if (!yearLabel.get('show')) {\n      return;\n    }\n\n    var margin = yearLabel.get('margin');\n    var pos = yearLabel.get('position');\n\n    if (!pos) {\n      pos = orient !== 'horizontal' ? 'top' : 'left';\n    }\n\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\n    var xc = (points[0][0] + points[1][0]) / 2;\n    var yc = (points[0][1] + points[1][1]) / 2;\n    var idx = orient === 'horizontal' ? 0 : 1;\n    var posPoints = {\n      top: [xc, points[idx][1]],\n      bottom: [xc, points[1 - idx][1]],\n      left: [points[1 - idx][0], yc],\n      right: [points[idx][0], yc]\n    };\n    var name = rangeData.start.y;\n\n    if (+rangeData.end.y > +rangeData.start.y) {\n      name = name + '-' + rangeData.end.y;\n    }\n\n    var formatter = yearLabel.get('formatter');\n    var params = {\n      start: rangeData.start.y,\n      end: rangeData.end.y,\n      nameMap: name\n    };\n\n    var content = this._formatterLabel(formatter, params);\n\n    var yearText = new graphic.Text({\n      z2: 30\n    });\n    graphic.setTextStyle(yearText.style, yearLabel, {\n      text: content\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\n    group.add(yearText);\n  },\n  _monthTextPositionControl: function _monthTextPositionControl(point, isCenter, orient, position, margin) {\n    var align = 'left';\n    var vAlign = 'top';\n    var x = point[0];\n    var y = point[1];\n\n    if (orient === 'horizontal') {\n      y = y + margin;\n\n      if (isCenter) {\n        align = 'center';\n      }\n\n      if (position === 'start') {\n        vAlign = 'bottom';\n      }\n    } else {\n      x = x + margin;\n\n      if (isCenter) {\n        vAlign = 'middle';\n      }\n\n      if (position === 'start') {\n        align = 'right';\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render month and year text\n  _renderMonthText: function _renderMonthText(calendarModel, orient, group) {\n    var monthLabel = calendarModel.getModel('monthLabel');\n\n    if (!monthLabel.get('show')) {\n      return;\n    }\n\n    var nameMap = monthLabel.get('nameMap');\n    var margin = monthLabel.get('margin');\n    var pos = monthLabel.get('position');\n    var align = monthLabel.get('align');\n    var termPoints = [this._tlpoints, this._blpoints];\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var idx = pos === 'start' ? 0 : 1;\n    var axis = orient === 'horizontal' ? 0 : 1;\n    margin = pos === 'start' ? -margin : margin;\n    var isCenter = align === 'center';\n\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\n      var tmp = termPoints[idx][i].slice();\n      var firstDay = this._firstDayOfMonth[i];\n\n      if (isCenter) {\n        var firstDayPoints = this._firstDayPoints[i];\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\n      }\n\n      var formatter = monthLabel.get('formatter');\n      var name = nameMap[+firstDay.m - 1];\n      var params = {\n        yyyy: firstDay.y,\n        yy: (firstDay.y + '').slice(2),\n        MM: firstDay.m,\n        M: +firstDay.m,\n        nameMap: name\n      };\n\n      var content = this._formatterLabel(formatter, params);\n\n      var monthText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\n        text: content\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\n      group.add(monthText);\n    }\n  },\n  _weekTextPositionControl: function _weekTextPositionControl(point, orient, position, margin, cellSize) {\n    var align = 'center';\n    var vAlign = 'middle';\n    var x = point[0];\n    var y = point[1];\n    var isStart = position === 'start';\n\n    if (orient === 'horizontal') {\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\n      align = isStart ? 'right' : 'left';\n    } else {\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\n      vAlign = isStart ? 'bottom' : 'top';\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render weeks\n  _renderWeekText: function _renderWeekText(calendarModel, rangeData, orient, group) {\n    var dayLabel = calendarModel.getModel('dayLabel');\n\n    if (!dayLabel.get('show')) {\n      return;\n    }\n\n    var coordSys = calendarModel.coordinateSystem;\n    var pos = dayLabel.get('position');\n    var nameMap = dayLabel.get('nameMap');\n    var margin = dayLabel.get('margin');\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\n\n    if (pos === 'start') {\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\n      margin = -margin;\n    }\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(start, i);\n      var point = coordSys.dataToRect([tmpD.time], false).center;\n      var day = i;\n      day = Math.abs((i + firstDayOfWeek) % 7);\n      var weekText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\n        text: nameMap[day]\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\n      group.add(weekText);\n    }\n  }\n});\n\nmodule.exports = _default;","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SliderZoomModel\");\n\nrequire(\"./dataZoom/SliderZoomView\");\n\nrequire(\"./dataZoom/InsideZoomModel\");\n\nrequire(\"./dataZoom/InsideZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function AxisProxy(dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel; // /**\n  //  * @readOnly\n  //  * @private\n  //  */\n  // this.hasSeriesStacked;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function hostedBy(dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function getDataValueWindow() {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function getDataPercentWindow() {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function getTargetSeriesModels() {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function getAxisModel() {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function getOtherAxisModel() {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function getMinMaxSpan() {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function calculateDataWindow(opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function reset(dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // this.hasSeriesStacked = false;\n    // each(targetSeries, function (series) {\n    // var data = series.getData();\n    // var dataDim = data.mapDimension(this._dimName);\n    // var stackedDimension = data.getCalculationInfo('stackedDimension');\n    // if (stackedDimension && stackedDimension === dataDim) {\n    // this.hasSeriesStacked = true;\n    // }\n    // }, this);\n\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function restore(dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function filterData(dataZoomModel, api) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n    // But currently, stack has been fixed to based on value but not index,\n    // so this is not an issue any more.\n    // var otherAxisModel = this.getOtherAxisModel();\n    // if (dataZoomModel.get('$fromToolbox')\n    //     && otherAxisModel\n    //     && otherAxisModel.hasSeriesStacked\n    // ) {\n    //     filterMode = 'empty';\n    // }\n    // TODO\n    // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\n    // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesData.mapDimension(axisDim, true);\n\n      if (filterMode === 'weakFilter') {\n        seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            var range = {};\n            range[dim] = valueWindow; // console.time('select');\n\n            seriesData.selectRange(range); // console.timeEnd('select');\n          }\n        });\n      }\n\n      each(dataDims, function (dim) {\n        seriesData.setApproximateExtent(valueWindow, dim);\n      });\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesData.mapDimension(axisDim, true), function (dim) {\n        var seriesExtent = seriesData.getApproximateExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && axisModel.getCategories().length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar throttle = require(\"../../util/throttle\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar layout = require(\"../../util/layout\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function init(ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function render(dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function remove() {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function _buildView() {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function _resetLocation() {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function _positionGroup() {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function _getViewExtent() {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function _renderBackground() {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function _renderDataShadow() {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function _prepareDataShadowInfo() {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        otherDim = seriesModel.getData().mapDimension(otherDim);\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function _renderHandle() {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      onmousemove: function onmousemove(e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        onmousemove: function onmousemove(e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function _resetInterval() {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   * @return {boolean} changed\n   */\n  _updateInterval: function _updateInterval(handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    var lastRange = this._range;\n    var range = this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n    return !lastRange || lastRange[0] !== range[0] || lastRange[1] !== range[1];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function _updateView(nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function _updateDataInfo(nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function _formatLabel(value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function _showDataInfo(showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function _onDragMove(handleIndex, dx, dy) {\n    this._dragging = true; // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    var changed = this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime); // Avoid dispatch dataZoom repeatly but range not changed,\n    // which cause bad visual effect when progressive enabled.\n\n\n    changed && realtime && this._dispatchZoomAction();\n  },\n  _onDragEnd: function _onDragEnd() {\n    this._dragging = false;\n\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\n    // drag end will cause the whole view rerender, which is unnecessary.\n\n\n    var realtime = this.dataZoomModel.get('realtime');\n    !realtime && this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function _onClickPanelClick(e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    var changed = this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    changed && this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function _dispatchZoomAction() {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function _findCoordRect() {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar roams = require(\"./roams\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function init(ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function render(dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Hance the `throttle` util ensures to preserve command order,\n    // here simply updating range all the time will not cause missing\n    // any of the the roam change.\n\n    this._range = dataZoomModel.getPercentRange(); // Reset controllers.\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var dataZoomOption = dataZoomModel.option;\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function containsPoint(e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          throttleRate: dataZoomModel.get('throttle', true),\n          panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n          zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n          zoomLock: dataZoomOption.zoomLock,\n          disabled: dataZoomOption.disabled,\n          roamControllerOpt: {\n            zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n            moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n            preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n          }\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function _onPan(coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName]([oldX, oldY], [newX, newY], axisModel, controller, coordInfo);\n    var percentDelta = directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function _onZoom(coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [mouseX, mouseY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    scale = Math.max(1 / scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  }\n});\nvar getDirectionInfo = {\n  grid: function grid(oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function polar(oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function singleAxis(oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\n\n\nvar curry = zrUtil.curry;\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {number} dataZoomInfo.throttleRate\n * @param {Function} dataZoomInfo.panGetRange\n * @param {Function} dataZoomInfo.zoomGetRange\n * @param {boolean} [dataZoomInfo.zoomLock]\n * @param {boolean} [dataZoomInfo.disabled]\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.throttleRate, 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  controller.on('pan', curry(onPan, newRecord));\n  controller.on('zoom', curry(onZoom, newRecord));\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n\nfunction onPan(record, dx, dy, oldX, oldY, newX, newY) {\n  wrapAndDispatch(record, function (info) {\n    return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n  });\n}\n\nfunction onZoom(record, scale, mouseX, mouseY) {\n  wrapAndDispatch(record, function (info) {\n    return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n  });\n}\n\nfunction wrapAndDispatch(record, getRange) {\n  var batch = [];\n  zrUtil.each(record.dataZoomInfos, function (info) {\n    var range = getRange(info);\n    !info.disabled && range && batch.push({\n      dataZoomId: info.dataZoomId,\n      start: range[0],\n      end: range[1]\n    });\n  });\n  batch.length && record.dispatchAction(batch);\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType;\n  var opt = {}; // DO NOT use reserved word (true, false, undefined) as key literally. Even if encapsulated\n  // as string, it is probably revert to reserved word by compress tool. See #7411.\n\n  var prefix = 'type_';\n  var typePriority = {\n    'type_true': 2,\n    'type_move': 1,\n    'type_false': 0,\n    'type_undefined': -1\n  };\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n\n    if (typePriority[prefix + oneType] > typePriority[prefix + controlType]) {\n      controlType = oneType;\n    } // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n\n\n    zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n  });\n  return {\n    controlType: controlType,\n    opt: opt\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.generateCoordId = generateCoordId;","require(\"./visualMapContinuous\");\n\nrequire(\"./visualMapPiecewise\");","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/ContinuousModel\");\n\nrequire(\"./visualMap/ContinuousView\");\n\nrequire(\"./visualMap/visualMapAction\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\n\n\necharts.registerPreprocessor(preprocessor);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar numberUtil = require(\"../../util/number\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Constant\n\n\nvar DEFAULT_BAR_BOUND = [20, 140];\nvar ContinuousModel = VisualMapModel.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    align: 'auto',\n    // 'auto', 'left', 'right', 'top', 'bottom'\n    calculable: false,\n    // This prop effect default component type determine,\n    // See echarts/component/visualMap/typeDefaulter.\n    range: null,\n    // selected range. In default case `range` is [min, max]\n    // and can auto change along with modification of min max,\n    // util use specifid a range.\n    realtime: true,\n    // Whether realtime update.\n    itemHeight: null,\n    // The length of the range control edge.\n    itemWidth: null,\n    // The length of the other side.\n    hoverLink: true,\n    // Enable hover highlight.\n    hoverLinkDataSize: null,\n    // The size of hovered data.\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\n    // If not specified, follow the value of `realtime`.\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function optionUpdated(newOption, isInit) {\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\n    this.resetExtent();\n    this.resetVisual(function (mappingOption) {\n      mappingOption.mappingMethod = 'linear';\n      mappingOption.dataExtent = this.getExtent();\n    });\n\n    this._resetRange();\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  resetItemSize: function resetItemSize() {\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\n    var itemSize = this.itemSize;\n    this._orient === 'horizontal' && itemSize.reverse();\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n  },\n\n  /**\n   * @private\n   */\n  _resetRange: function _resetRange() {\n    var dataExtent = this.getExtent();\n    var range = this.option.range;\n\n    if (!range || range.auto) {\n      // `range` should always be array (so we dont use other\n      // value like 'auto') for user-friend. (consider getOption).\n      dataExtent.auto = 1;\n      this.option.range = dataExtent;\n    } else if (zrUtil.isArray(range)) {\n      if (range[0] > range[1]) {\n        range.reverse();\n      }\n\n      range[0] = Math.max(range[0], dataExtent[0]);\n      range[1] = Math.min(range[1], dataExtent[1]);\n    }\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function completeVisualOption() {\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n    zrUtil.each(this.stateList, function (state) {\n      var symbolSize = this.option.controller[state].symbolSize;\n\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n        symbolSize[0] = 0; // For good looking.\n      }\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  setSelected: function setSelected(selected) {\n    this.option.range = selected.slice();\n\n    this._resetRange();\n  },\n\n  /**\n   * @public\n   */\n  getSelected: function getSelected() {\n    var dataExtent = this.getExtent();\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\n\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n    return dataInterval;\n  },\n\n  /**\n   * @override\n   */\n  getValueState: function getValueState(value) {\n    var range = this.option.range;\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n    // range[1] is processed likewise.\n\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\n  },\n\n  /**\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function findTargetDataIndices(range) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @implement\n   */\n  getVisualMeta: function getVisualMeta(getColorVisual) {\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n    var stops = [];\n\n    function setStop(value, valueState) {\n      stops.push({\n        value: value,\n        color: getColorVisual(value, valueState)\n      });\n    } // Format to: outOfRange -- inRange -- outOfRange.\n\n\n    var iIdx = 0;\n    var oIdx = 0;\n    var iLen = iVals.length;\n    var oLen = oVals.length;\n\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n      if (oVals[oIdx] < iVals[iIdx]) {\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n      // If range is full, value beyond min, max will be clamped.\n      // make a singularity\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n      setStop(iVals[iIdx], 'inRange');\n    }\n\n    for (var first = 1; oIdx < oLen; oIdx++) {\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n        // make a singularity\n        if (first) {\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n          first = 0;\n        }\n\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    var stopsLen = stops.length;\n    return {\n      stops: stops,\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\n    };\n  }\n});\n\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\n  if (dataExtent[0] === dataExtent[1]) {\n    return dataExtent.slice();\n  } // When using colorHue mapping, it is not linear color any more.\n  // Moreover, canvas gradient seems not to be accurate linear.\n  // FIXME\n  // Should be arbitrary value 100? or based on pixel size?\n\n\n  var count = 200;\n  var step = (dataExtent[1] - dataExtent[0]) / count;\n  var value = dataExtent[0];\n  var stopValues = [];\n\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n    stopValues.push(value);\n    value += step;\n  }\n\n  stopValues.push(dataExtent[1]);\n  return stopValues;\n}\n\nvar _default = ContinuousModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar helper = require(\"./helper\");\n\nvar modelUtil = require(\"../../util/model\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function init() {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function doRender(visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function _buildView() {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function _renderEndsText(group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function _renderBar(targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function _createHandle(barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function onmousemove(e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function _createIndicator(barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function _dragHandle(handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function _resetInterval() {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function _updateInterval(handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function _updateView(forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function _createBarVisual(dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function _makeColorGradient(dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function _createBarPoints(handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function _createBarGroup(itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function _updateHandle(handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function _showIndicator(cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function _enableHoverLinkToSeries() {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function _enableHoverLinkFromSeries() {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function _doHoverLinkToSeries(cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\n\n    this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function _hoverLinkFromSeriesMouseOver(e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var value = data.get(visualMapModel.getDataDimension(data), el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function _hideIndicator() {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function _clearHoverLinkToSeries() {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function _clearHoverLinkFromSeries() {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function _applyTransform(vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function _dispatchHighDown(type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function remove() {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function onmousemove(e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/PiecewiseModel\");\n\nrequire(\"./visualMap/PiecewiseView\");\n\nrequire(\"./visualMap/visualMapAction\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\n\n\necharts.registerPreprocessor(preprocessor);","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar _number = require(\"../../util/number\");\n\nvar reformIntervals = _number.reformIntervals;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function optionUpdated(newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function completeVisualOption() {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function _resetSelected(newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function getSelectedMapKey(piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function getPieceList() {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function _determineMode() {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function setSelected(selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function getValueState(value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function findTargetDataIndices(pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function getRepresentValue(piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function getVisualMeta(getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function splitNumber() {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n    var index = 0;\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        index: index++,\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function categories() {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function pieces() {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PiecewiseVisualMapView = VisualMapView.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function doRender() {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n\n    function renderItem(item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            textVerticalAlign: 'middle',\n            textAlign: itemAlign,\n            textFont: textFont,\n            textFill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLink: function _enableHoverLink(itemGroup, pieceIndex) {\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n    function onHoverLink(method) {\n      var visualMapModel = this.visualMapModel;\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\n        type: method,\n        batch: helper.convertDataIndex(visualMapModel.findTargetDataIndices(pieceIndex))\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getItemAlign: function _getItemAlign() {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function _renderEndsText(group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        textVerticalAlign: 'middle',\n        textAlign: showLabel ? itemAlign : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  },\n\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n  _getViewData: function _getViewData() {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  },\n\n  /**\n   * @private\n   */\n  _createItemSymbol: function _createItemSymbol(group, representValue, shapeParam) {\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\n  },\n\n  /**\n   * @private\n   */\n  _onItemClick: function _onItemClick(piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  }\n});\nvar _default = PiecewiseVisualMapView;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkPointModel\");\n\nrequire(\"./marker/MarkPointView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// HINT Markpoint can't be used too much\n\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});","var MarkerModel = require(\"./MarkerModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'inside'\n    },\n    itemStyle: {\n      borderWidth: 2\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar List = require(\"../../data/List\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  // updateLayout: function (markPointModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mpModel = seriesModel.markPointModel;\n  //         if (mpModel) {\n  //             updateMarkerLayout(mpModel.getData(), seriesModel, api);\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function updateTransform(markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function renderSeries(seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkLineModel\");\n\nrequire(\"./marker/MarkLineView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});","var MarkerModel = require(\"./MarkerModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'end'\n    },\n    lineStyle: {\n      type: 'dashed'\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\n\nvar MarkerView = require(\"./MarkerView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar markLineTransform = function markLineTransform(seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average', 'median'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' || mlType === 'median' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var valueDataDim;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueDataDim = item.yAxis != null ? 'y' : 'x';\n      valueAxis = coordSys.getAxis(valueDataDim);\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueDataDim = axisInfo.valueDataDim;\n      valueAxis = axisInfo.valueAxis;\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueDataDim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  // updateLayout: function (markLineModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mlModel = seriesModel.markLineModel;\n  //         if (mlModel) {\n  //             var mlData = mlModel.getData();\n  //             var fromData = mlModel.__from;\n  //             var toData = mlModel.__to;\n  //             // Update visual and layout of from symbol and to symbol\n  //             fromData.each(function (idx) {\n  //                 updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n  //                 updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n  //             });\n  //             // Update layout of line\n  //             mlData.each(function (idx) {\n  //                 mlData.setItemLayout(idx, [\n  //                     fromData.getItemLayout(idx),\n  //                     toData.getItemLayout(idx)\n  //                 ]);\n  //             });\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout();\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function updateTransform(markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function renderSeries(seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkAreaModel\");\n\nrequire(\"./marker/MarkAreaView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});","var MarkerModel = require(\"./MarkerModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      show: true,\n      position: 'top'\n    },\n    itemStyle: {\n      // color and borderColor default to use color from series\n      // color: 'auto'\n      // borderColor: 'auto'\n      borderWidth: 0\n    },\n    emphasis: {\n      label: {\n        show: true,\n        position: 'top'\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorUtil = require(\"zrender/lib/tool/color\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Better on polar\n\n\nvar markAreaTransform = function markAreaTransform(seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      var pt = [x, y];\n      coordSys.clampData && coordSys.clampData(pt, pt);\n      point = coordSys.dataToPoint(pt, true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  // updateLayout: function (markAreaModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var maModel = seriesModel.markAreaModel;\n  //         if (maModel) {\n  //             var areaData = maModel.getData();\n  //             areaData.each(function (idx) {\n  //                 var points = zrUtil.map(dimPermutations, function (dim) {\n  //                     return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n  //                 });\n  //                 // Layout\n  //                 areaData.setItemLayout(idx, points);\n  //                 var el = areaData.getItemGraphicEl(idx);\n  //                 el.setShape('points', points);\n  //             });\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function updateTransform(markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function renderSeries(seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesId) || areaGroupMap.set(seriesId, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var data = seriesModel.getData();\n      var info = data.getDimensionInfo(data.mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./timeline/preprocessor\");\n\nrequire(\"./timeline/typeDefaulter\");\n\nrequire(\"./timeline/timelineAction\");\n\nrequire(\"./timeline/SliderTimelineModel\");\n\nrequire(\"./timeline/SliderTimelineView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\n\n\necharts.registerPreprocessor(preprocessor);","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(option) {\n  var timelineOpt = option && option.timeline;\n\n  if (!zrUtil.isArray(timelineOpt)) {\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\n  }\n\n  zrUtil.each(timelineOpt, function (opt) {\n    if (!opt) {\n      return;\n    }\n\n    compatibleEC2(opt);\n  });\n}\n\nfunction compatibleEC2(opt) {\n  var type = opt.type;\n  var ec2Types = {\n    'number': 'value',\n    'time': 'time'\n  }; // Compatible with ec2\n\n  if (ec2Types[type]) {\n    opt.axisType = ec2Types[type];\n    delete opt.type;\n  }\n\n  transferItem(opt);\n\n  if (has(opt, 'controlPosition')) {\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\n\n    if (!has(controlStyle, 'position')) {\n      controlStyle.position = opt.controlPosition;\n    }\n\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\n      controlStyle.show = false;\n      delete controlStyle.position;\n    }\n\n    delete opt.controlPosition;\n  }\n\n  zrUtil.each(opt.data || [], function (dataItem) {\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\n        // In ec2, using name as value.\n        dataItem.value = dataItem.name;\n      }\n\n      transferItem(dataItem);\n    }\n  });\n}\n\nfunction transferItem(opt) {\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\n\n  var label = opt.label || opt.label || {};\n  var labelNormal = label.normal || (label.normal = {});\n  var excludeLabelAttr = {\n    normal: 1,\n    emphasis: 1\n  };\n  zrUtil.each(label, function (value, name) {\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\n      labelNormal[name] = value;\n    }\n  });\n\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\n    label.emphasis = itemStyleEmphasis.label;\n    delete itemStyleEmphasis.label;\n  }\n}\n\nfunction has(obj, attr) {\n  return obj.hasOwnProperty(attr);\n}\n\nmodule.exports = _default;","var Component = require(\"../../model/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nComponent.registerSubTypeDefaulter('timeline', function () {\n  // Only slider now.\n  return 'slider';\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerAction({\n  type: 'timelineChange',\n  event: 'timelineChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.currentIndex != null) {\n    timelineModel.setCurrentIndex(payload.currentIndex);\n\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\n      timelineModel.setPlayState(false);\n    }\n  } // Set normalized currentIndex to payload.\n\n\n  ecModel.resetOption('timeline');\n  return zrUtil.defaults({\n    currentIndex: timelineModel.option.currentIndex\n  }, payload);\n});\necharts.registerAction({\n  type: 'timelinePlayChange',\n  event: 'timelinePlayChanged',\n  update: 'update'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.playState != null) {\n    timelineModel.setPlayState(payload.playState);\n  }\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar TimelineModel = require(\"./TimelineModel\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar SliderTimelineModel = TimelineModel.extend({\n  type: 'timeline.slider',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 时间轴背景颜色\n    borderColor: '#ccc',\n    // 时间轴边框颜色\n    borderWidth: 0,\n    // 时间轴边框线宽，单位px，默认为0（无边框）\n    orient: 'horizontal',\n    // 'vertical'\n    inverse: false,\n    tooltip: {\n      // boolean or Object\n      trigger: 'item' // data item may also have tootip attr.\n\n    },\n    symbol: 'emptyCircle',\n    symbolSize: 10,\n    lineStyle: {\n      show: true,\n      width: 2,\n      color: '#304654'\n    },\n    label: {\n      // 文本标签\n      position: 'auto',\n      // auto left right top bottom\n      // When using number, label position is not\n      // restricted by viewRect.\n      // positive: right/bottom, negative: left/top\n      show: true,\n      interval: 'auto',\n      rotate: 0,\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#304654'\n    },\n    itemStyle: {\n      color: '#304654',\n      borderWidth: 1\n    },\n    checkpointStyle: {\n      symbol: 'circle',\n      symbolSize: 13,\n      color: '#c23531',\n      borderWidth: 5,\n      borderColor: 'rgba(194,53,49, 0.5)',\n      animation: true,\n      animationDuration: 300,\n      animationEasing: 'quinticInOut'\n    },\n    controlStyle: {\n      show: true,\n      showPlayBtn: true,\n      showPrevBtn: true,\n      showNextBtn: true,\n      itemSize: 22,\n      itemGap: 12,\n      position: 'left',\n      // 'left' 'right' 'top' 'bottom'\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\n      // jshint ignore:line\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\n      // jshint ignore:line\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\n      // jshint ignore:line\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\n      // jshint ignore:line\n      color: '#304654',\n      borderColor: '#304654',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#c23531'\n      },\n      itemStyle: {\n        color: '#c23531'\n      },\n      controlStyle: {\n        color: '#c23531',\n        borderColor: '#c23531',\n        borderWidth: 2\n      }\n    },\n    data: []\n  }\n});\nzrUtil.mixin(SliderTimelineModel, dataFormatMixin);\nvar _default = SliderTimelineModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar List = require(\"../../data/List\");\n\nvar modelUtil = require(\"../../util/model\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {},\n    label: {\n      color: '#000'\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function init(option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption(option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function setCurrentIndex(currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function getCurrentIndex() {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function isIndexMax() {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function setPlayState(state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function getPlayState() {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function _initData() {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function getData() {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function getCategories() {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar TimelineView = require(\"./TimelineView\");\n\nvar TimelineAxis = require(\"./TimelineAxis\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar PI = Math.PI;\n\nvar _default = TimelineView.extend({\n  type: 'timeline.slider',\n  init: function init(ecModel, api) {\n    this.api = api;\n    /**\n     * @private\n     * @type {module:echarts/component/timeline/TimelineAxis}\n     */\n\n    this._axis;\n    /**\n     * @private\n     * @type {module:zrender/core/BoundingRect}\n     */\n\n    this._viewRect;\n    /**\n     * @type {number}\n     */\n\n    this._timer;\n    /**\n     * @type {module:zrender/Element}\n     */\n\n    this._currentPointer;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._labelGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function render(timelineModel, ecModel, api, payload) {\n    this.model = timelineModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    this.group.removeAll();\n\n    if (timelineModel.get('show', true)) {\n      var layoutInfo = this._layout(timelineModel, api);\n\n      var mainGroup = this._createGroup('mainGroup');\n\n      var labelGroup = this._createGroup('labelGroup');\n      /**\n       * @private\n       * @type {module:echarts/component/timeline/TimelineAxis}\n       */\n\n\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\n\n      timelineModel.formatTooltip = function (dataIndex) {\n        return encodeHTML(axis.scale.getLabel(dataIndex));\n      };\n\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\n      }, this);\n\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\n\n      this._position(layoutInfo, timelineModel);\n    }\n\n    this._doPlayStop();\n  },\n\n  /**\n   * @override\n   */\n  remove: function remove() {\n    this._clearTimer();\n\n    this.group.removeAll();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    this._clearTimer();\n  },\n  _layout: function _layout(timelineModel, api) {\n    var labelPosOpt = timelineModel.get('label.position');\n    var orient = timelineModel.get('orient');\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\n\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\n    } else if (isNaN(labelPosOpt)) {\n      labelPosOpt = {\n        horizontal: {\n          top: '-',\n          bottom: '+'\n        },\n        vertical: {\n          left: '-',\n          right: '+'\n        }\n      }[orient][labelPosOpt];\n    }\n\n    var labelAlignMap = {\n      horizontal: 'center',\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\n    };\n    var labelBaselineMap = {\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\n      vertical: 'middle'\n    };\n    var rotationMap = {\n      horizontal: 0,\n      vertical: PI / 2\n    }; // Position\n\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\n    var controlModel = timelineModel.getModel('controlStyle');\n    var showControl = controlModel.get('show', true);\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\n\n    var labelRotation = timelineModel.get('label.rotate') || 0;\n    labelRotation = labelRotation * PI / 180; // To radian.\n\n    var playPosition;\n    var prevBtnPosition;\n    var nextBtnPosition;\n    var axisExtent;\n    var controlPosition = controlModel.get('position', true);\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\n    var xLeft = 0;\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\n\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    } else {\n      // 'top' 'right'\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    }\n\n    axisExtent = [xLeft, xRight];\n\n    if (timelineModel.get('inverse')) {\n      axisExtent.reverse();\n    }\n\n    return {\n      viewRect: viewRect,\n      mainLength: mainLength,\n      orient: orient,\n      rotation: rotationMap[orient],\n      labelRotation: labelRotation,\n      labelPosOpt: labelPosOpt,\n      labelAlign: timelineModel.get('label.align') || labelAlignMap[orient],\n      labelBaseline: timelineModel.get('label.verticalAlign') || timelineModel.get('label.baseline') || labelBaselineMap[orient],\n      // Based on mainGroup.\n      playPosition: playPosition,\n      prevBtnPosition: prevBtnPosition,\n      nextBtnPosition: nextBtnPosition,\n      axisExtent: axisExtent,\n      controlSize: controlSize,\n      controlGap: controlGap\n    };\n  },\n  _position: function _position(layoutInfo, timelineModel) {\n    // Position is be called finally, because bounding rect is needed for\n    // adapt content to fill viewRect (auto adapt offset).\n    // Timeline may be not all in the viewRect when 'offset' is specified\n    // as a number, because it is more appropriate that label aligns at\n    // 'offset' but not the other edge defined by viewRect.\n    var mainGroup = this._mainGroup;\n    var labelGroup = this._labelGroup;\n    var viewRect = layoutInfo.viewRect;\n\n    if (layoutInfo.orient === 'vertical') {\n      // transform to horizontal, inverse rotate by left-top point.\n      var m = matrix.create();\n      var rotateOriginX = viewRect.x;\n      var rotateOriginY = viewRect.y + viewRect.height;\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\n      matrix.rotate(m, m, -PI / 2);\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\n      viewRect = viewRect.clone();\n      viewRect.applyTransform(m);\n    }\n\n    var viewBound = getBound(viewRect);\n    var mainBound = getBound(mainGroup.getBoundingRect());\n    var labelBound = getBound(labelGroup.getBoundingRect());\n    var mainPosition = mainGroup.position;\n    var labelsPosition = labelGroup.position;\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\n    var labelPosOpt = layoutInfo.labelPosOpt;\n\n    if (isNaN(labelPosOpt)) {\n      // '+' or '-'\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\n    } else {\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\n    }\n\n    mainGroup.attr('position', mainPosition);\n    labelGroup.attr('position', labelsPosition);\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\n    setOrigin(mainGroup);\n    setOrigin(labelGroup);\n\n    function setOrigin(targetGroup) {\n      var pos = targetGroup.position;\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\n    }\n\n    function getBound(rect) {\n      // [[xmin, xmax], [ymin, ymax]]\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\n    }\n\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\n    }\n  },\n  _createAxis: function _createAxis(layoutInfo, timelineModel) {\n    var data = timelineModel.getData();\n    var axisType = timelineModel.get('axisType');\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType); // Customize scale. The `tickValue` is `dataIndex`.\n\n    scale.getTicks = function () {\n      return data.mapArray(['value'], function (value) {\n        return value;\n      });\n    };\n\n    var dataExtent = data.getDataExtent('value');\n    scale.setExtent(dataExtent[0], dataExtent[1]);\n    scale.niceTicks();\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\n    axis.model = timelineModel;\n    return axis;\n  },\n  _createGroup: function _createGroup(name) {\n    var newGroup = this['_' + name] = new graphic.Group();\n    this.group.add(newGroup);\n    return newGroup;\n  },\n  _renderAxisLine: function _renderAxisLine(layoutInfo, group, axis, timelineModel) {\n    var axisExtent = axis.getExtent();\n\n    if (!timelineModel.get('lineStyle.show')) {\n      return;\n    }\n\n    group.add(new graphic.Line({\n      shape: {\n        x1: axisExtent[0],\n        y1: 0,\n        x2: axisExtent[1],\n        y2: 0\n      },\n      style: zrUtil.extend({\n        lineCap: 'round'\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\n      silent: true,\n      z2: 1\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisTick: function _renderAxisTick(layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData(); // Show all ticks, despite ignoring strategy.\n\n    var ticks = axis.scale.getTicks(); // The value is dataIndex, see the costomized scale.\n\n    each(ticks, function (value) {\n      var tickCoord = axis.dataToCoord(value);\n      var itemModel = data.getItemModel(value);\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      var hoverStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var symbolOpt = {\n        position: [tickCoord, 0],\n        onclick: bind(this._changeTimeline, this, value)\n      };\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\n\n      if (itemModel.get('tooltip')) {\n        el.dataIndex = value;\n        el.dataModel = timelineModel;\n      } else {\n        el.dataIndex = el.dataModel = null;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisLabel: function _renderAxisLabel(layoutInfo, group, axis, timelineModel) {\n    var labelModel = axis.getLabelModel();\n\n    if (!labelModel.get('show')) {\n      return;\n    }\n\n    var data = timelineModel.getData();\n    var labels = axis.getViewLabels();\n    each(labels, function (labelItem) {\n      // The tickValue is dataIndex, see the costomized scale.\n      var dataIndex = labelItem.tickValue;\n      var itemModel = data.getItemModel(dataIndex);\n      var normalLabelModel = itemModel.getModel('label');\n      var hoverLabelModel = itemModel.getModel('emphasis.label');\n      var tickCoord = axis.dataToCoord(labelItem.tickValue);\n      var textEl = new graphic.Text({\n        position: [tickCoord, 0],\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\n        onclick: bind(this._changeTimeline, this, dataIndex),\n        silent: false\n      });\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\n        text: labelItem.formattedLabel,\n        textAlign: layoutInfo.labelAlign,\n        textVerticalAlign: layoutInfo.labelBaseline\n      });\n      group.add(textEl);\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderControl: function _renderControl(layoutInfo, group, axis, timelineModel) {\n    var controlSize = layoutInfo.controlSize;\n    var rotation = layoutInfo.rotation;\n    var itemStyle = timelineModel.getModel('controlStyle').getItemStyle();\n    var hoverStyle = timelineModel.getModel('emphasis.controlStyle').getItemStyle();\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\n    var playState = timelineModel.getPlayState();\n    var inverse = timelineModel.get('inverse', true);\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\n\n    function makeBtn(position, iconPath, onclick, willRotate) {\n      if (!position) {\n        return;\n      }\n\n      var opt = {\n        position: position,\n        origin: [controlSize / 2, 0],\n        rotation: willRotate ? -rotation : 0,\n        rectHover: true,\n        style: itemStyle,\n        onclick: onclick\n      };\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\n      group.add(btn);\n      graphic.setHoverStyle(btn, hoverStyle);\n    }\n  },\n  _renderCurrentPointer: function _renderCurrentPointer(layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var currentIndex = timelineModel.getCurrentIndex();\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\n    var me = this;\n    var callback = {\n      onCreate: function onCreate(pointer) {\n        pointer.draggable = true;\n        pointer.drift = bind(me._handlePointerDrag, me);\n        pointer.ondragend = bind(me._handlePointerDragend, me);\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\n      },\n      onUpdate: function onUpdate(pointer) {\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\n      }\n    }; // Reuse when exists, for animation and drag.\n\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\n  },\n  _handlePlayClick: function _handlePlayClick(nextState) {\n    this._clearTimer();\n\n    this.api.dispatchAction({\n      type: 'timelinePlayChange',\n      playState: nextState,\n      from: this.uid\n    });\n  },\n  _handlePointerDrag: function _handlePointerDrag(dx, dy, e) {\n    this._clearTimer();\n\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\n  },\n  _handlePointerDragend: function _handlePointerDragend(e) {\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\n  },\n  _pointerChangeTimeline: function _pointerChangeTimeline(mousePos, trigger) {\n    var toCoord = this._toAxisCoord(mousePos)[0];\n\n    var axis = this._axis;\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\n    this._currentPointer.position[0] = toCoord;\n\n    this._currentPointer.dirty();\n\n    var targetDataIndex = this._findNearestTick(toCoord);\n\n    var timelineModel = this.model;\n\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\n      this._changeTimeline(targetDataIndex);\n    }\n  },\n  _doPlayStop: function _doPlayStop() {\n    this._clearTimer();\n\n    if (this.model.getPlayState()) {\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\n    }\n\n    function handleFrame() {\n      // Do not cache\n      var timelineModel = this.model;\n\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\n    }\n  },\n  _toAxisCoord: function _toAxisCoord(vertex) {\n    var trans = this._mainGroup.getLocalTransform();\n\n    return graphic.applyTransform(vertex, trans, true);\n  },\n  _findNearestTick: function _findNearestTick(axisCoord) {\n    var data = this.model.getData();\n    var dist = Infinity;\n    var targetDataIndex;\n    var axis = this._axis;\n    data.each(['value'], function (value, dataIndex) {\n      var coord = axis.dataToCoord(value);\n      var d = Math.abs(coord - axisCoord);\n\n      if (d < dist) {\n        dist = d;\n        targetDataIndex = dataIndex;\n      }\n    });\n    return targetDataIndex;\n  },\n  _clearTimer: function _clearTimer() {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  },\n  _changeTimeline: function _changeTimeline(nextIndex) {\n    var currentIndex = this.model.getCurrentIndex();\n\n    if (nextIndex === '+') {\n      nextIndex = currentIndex + 1;\n    } else if (nextIndex === '-') {\n      nextIndex = currentIndex - 1;\n    }\n\n    this.api.dispatchAction({\n      type: 'timelineChange',\n      currentIndex: nextIndex,\n      from: this.uid\n    });\n  }\n});\n\nfunction getViewRect(model, api) {\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }, model.get('padding'));\n}\n\nfunction makeIcon(timelineModel, objPath, rect, opts) {\n  var icon = graphic.makePath(timelineModel.get(objPath).replace(/^path:\\/\\//, ''), zrUtil.clone(opts || {}), new BoundingRect(rect[0], rect[1], rect[2], rect[3]), 'center');\n  return icon;\n}\n/**\n * Create symbol or update symbol\n * opt: basic position and event handlers\n */\n\n\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\n  var color = itemStyleModel.get('color');\n\n  if (!symbol) {\n    var symbolType = hostModel.get('symbol');\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\n    symbol.setStyle('strokeNoScale', true);\n    group.add(symbol);\n    callback && callback.onCreate(symbol);\n  } else {\n    symbol.setColor(color);\n    group.add(symbol); // Group may be new, also need to add.\n\n    callback && callback.onUpdate(symbol);\n  } // Style\n\n\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\n  symbol.setStyle(itemStyle); // Transform and events.\n\n  opt = zrUtil.merge({\n    rectHover: true,\n    z2: 100\n  }, opt, true);\n  var symbolSize = hostModel.get('symbolSize');\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n  symbolSize[0] /= 2;\n  symbolSize[1] /= 2;\n  opt.scale = symbolSize;\n  var symbolOffset = hostModel.get('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = opt.position = opt.position || [0, 0];\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = hostModel.get('symbolRotate');\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  symbol.attr(opt); // FIXME\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\n  // getBoundingRect will return wrong result.\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\n  // leverage performance and auto updateTransform)\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\n\n  symbol.updateTransform();\n  return symbol;\n}\n\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\n  if (pointer.dragging) {\n    return;\n  }\n\n  var pointerModel = timelineModel.getModel('checkpointStyle');\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\n\n  if (noAnimation || !pointerModel.get('animation', true)) {\n    pointer.attr({\n      position: [toCoord, 0]\n    });\n  } else {\n    pointer.stopAnimation(true);\n    pointer.animateTo({\n      position: [toCoord, 0]\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\n  }\n}\n\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = ComponentView.extend({\n  type: 'timeline'\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../../coord/Axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\n\n\nvar TimelineAxis = function TimelineAxis(dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @override\n   */\n  getLabelModel: function getLabelModel() {\n    return this.model.getModel('label');\n  },\n\n  /**\n   * @override\n   */\n  isHorizontal: function isHorizontal() {\n    return this.model.get('orient') === 'horizontal';\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;","require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  optionUpdated: function optionUpdated() {\n    ToolboxModel.superApply(this, 'optionUpdated', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      borderColor: '#666',\n      color: 'none'\n    },\n    emphasis: {\n      iconStyle: {\n        borderColor: '#3E98C5' // textStyle: {},\n        // feature\n\n      }\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function render(toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle');\n      var iconStyleEmphasisModel = featureModel.getModel('emphasis.iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getItemStyle());\n        path.hoverStyle = iconStyleEmphasisModel.getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleEmphasisModel.getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function updateView(toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  // updateLayout: function (toolboxModel, ecModel, api, payload) {\n  //     zrUtil.each(this._features, function (feature) {\n  //         feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n  //     });\n  // },\n  remove: function remove(ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function dispose(ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;","var env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function line(seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function bar(seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function stack(seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function tiled(seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function generateNewSeriesTypes(seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Use dataZoomSelect\n\n\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function zoom() {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function back() {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n// FIXME consider the case of merge option, where axes options are not exists.\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom; // FIXME: If add dataZoom when setOption in merge mode,\n      // no axis info to be added. See `test/dataZoom-extreme.html`\n\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var DataZoomModel = require(\"./DataZoomModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var DataZoomView = require(\"./DataZoomView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('vml', Painter);","var env = require(\"../core/env\");\n\nvar _vector = require(\"../core/vector\");\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar colorTool = require(\"../tool/color\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar RectText = require(\"../graphic/mixin/RectText\");\n\nvar Displayable = require(\"../graphic/Displayable\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar Text = require(\"../graphic/Text\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar Gradient = require(\"../graphic/Gradient\");\n\nvar vmlCore = require(\"./core\"); // http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\n\n\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function initRootElStyle(el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function encodeHtmlAttribute(s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function rgb2Str(r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function append(parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function remove(parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function getZIndex(zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function parsePercent(value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function setColorAndOpacity(el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function getColorAndAlpha(color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function updateFillNode(el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function updateStrokeNode(el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function updateFillAndStroke(vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function pathDataToString(path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function isImage(img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function getFontStyle(fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$override('measureText', function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function drawRectText(vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function removeRectText(vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function appendRectText(vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}","var zrLog = require(\"../core/log\");\n\nvar vmlCore = require(\"./core\");\n\nvar _util = require(\"../core/util\");\n\nvar each = _util.each;\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function getType() {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function getViewportRoot() {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function getViewportRootOffset() {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function refresh() {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function _paintList(list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function resize(width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function dispose() {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function getWidth() {\n    return this._width;\n  },\n  getHeight: function getHeight() {\n    return this._height;\n  },\n  clear: function clear() {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function _getWidth() {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function _getHeight() {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('svg', Painter);","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar each = util.each;\n\nvar zrLog = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar ShadowManager = require(\"./helper/ShadowManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function SVGPainter(root, storage, opts, zrId) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(zrId, svgRoot);\n  this.clipPathManager = new ClippathManager(zrId, svgRoot);\n  this.shadowManager = new ShadowManager(zrId, svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function getType() {\n    return 'svg';\n  },\n  getViewportRoot: function getViewportRoot() {\n    return this._viewport;\n  },\n  getViewportRootOffset: function getViewportRootOffset() {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function refresh() {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  setBackgroundColor: function setBackgroundColor(backgroundColor) {\n    // TODO gradient\n    this._viewport.style.background = backgroundColor;\n  },\n  _paintList: function _paintList(list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    this.shadowManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n      var svgElement = getSvgElement(displayable) || getTextSvgElement(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient and shadow\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n            this.shadowManager.update(svgElement, displayable);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.addWithoutUpdate(prevSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.markUsed(displayable);\n          this.shadowManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this.shadowManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function _getDefs(isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function resize(width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width || this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function getWidth() {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function getHeight() {\n    return this._height;\n  },\n  _getSize: function _getSize(whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function dispose() {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function clear() {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToDataUrl: function pathToDataUrl() {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:image/svg+xml;charset=UTF-8,' + html;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;","// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function diff(oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function equals(a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function pushComponent(components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function extractCommon(basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function tokenize(value) {\n    return value.slice();\n  },\n  join: function join(value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar zrLog = require(\"../../core/log\");\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\n\n\nfunction GradientManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar matrix = require(\"../../core/matrix\");\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\n\n\nfunction ClippathManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n */\n\nClippathManager.prototype.update = function (displayable) {\n  var svgEl = this.getSvgElement(displayable);\n\n  if (svgEl) {\n    this.updateDom(svgEl, displayable.__clipPaths, false);\n  }\n\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr' + this._zrId + '-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    clipPathEl.innerHTML = '';\n    /**\n     * Use `cloneNode()` here to appendChild to multiple parents,\n     * which may happend when Text and other shapes are using the same\n     * clipPath. Since Text will create an extra clipPath DOM due to\n     * different transform rules.\n     */\n\n    clipPathEl.appendChild(pathEl.cloneNode());\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n/**\n * @file Manages SVG shadow elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG shadow elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\n\n\nfunction ShadowManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['filter'], '__filter_in_use__', '_shadowDom');\n}\n\nzrUtil.inherits(ShadowManager, Definable);\n/**\n * Create new shadow DOM for fill or stroke if not exist,\n * but will not update shadow if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nShadowManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && hasShadow(displayable.style)) {\n    var style = displayable.style; // Create dom in <defs> if not exists\n\n    var dom;\n\n    if (style._shadowDom) {\n      // Gradient exists\n      dom = style._shadowDom;\n      var defs = this.getDefs(true);\n\n      if (!defs.contains(style._shadowDom)) {\n        // _shadowDom is no longer in defs, recreate\n        this.addDom(dom);\n      }\n    } else {\n      // New dom\n      dom = this.add(displayable);\n    }\n\n    this.markUsed(displayable);\n    var id = dom.getAttribute('id');\n    svgElement.style.filter = 'url(#' + id + ')';\n  }\n};\n/**\n * Add a new shadow tag in <defs>\n *\n * @param {Displayable} displayable  zrender displayable element\n * @return {SVGFilterElement} created DOM\n */\n\n\nShadowManager.prototype.add = function (displayable) {\n  var dom = this.createElement('filter');\n  var style = displayable.style; // Set dom id with shadow id, since each shadow instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n  style._shadowDomId = style._shadowDomId || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-shadow-' + style._shadowDomId);\n  this.updateDom(displayable, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update shadow.\n *\n * @param {Displayable} displayable  zrender displayable element\n */\n\n\nShadowManager.prototype.update = function (svgElement, displayable) {\n  var style = displayable.style;\n\n  if (hasShadow(style)) {\n    var that = this;\n    Definable.prototype.update.call(this, displayable, function (style) {\n      that.updateDom(displayable, style._shadowDom);\n    });\n  } else {\n    // Remove shadow\n    this.remove(svgElement, style);\n  }\n};\n/**\n * Remove DOM and clear parent filter\n */\n\n\nShadowManager.prototype.remove = function (svgElement, style) {\n  if (style._shadowDomId != null) {\n    this.removeDom(style);\n    svgElement.style.filter = '';\n  }\n};\n/**\n * Update shadow dom\n *\n * @param {Displayable} displayable  zrender displayable element\n * @param {SVGFilterElement} dom DOM to update\n */\n\n\nShadowManager.prototype.updateDom = function (displayable, dom) {\n  var domChild = dom.getElementsByTagName('feDropShadow');\n\n  if (domChild.length === 0) {\n    domChild = this.createElement('feDropShadow');\n  } else {\n    domChild = domChild[0];\n  }\n\n  var style = displayable.style;\n  var scaleX = displayable.scale ? displayable.scale[0] || 1 : 1;\n  var scaleY = displayable.scale ? displayable.scale[1] || 1 : 1; // TODO: textBoxShadowBlur is not supported yet\n\n  var offsetX, offsetY, blur, color;\n\n  if (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY) {\n    offsetX = style.shadowOffsetX || 0;\n    offsetY = style.shadowOffsetY || 0;\n    blur = style.shadowBlur;\n    color = style.shadowColor;\n  } else if (style.textShadowBlur) {\n    offsetX = style.textShadowOffsetX || 0;\n    offsetY = style.textShadowOffsetY || 0;\n    blur = style.textShadowBlur;\n    color = style.textShadowColor;\n  } else {\n    // Remove shadow\n    this.removeDom(dom, style);\n    return;\n  }\n\n  domChild.setAttribute('dx', offsetX / scaleX);\n  domChild.setAttribute('dy', offsetY / scaleY);\n  domChild.setAttribute('flood-color', color); // Divide by two here so that it looks the same as in canvas\n  // See: https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-shadowblur\n\n  var stdDx = blur / 2 / scaleX;\n  var stdDy = blur / 2 / scaleY;\n  var stdDeviation = stdDx + ' ' + stdDy;\n  domChild.setAttribute('stdDeviation', stdDeviation); // Fix filter clipping problem\n\n  dom.setAttribute('x', '-100%');\n  dom.setAttribute('y', '-100%');\n  dom.setAttribute('width', Math.ceil(blur / 2 * 200) + '%');\n  dom.setAttribute('height', Math.ceil(blur / 2 * 200) + '%');\n  dom.appendChild(domChild); // Store dom element in shadow, to avoid creating multiple\n  // dom instances for the same shadow element\n\n  style._shadowDom = dom;\n};\n/**\n * Mark a single shadow to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nShadowManager.prototype.markUsed = function (displayable) {\n  var style = displayable.style;\n\n  if (style && style._shadowDom) {\n    Definable.prototype.markUsed.call(this, style._shadowDom);\n  }\n};\n\nfunction hasShadow(style) {\n  // TODO: textBoxShadowBlur is not supported yet\n  return style && (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY || style.textShadowBlur || style.textShadowOffsetX || style.textShadowOffsetY);\n}\n\nvar _default = ShadowManager;\nmodule.exports = _default;"],"sourceRoot":""}