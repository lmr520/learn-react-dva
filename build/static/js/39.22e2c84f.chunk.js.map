{"version":3,"sources":["routes/UI/Editor/components/index.js","components/Panel/Panel.js","components/Panel/index.js","components/Editor/config.js","components/Editor/Editor.js","components/Editor/index.js"],"names":["Content","connect","state","html","onChange","_this","setState","_this2","this","react__WEBPACK_IMPORTED_MODULE_11___default","a","createElement","antd_lib_layout__WEBPACK_IMPORTED_MODULE_10___default","className","components_Panel__WEBPACK_IMPORTED_MODULE_15__","title","href","antd_lib_button__WEBPACK_IMPORTED_MODULE_3___default","Group","type","onClick","e","newHtml","antd_lib_message__WEBPACK_IMPORTED_MODULE_1___default","success","components_Editor__WEBPACK_IMPORTED_MODULE_14__","value","BaseComponent","confirm","modal_default","noop","_","Panel","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onExpand","expand","collapse","onCollapse","onRefresh","refresh","animationName","onClose","content","onOk","nextProps","st","keys","length","_this$state","_this$props","theme","prefix","width","height","style","children","header","cover","scroll","classnames","cx","panel-fullscreen","panel-collapsed","styles","objectSpread","bodyStyles","overflow","Header","react_default","concat","Icon","popconfirm_default","onConfirm","placement","CSSAnimate","callback","key","Component","defaultProps","config","zIndex","uploadImgShowBase64","Editor","otherProps","editor","E","editorDom","customConfig","defaultConfig","onchange","create","txt","prevProps","prevState","ref","node","PureComponent"],"mappings":"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","file":"static/js/39.22e2c84f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'dva';\r\nimport { Layout, Button, message } from 'antd';\r\nimport BaseComponent from 'components/BaseComponent';\r\nimport Editor from 'components/Editor';\r\nimport Panel from 'components/Panel';\r\nconst { Content } = Layout;\r\n\r\n@connect()\r\nexport default class extends BaseComponent {\r\n  state = {\r\n    html: ''\r\n  };\r\n  onChange = html => {\r\n    this.setState({\r\n      html\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout className=\"full-layout page\">\r\n        <Content>\r\n          <Panel title=\"富文本\">\r\n            <p>\r\n              富文本使用\r\n              <a href=\"https://github.com/wangfupeng1988/wangEditor\">\r\n                wangEditor\r\n              </a>\r\n              ，具体参数可以到其网站查看。\r\n            </p>\r\n            <p>\r\n              <Button.Group>\r\n                <Button\r\n                  type=\"primary\"\r\n                  onClick={e =>\r\n                    this.setState({ newHtml: '<div>今天也要快乐啊！</div>' })\r\n                  }\r\n                >\r\n                  设置值\r\n                </Button>\r\n                <Button onClick={e => message.success(this.state.html)}>\r\n                  获取值\r\n                </Button>\r\n                <Button onClick={e => this.setState({ newHtml: '' })}>\r\n                  清空值\r\n                </Button>\r\n              </Button.Group>\r\n            </p>\r\n            <Editor onChange={this.onChange} value={this.state.newHtml} />\r\n            <b>HTML: </b>\r\n            {this.state.html}\r\n          </Panel>\r\n        </Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Icon from '../Icon';\r\nimport cx from 'classnames';\r\nimport CSSAnimate from '../CSSAnimate';\r\nimport { Popconfirm, Modal } from 'antd';\r\nimport './style/index.less';\r\nconst confirm = Modal.confirm;\r\nconst noop = _ => {};\r\n/**\r\n * 面板组件\r\n */\r\nclass Panel extends Component {\r\n  static defaultProps = {\r\n    prefix: 'antui-panel'\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapse: props.collapse || false,\r\n      expand: props.expand || false,\r\n      refresh: 0,\r\n      animationName: ''\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const st = {};\r\n    if ('collapse' in nextProps) {\r\n      st.collapse = true;\r\n    } else if ('expand' in nextProps) {\r\n      st.expand = true;\r\n    }\r\n    if (Object.keys(st).length) {\r\n      this.setState(st);\r\n    }\r\n  }\r\n\r\n  onExpand = expand => e => {\r\n    const { onChange } = this.props;\r\n\r\n    this.setState({\r\n      expand,\r\n      collapse: false\r\n    });\r\n\r\n    if (onChange) {\r\n      onChange({\r\n        expand,\r\n        collapse: false\r\n      });\r\n    }\r\n  };\r\n\r\n  onCollapse = collapse => e => {\r\n    const { onChange } = this.props;\r\n\r\n    this.setState({\r\n      collapse,\r\n      expand: false\r\n    });\r\n\r\n    if (onChange) {\r\n      onChange({\r\n        collapse,\r\n        expand: false\r\n      });\r\n    }\r\n  };\r\n\r\n  onRefresh = () => {\r\n    this.setState({\r\n      refresh: this.state.refresh + 1,\r\n      animationName: 'fadeIn'\r\n    });\r\n    this.props.onRefresh && this.props.onRefresh();\r\n  };\r\n\r\n  onClose = () => {\r\n    const { expand } = this.state;\r\n    if (expand) {\r\n      confirm({\r\n        title: '提示',\r\n        content: '您确认要关闭这个面板？',\r\n        onOk: () => {\r\n          this.props.onClose && this.props.onClose();\r\n        }\r\n      });\r\n    } else {\r\n      this.props.onClose && this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { expand, collapse, refresh, animationName } = this.state;\r\n    const {\r\n      theme,\r\n      prefix,\r\n      className,\r\n      title,\r\n      width,\r\n      height,\r\n      style,\r\n      children,\r\n      header,\r\n      cover,\r\n      scroll,\r\n    } = this.props;\r\n\r\n    const classnames = cx(prefix, className, {\r\n      theme: !!theme,\r\n      'panel-fullscreen': !!expand,\r\n      'panel-collapsed': !!collapse,\r\n      cover: !!cover\r\n    });\r\n\r\n    const styles = {\r\n      ...style,\r\n      width\r\n    };\r\n    const bodyStyles = {};\r\n    if (!expand) {\r\n      bodyStyles.height = height;\r\n    }\r\n    if (scroll) {\r\n      bodyStyles.overflow = 'auto';\r\n    }\r\n\r\n    const Header =\r\n      typeof header === 'undefined' ? (\r\n        <div className={`${prefix}-header`}>\r\n          <span className={`${prefix}-header-title`}>{title}</span>\r\n          <span className={`${prefix}-header-controls`}>\r\n            <a className=\"panel-control-loader\" onClick={this.onRefresh}>\r\n              <Icon type=\"refresh\" />\r\n            </a>\r\n            <a\r\n              className=\"panel-control-fullscreen\"\r\n              onClick={this.onExpand(expand ? false : true)}\r\n            >\r\n              <Icon type={`${expand ? 'shrink' : 'enlarge'}`} />\r\n            </a>\r\n            <a\r\n              className=\"panel-control-collapsed\"\r\n              onClick={this.onCollapse(collapse ? false : true)}\r\n            >\r\n              <Icon type={`${collapse ? 'plus' : 'minus'}`} />\r\n            </a>\r\n            <Popconfirm\r\n              title=\"您确认要关闭这个面板？\"\r\n              onConfirm={this.onClose}\r\n              placement=\"topRight\"\r\n            >\r\n              <a\r\n                className=\"panel-control-remove\"\r\n                onClick={expand ? this.onClose : noop}\r\n              >\r\n                <Icon type=\"close\" />\r\n              </a>\r\n            </Popconfirm>\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        header\r\n      );\r\n\r\n    return (\r\n      <div className={classnames} style={styles}>\r\n        {Header}\r\n        <div className={`${prefix}-body`} style={bodyStyles}>\r\n          <CSSAnimate\r\n            className=\"panel-content\"\r\n            type={animationName}\r\n            callback={_ => this.setState({ animationName: '' })}\r\n            key={refresh}\r\n          >\r\n            {children}\r\n          </CSSAnimate>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Panel;\r\n","import Panel from './Panel';\r\n\r\nexport default Panel;","export default {\r\n  // debug: true, // 定义 debug 模式\r\n  zIndex: 1,\r\n  // 下面两个配置，使用其中一个即可显示“上传图片”的tab。但是两者不要同时使用！！！\r\n  uploadImgShowBase64: true,   // 使用 base64 保存图片\r\n  // uploadImgServer: '/upload',  // 上传图片到服务器\r\n  // uploadImgMaxSize: 3 * 1024 * 1024, // 将图片大小限制为 3M\r\n  // uploadImgMaxLength: 5, // 限制一次最多上传 5 张图片\r\n  /* \r\n  // 自定义上传参数\r\n  uploadImgParams: {\r\n    token: 'abcdef12345'  // 属性值会自动进行 encode ，此处无需 encode\r\n  },\r\n  uploadImgHeaders: {\r\n    'Accept': 'text/x-json'\r\n  },\r\n  */\r\n  // uploadFileName: 'yourFileName', // 自定义 fileName\r\n  // withCredentials: true, // withCredentials（跨域传递 cookie）\r\n  // uploadImgTimeout: 3000, // 将 timeout 时间改为 3s\r\n  /* //自定义提示方法\r\n  customAlert = (info) => {\r\n    alert('自定义提示：' + info)\r\n  },\r\n  */\r\n\r\n  // 自定义 onchange 触发的延迟时间，默认为 200 ms\r\n  // onchangeTimeout: 1000, // 单位 ms\r\n  // onchange = html => html,\r\n\r\n  // onfocus = _ => {}; // 点击富文本区域会触发onfocus函数执行\r\n  // onblur = html => (); // 点击富文本以外的区域\r\n\r\n  // pasteFilterStyle: false,  // 关闭掉粘贴样式的过滤\r\n  // pasteIgnoreImg: true, // 忽略粘贴内容中的图片\r\n  // pasteTextHandle: context => content, // 自定义处理粘贴的文本内容\r\n  \r\n  /* \r\n  // 自定义配置颜色（字体颜色、背景色）\r\n  colors: [\r\n    '#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', \r\n    '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'\r\n  ],\r\n  */\r\n\r\n  /*\r\n  // 自定义字体\r\n  fontNames: [\r\n    '宋体',\r\n    '微软雅黑',\r\n    'Arial',\r\n    'Tahoma',\r\n    'Verdana'\r\n  ],\r\n  */\r\n  // menus: [], // 自定义菜单配置\r\n  /*\r\n  [\r\n    'head',  // 标题\r\n    'bold',  // 粗体\r\n    'italic',  // 斜体\r\n    'underline',  // 下划线\r\n    'strikeThrough',  // 删除线\r\n    'foreColor',  // 文字颜色\r\n    'backColor',  // 背景颜色\r\n    'link',  // 插入链接\r\n    'list',  // 列表\r\n    'justify',  // 对齐方式\r\n    'quote',  // 引用\r\n    'emoticon',  // 表情\r\n    'image',  // 插入图片\r\n    'table',  // 表格\r\n    'video',  // 插入视频\r\n    'code',  // 插入代码\r\n    'undo',  // 撤销\r\n    'redo',  // 重复\r\n  ],\r\n  */\r\n}","import React, { PureComponent } from 'react';\r\nimport E from 'wangeditor';\r\nimport defaultConfig from './config';\r\nimport './style/index.less';\r\n\r\nclass Editor extends PureComponent {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      value: props.value\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.value !== nextProps.value) {\r\n      this.setState({\r\n        value: nextProps.value\r\n      });\r\n      this.onChange(nextProps.value);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { value, otherProps } = this.props;\r\n    this.editor = new E(this.editorDom);\r\n    this.editor.customConfig = {\r\n      ...defaultConfig,\r\n      onchange: this.onChange,\r\n      ...otherProps\r\n    };\r\n    this.editor.create();\r\n    this.editor.txt.html(value);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if ('value' in this.props && prevState.value !== this.state.value) {\r\n      this.editor.txt.html(this.state.value || '');\r\n    }\r\n  }\r\n\r\n  onChange = html => {\r\n    const { onChange } = this.props;\r\n    if (onChange) onChange(html);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"antui-editor\"\r\n        ref={node => {\r\n          this.editorDom = node;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Editor;\r\n","import Editor from './Editor';\r\n\r\nexport default Editor;"],"sourceRoot":""}